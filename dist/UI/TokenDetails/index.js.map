{
  "version": 3,
  "sources": ["../../../src/UI/TokenDetails/index.tsx", "../../../src/assets/icons/EGLD.svg"],
  "sourcesContent": ["import React, { Component } from 'react';\nimport { faDiamond } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport EgldIcon from 'assets/icons/EGLD.svg';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { getEgldLabel } from 'utils/network/getEgldLabel';\nimport { getIdentifierType } from 'utils/validation/getIdentifierType';\nimport { WithClassnameType } from '../types';\nimport { Combined, Simple } from './TokenSymbol';\n\nconst getIdentifierWithoutNonce = (identifier: string) => {\n  const tokenParts = identifier.split('-');\n\n  return identifier.includes('-')\n    ? `${tokenParts[0]}-${tokenParts[1]}`\n    : identifier;\n};\n\nexport interface TokenIconPropsType {\n  token: string;\n  combined?: boolean | undefined;\n  small?: boolean | undefined;\n  tokenAvatar?: string;\n}\n\nexport interface TokenIconType extends TokenIconPropsType {\n  symbol: string;\n  label: string;\n  icon: () => JSX.Element;\n}\n\nfunction getIconComponent({\n  isEgldTransfer,\n  tokenAvatar,\n  styles\n}: {\n  isEgldTransfer: boolean;\n  tokenAvatar?: string;\n} & WithStylesImportType) {\n  if (tokenAvatar && tokenAvatar !== 'undefined') {\n    return <img className={styles?.tokenSymbolCustomToken} src={tokenAvatar} />;\n  }\n  return isEgldTransfer ? <EgldIcon /> : <FontAwesomeIcon icon={faDiamond} />;\n}\n\nconst getIcon = withStyles(getIconComponent, {\n  ssrStyles: () => import('UI/TokenDetails/tokenDetailsStyles.scss'),\n  clientStyles: () => require('UI/TokenDetails/tokenDetailsStyles.scss').default\n});\n\nconst getDetails = (token: string, tokenAvatar?: string): TokenIconType => {\n  const egldLabel = getEgldLabel();\n  const isEgldTransfer = token === egldLabel;\n\n  return {\n    token,\n    symbol: token ? token.split('-')[0] : '',\n    label: token,\n    icon: () => getIcon({ isEgldTransfer, tokenAvatar })\n  };\n};\n\nconst getTokenIdentifier = (token: string) => {\n  const { isNft } = getIdentifierType(token);\n  const identifier = isNft ? token : getIdentifierWithoutNonce(token);\n  return identifier;\n};\n\nexport class TokenDetails extends Component {\n  static Token = (props: TokenIconPropsType) => <>{props.token}</>;\n  static Symbol = (props: TokenIconPropsType) => (\n    <>\n      {\n        getDetails(getIdentifierWithoutNonce(props.token), props.tokenAvatar)\n          .symbol\n      }\n    </>\n  );\n  static Label = (props: TokenIconPropsType) => {\n    return (\n      <>\n        {getDetails(getTokenIdentifier(props.token), props.tokenAvatar).label}\n      </>\n    );\n  };\n  static Icon = (props: TokenIconPropsType & WithClassnameType) => {\n    const Component: any =\n      process.env.NODE_ENV !== 'test'\n        ? getDetails(getTokenIdentifier(props.token), props.tokenAvatar).icon\n        : () => null;\n\n    return (\n      <div className={props.className ?? 'dapp-token-details-icon'}>\n        {props.combined ? (\n          <Combined small={props.small}>\n            <Component />\n          </Combined>\n        ) : (\n          <Simple>\n            <Component />\n          </Simple>\n        )}\n      </div>\n    );\n  };\n  render() {\n    return null;\n  }\n}\n", "import * as React from \"react\";\nconst SvgEgld = props => <svg viewBox=\"0 0 300 300\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"expanded\" {...props}><rect width={300} height={300} rx={150} fill=\"black\" id=\"egld-token\" /><path d=\"M158.482 149.928L228.714 112.529L216.919 90L152.575 115.854C150.923 116.523 149.077 116.523 147.425 115.854L83.0814 90L71.25 112.602L141.482 150L71.25 187.398L83.0814 210L147.425 183.948C149.077 183.279 150.923 183.279 152.575 183.948L216.919 209.874L228.75 187.272L158.482 149.928Z\" fill=\"#23F7DD\" /></svg>;\nexport default SvgEgld;"],
  "mappings": "49PAAA,yCACA,8DACA,iECFA,4BACA,GAAM,GAAU,GAAS,gBAAC,SAAI,QAAQ,cAAc,KAAK,OAAO,MAAM,6BAA6B,UAAU,YAAe,GAAO,gBAAC,QAAK,MAAO,IAAK,OAAQ,IAAK,GAAI,IAAK,KAAK,QAAQ,GAAG,aAAa,EAAE,gBAAC,QAAK,EAAE,6RAA6R,KAAK,UAAU,CAAE,EACzf,EAAQ,EDIf,IAIA,GAAM,GAA4B,AAAC,GAAuB,CACxD,GAAM,GAAa,EAAW,MAAM,GAAG,EAEvC,MAAO,GAAW,SAAS,GAAG,EAC1B,GAAG,EAAW,MAAM,EAAW,KAC/B,CACN,EAeA,WAA0B,CACxB,iBACA,cACA,UAIwB,CACxB,MAAI,IAAe,IAAgB,YAC1B,gBAAC,OAAI,UAAW,iBAAQ,uBAAwB,IAAK,EAAa,EAEpE,EAAiB,gBAAC,MAAS,EAAK,gBAAC,GAAgB,KAAM,EAAW,CAC3E,CAEA,GAAM,GAAU,EAAW,EAAkB,CAC3C,UAAW,IAAM,OAAO,2BACxB,aAAc,IAAM,WAAmD,OACzE,CAAC,EAEK,EAAa,CAAC,EAAe,IAAwC,CACzE,GAAM,GAAY,EAAa,EACzB,EAAiB,IAAU,EAEjC,MAAO,CACL,QACA,OAAQ,EAAQ,EAAM,MAAM,GAAG,EAAE,GAAK,GACtC,MAAO,EACP,KAAM,IAAM,EAAQ,CAAE,iBAAgB,aAAY,CAAC,CACrD,CACF,EAEM,EAAqB,AAAC,GAAkB,CAC5C,GAAM,CAAE,SAAU,EAAkB,CAAK,EAEzC,MADmB,GAAQ,EAAQ,EAA0B,CAAK,CAEpE,EAEa,EAAN,aAA2B,EAAU,CAqC1C,QAAS,CACP,MAAO,KACT,CACF,EAvCE,AADW,EACJ,MAAQ,AAAC,GAA8B,gCAAG,EAAM,KAAM,EAC7D,AAFW,EAEJ,OAAS,AAAC,GACf,gCAEI,EAAW,EAA0B,EAAM,KAAK,EAAG,EAAM,WAAW,EACjE,MAEP,EAEF,AAVW,EAUJ,MAAQ,AAAC,GAEZ,gCACG,EAAW,EAAmB,EAAM,KAAK,EAAG,EAAM,WAAW,EAAE,KAClE,EAGJ,AAjBW,EAiBJ,KAAO,AAAC,GAAkD,CArFnE,MAsFI,GAAM,GAEA,EAAW,EAAmB,EAAM,KAAK,EAAG,EAAM,WAAW,EAAE,KAGrE,MACE,iBAAC,OAAI,UAAW,KAAM,YAAN,OAAmB,2BAChC,EAAM,SACL,gBAAC,GAAS,MAAO,EAAM,OACrB,gBAAC,MAAU,CACb,EAEA,gBAAC,OACC,gBAAC,MAAU,CACb,CAEJ,CAEJ",
  "names": []
}
