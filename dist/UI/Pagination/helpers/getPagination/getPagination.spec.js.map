{
  "version": 3,
  "sources": ["../../../../../src/UI/Pagination/helpers/getPagination/getPagination.spec.ts"],
  "sourcesContent": ["import { ELLIPSIS } from 'constants/index';\n\nimport { getPagination } from '../getPagination';\n\ndescribe('Pagination control function.', () => {\n  const stringifyPaginationItems = <PaginationItemType>(\n    paginateItems: PaginationItemType[]\n  ) => paginateItems.map((paginationItem) => String(paginationItem));\n\n  test('Watching page 1 of 2.', () => {\n    const expectedResult = stringifyPaginationItems([1, 2]);\n    const actualResult = getPagination({ currentPage: 1, totalPages: 2 });\n\n    expect(actualResult).toStrictEqual(expectedResult);\n  });\n\n  test('Watching page 1 of 7.', () => {\n    const expectedResult = stringifyPaginationItems([1, 2, 3, 4, 5, 6, 7]);\n    const actualResult = getPagination({ currentPage: 1, totalPages: 7 });\n\n    expect(actualResult).toStrictEqual(expectedResult);\n  });\n\n  test('Watching page 7 of 7.', () => {\n    const expectedResult = stringifyPaginationItems([1, 2, 3, 4, 5, 6, 7]);\n    const actualResult = getPagination({ currentPage: 7, totalPages: 7 });\n\n    expect(actualResult).toStrictEqual(expectedResult);\n  });\n\n  test('Watching page 1 of 59.', () => {\n    const expectedResultArray = [1, 2, 3, ELLIPSIS, 57, 58, 59];\n    const expectedResult = stringifyPaginationItems(expectedResultArray);\n    const actualResult = getPagination({ currentPage: 1, totalPages: 59 });\n\n    expect(actualResult).toStrictEqual(expectedResult);\n  });\n\n  test('Watching page 3 of 59.', () => {\n    const expectedResultArray = [1, 2, 3, 4, ELLIPSIS, 58, 59];\n    const expectedResult = stringifyPaginationItems(expectedResultArray);\n    const actualResult = getPagination({ currentPage: 3, totalPages: 59 });\n\n    expect(actualResult).toStrictEqual(expectedResult);\n  });\n\n  test('Watching page 4 of 569.', () => {\n    const expectedResultArray = [1, 2, 3, 4, 5, ELLIPSIS, 569];\n    const expectedResult = stringifyPaginationItems(expectedResultArray);\n    const actualResult = getPagination({ currentPage: 4, totalPages: 569 });\n\n    expect(actualResult).toStrictEqual(expectedResult);\n  });\n\n  test('Watching page 444 of 569.', () => {\n    const expectedResultArray = [1, ELLIPSIS, 443, 444, 445, ELLIPSIS, 569];\n    const expectedResult = stringifyPaginationItems(expectedResultArray);\n    const actualResult = getPagination({ currentPage: 444, totalPages: 569 });\n\n    expect(actualResult).toStrictEqual(expectedResult);\n  });\n\n  test('Watching page 666 of 669.', () => {\n    const expectedResultArray = [1, ELLIPSIS, 665, 666, 667, 668, 669];\n    const expectedResult = stringifyPaginationItems(expectedResultArray);\n    const actualResult = getPagination({ currentPage: 666, totalPages: 669 });\n\n    expect(actualResult).toStrictEqual(expectedResult);\n  });\n\n  test('Watching page 1548 of 1550.', () => {\n    const expectedResultArray = [1, 2, ELLIPSIS, 1547, 1548, 1549, 1550];\n    const expectedResult = stringifyPaginationItems(expectedResultArray);\n    const actualResult = getPagination({ currentPage: 1548, totalPages: 1550 });\n\n    expect(actualResult).toStrictEqual(expectedResult);\n  });\n\n  test('Watching page 2004 of 2005.', () => {\n    const expectedResultArray = [1, 2, 3, ELLIPSIS, 2003, 2004, 2005];\n    const expectedResult = stringifyPaginationItems(expectedResultArray);\n    const actualResult = getPagination({ currentPage: 2004, totalPages: 2005 });\n\n    expect(actualResult).toStrictEqual(expectedResult);\n  });\n\n  test('Watching page 2014 of 2014.', () => {\n    const expectedResultArray = [1, 2, 3, ELLIPSIS, 2012, 2013, 2014];\n    const expectedResult = stringifyPaginationItems(expectedResultArray);\n    const actualResult = getPagination({ currentPage: 2014, totalPages: 2014 });\n\n    expect(actualResult).toStrictEqual(expectedResult);\n  });\n});\n"],
  "mappings": "ooDAAA,QAIA,SAAS,+BAAgC,IAAM,CAC7C,GAAM,GAA2B,AAC/B,GACG,EAAc,IAAI,AAAC,GAAmB,OAAO,CAAc,CAAC,EAEjE,KAAK,wBAAyB,IAAM,CAClC,GAAM,GAAiB,EAAyB,CAAC,EAAG,CAAC,CAAC,EAChD,EAAe,EAAc,CAAE,YAAa,EAAG,WAAY,CAAE,CAAC,EAEpE,OAAO,CAAY,EAAE,cAAc,CAAc,CACnD,CAAC,EAED,KAAK,wBAAyB,IAAM,CAClC,GAAM,GAAiB,EAAyB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CAAC,EAC/D,EAAe,EAAc,CAAE,YAAa,EAAG,WAAY,CAAE,CAAC,EAEpE,OAAO,CAAY,EAAE,cAAc,CAAc,CACnD,CAAC,EAED,KAAK,wBAAyB,IAAM,CAClC,GAAM,GAAiB,EAAyB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CAAC,EAC/D,EAAe,EAAc,CAAE,YAAa,EAAG,WAAY,CAAE,CAAC,EAEpE,OAAO,CAAY,EAAE,cAAc,CAAc,CACnD,CAAC,EAED,KAAK,yBAA0B,IAAM,CAEnC,GAAM,GAAiB,EADK,CAAC,EAAG,EAAG,EAAG,EAAU,GAAI,GAAI,EAAE,CACS,EAC7D,EAAe,EAAc,CAAE,YAAa,EAAG,WAAY,EAAG,CAAC,EAErE,OAAO,CAAY,EAAE,cAAc,CAAc,CACnD,CAAC,EAED,KAAK,yBAA0B,IAAM,CAEnC,GAAM,GAAiB,EADK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAU,GAAI,EAAE,CACU,EAC7D,EAAe,EAAc,CAAE,YAAa,EAAG,WAAY,EAAG,CAAC,EAErE,OAAO,CAAY,EAAE,cAAc,CAAc,CACnD,CAAC,EAED,KAAK,0BAA2B,IAAM,CAEpC,GAAM,GAAiB,EADK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAU,GAAG,CACU,EAC7D,EAAe,EAAc,CAAE,YAAa,EAAG,WAAY,GAAI,CAAC,EAEtE,OAAO,CAAY,EAAE,cAAc,CAAc,CACnD,CAAC,EAED,KAAK,4BAA6B,IAAM,CAEtC,GAAM,GAAiB,EADK,CAAC,EAAG,EAAU,IAAK,IAAK,IAAK,EAAU,GAAG,CACH,EAC7D,EAAe,EAAc,CAAE,YAAa,IAAK,WAAY,GAAI,CAAC,EAExE,OAAO,CAAY,EAAE,cAAc,CAAc,CACnD,CAAC,EAED,KAAK,4BAA6B,IAAM,CAEtC,GAAM,GAAiB,EADK,CAAC,EAAG,EAAU,IAAK,IAAK,IAAK,IAAK,GAAG,CACE,EAC7D,EAAe,EAAc,CAAE,YAAa,IAAK,WAAY,GAAI,CAAC,EAExE,OAAO,CAAY,EAAE,cAAc,CAAc,CACnD,CAAC,EAED,KAAK,8BAA+B,IAAM,CAExC,GAAM,GAAiB,EADK,CAAC,EAAG,EAAG,EAAU,KAAM,KAAM,KAAM,IAAI,CACA,EAC7D,EAAe,EAAc,CAAE,YAAa,KAAM,WAAY,IAAK,CAAC,EAE1E,OAAO,CAAY,EAAE,cAAc,CAAc,CACnD,CAAC,EAED,KAAK,8BAA+B,IAAM,CAExC,GAAM,GAAiB,EADK,CAAC,EAAG,EAAG,EAAG,EAAU,KAAM,KAAM,IAAI,CACG,EAC7D,EAAe,EAAc,CAAE,YAAa,KAAM,WAAY,IAAK,CAAC,EAE1E,OAAO,CAAY,EAAE,cAAc,CAAc,CACnD,CAAC,EAED,KAAK,8BAA+B,IAAM,CAExC,GAAM,GAAiB,EADK,CAAC,EAAG,EAAG,EAAG,EAAU,KAAM,KAAM,IAAI,CACG,EAC7D,EAAe,EAAc,CAAE,YAAa,KAAM,WAAY,IAAK,CAAC,EAE1E,OAAO,CAAY,EAAE,cAAc,CAAc,CACnD,CAAC,CACH,CAAC",
  "names": []
}
