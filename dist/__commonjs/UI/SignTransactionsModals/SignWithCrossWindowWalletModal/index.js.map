{
  "version": 3,
  "sources": ["../../../../../node_modules/base64-js/index.js", "../../../../../node_modules/ieee754/index.js", "../../../../../node_modules/node-stdlib-browser/node_modules/buffer/index.js", "../../../../../node_modules/process/browser.js", "../../../../../node_modules/node-stdlib-browser/helpers/esbuild/shim.js", "../../../../../src/constants/dataTestIds.enum.ts", "../../../../../src/constants/errorsMessages.ts", "../../../../../src/constants/extension.constants.ts", "../../../../../src/constants/guardianActions.enum.ts", "../../../../../src/constants/ledger.constants.ts", "../../../../../src/constants/ledgerErrorCodes.ts", "../../../../../src/constants/mnemonicWords.ts", "../../../../../src/types/signedMessage.types.ts", "../../../../../src/types/account.types.ts", "../../../../../src/types/dappProvider.types.ts", "../../../../../src/lib/sdkWebWalletCrossWindowProvider.ts", "../../../../../src/types/enums.types.ts", "../../../../../src/types/login.types.ts", "../../../../../src/types/network.types.ts", "../../../../../src/types/serverTransactions.types.ts", "../../../../../src/types/suspiciousLink.ts", "../../../../../src/types/transactions.types.ts", "../../../../../src/types/dappConfig.types.ts", "../../../../../src/types/index.ts", "../../../../../src/constants/network.ts", "../../../../../src/constants/transactionStatus.ts", "../../../../../src/constants/web-wallet.constants.ts", "../../../../../src/lib/sdkDappUtils.ts", "../../../../../src/constants/browser.ts", "../../../../../src/constants/index.ts", "../../../../../src/utils/dateTime/getUnixTimestamp.ts", "../../../../../src/utils/dateTime/getUnixTimestampWithAddedMilliseconds.ts", "../../../../../src/utils/dateTime/getUnixTimestampWithAddedSeconds.ts", "../../../../../src/utils/dateTime/index.ts", "../../../../../src/utils/storage/local.ts", "../../../../../src/utils/storage/session.ts", "../../../../../src/utils/storage/index.ts", "../../../../../src/reduxStore/commonActions.ts", "../../../../../src/reduxStore/slices/accountInfoSlice.ts", "../../../../../src/storage/local.ts", "../../../../../src/reduxStore/slices/loginInfoSlice.ts", "../../../../../src/reduxStore/slices/modalsSlice.ts", "../../../../../src/utils/isWindowAvailable.ts", "../../../../../src/utils/window/getWindowLocation.ts", "../../../../../src/utils/window/addOriginToLocationPath.ts", "../../../../../src/utils/window/getDefaultCallbackUrl.ts", "../../../../../src/utils/window/redirect.ts", "../../../../../src/utils/window/index.ts", "../../../../../src/utils/redirect.ts", "../../../../../src/utils/internal/optionalRedirect.ts", "../../../../../src/utils/internal/getRandomAddressFromNetwork.ts", "../../../../../src/utils/internal/getLedgerErrorCodes.ts", "../../../../../src/utils/internal/index.ts", "../../../../../src/reduxStore/slices/networkConfigSlice.ts", "../../../../../src/reduxStore/slices/signedMessageInfoSlice.ts", "../../../../../src/reduxStore/slices/toastsSlice.ts", "../../../../../src/reduxStore/slices/transactionsInfoSlice.ts", "../../../../../src/utils/transactions/transactionStateByStatus.ts", "../../../../../src/reduxStore/slices/transactionsSlice.ts", "../../../../../src/reduxStore/slices/batchTransactionsSlice.ts", "../../../../../src/reduxStore/slices/dappConfigSlice.ts", "../../../../../src/reduxStore/slices/index.ts", "../../../../../src/types/reducers.types.ts", "../../../../../src/reduxStore/reducers.ts", "../../../../../src/reduxStore/persistedRootReducer.ts", "../../../../../src/reduxStore/rootReducer.ts", "../../../../../src/reduxStore/reduxPersistIgnoredActions.ts", "../../../../../src/reduxStore/persistReduxStore.ts", "../../../../../node_modules/lodash/_freeGlobal.js", "../../../../../node_modules/lodash/_root.js", "../../../../../node_modules/lodash/_Symbol.js", "../../../../../node_modules/lodash/_getRawTag.js", "../../../../../node_modules/lodash/_objectToString.js", "../../../../../node_modules/lodash/_baseGetTag.js", "../../../../../node_modules/lodash/isArray.js", "../../../../../node_modules/lodash/isObjectLike.js", "../../../../../node_modules/lodash/isString.js", "../../../../../node_modules/lodash/isObject.js", "../../../../../node_modules/lodash/isFunction.js", "../../../../../node_modules/lodash/_coreJsData.js", "../../../../../node_modules/lodash/_isMasked.js", "../../../../../node_modules/lodash/_toSource.js", "../../../../../node_modules/lodash/_baseIsNative.js", "../../../../../node_modules/lodash/_getValue.js", "../../../../../node_modules/lodash/_getNative.js", "../../../../../node_modules/lodash/_nativeCreate.js", "../../../../../node_modules/lodash/_hashClear.js", "../../../../../node_modules/lodash/_hashDelete.js", "../../../../../node_modules/lodash/_hashGet.js", "../../../../../node_modules/lodash/_hashHas.js", "../../../../../node_modules/lodash/_hashSet.js", "../../../../../node_modules/lodash/_Hash.js", "../../../../../node_modules/lodash/_listCacheClear.js", "../../../../../node_modules/lodash/eq.js", "../../../../../node_modules/lodash/_assocIndexOf.js", "../../../../../node_modules/lodash/_listCacheDelete.js", "../../../../../node_modules/lodash/_listCacheGet.js", "../../../../../node_modules/lodash/_listCacheHas.js", "../../../../../node_modules/lodash/_listCacheSet.js", "../../../../../node_modules/lodash/_ListCache.js", "../../../../../node_modules/lodash/_Map.js", "../../../../../node_modules/lodash/_mapCacheClear.js", "../../../../../node_modules/lodash/_isKeyable.js", "../../../../../node_modules/lodash/_getMapData.js", "../../../../../node_modules/lodash/_mapCacheDelete.js", "../../../../../node_modules/lodash/_mapCacheGet.js", "../../../../../node_modules/lodash/_mapCacheHas.js", "../../../../../node_modules/lodash/_mapCacheSet.js", "../../../../../node_modules/lodash/_MapCache.js", "../../../../../node_modules/lodash/_setCacheAdd.js", "../../../../../node_modules/lodash/_setCacheHas.js", "../../../../../node_modules/lodash/_SetCache.js", "../../../../../node_modules/lodash/_baseFindIndex.js", "../../../../../node_modules/lodash/_baseIsNaN.js", "../../../../../node_modules/lodash/_strictIndexOf.js", "../../../../../node_modules/lodash/_baseIndexOf.js", "../../../../../node_modules/lodash/_arrayIncludes.js", "../../../../../node_modules/lodash/_arrayIncludesWith.js", "../../../../../node_modules/lodash/_cacheHas.js", "../../../../../node_modules/lodash/_Set.js", "../../../../../node_modules/lodash/noop.js", "../../../../../node_modules/lodash/_setToArray.js", "../../../../../node_modules/lodash/_createSet.js", "../../../../../node_modules/lodash/_baseUniq.js", "../../../../../node_modules/lodash/uniq.js", "../../../../../src/assets/sass/main.scss", "../../../../../src/UI/DappModal/dappModalStyles.scss", "../../../../../src/components/TransactionStatusToast/transactionStatusToastStyles.scss", "../../../../../src/UI/PageState/pageState.styles.scss", "../../../../../src/UI/SignTransactionsModals/components/SignWaitingScreenModal/signWaitingScreenModal.styles.scss", "../../../../../src/UI/SignTransactionsModals/SignWithCrossWindowWalletModal/index.tsx", "../../../../../src/UI/SignTransactionsModals/SignWithCrossWindowWalletModal/SignWithCrossWindowWalletModal.tsx", "../../../../../src/reduxStore/DappProviderContext.ts", "../../../../../src/reduxStore/store.ts", "../../../../../src/reduxStore/middlewares/loginSessionMiddleware.ts", "../../../../../src/reduxStore/persistConfig.ts", "../../../../../src/utils/environment/isWebEnvironment.ts", "../../../../../src/reduxStore/selectors/index.ts", "../../../../../src/reduxStore/selectors/accountInfoSelectors.ts", "../../../../../src/reduxStore/selectors/helpers.ts", "../../../../../src/reduxStore/selectors/dappConfigSelector.ts", "../../../../../src/reduxStore/selectors/loginInfoSelectors.ts", "../../../../../src/reduxStore/selectors/modalsSelectors.ts", "../../../../../src/reduxStore/selectors/networkConfigSelectors.ts", "../../../../../src/reduxStore/selectors/signedMessageInfoSelectors.ts", "../../../../../src/reduxStore/selectors/toastsSelectors.ts", "../../../../../src/reduxStore/selectors/transactionsInfoSelectors.ts", "../../../../../src/reduxStore/selectors/transactionsSelectors.ts", "../../../../../src/models/newTransaction.ts", "../../../../../src/utils/transactions/getDataPayloadForTransaction.ts", "../../../../../src/utils/decoders/index.ts", "../../../../../src/utils/decoders/base64Utils.ts", "../../../../../src/utils/decoders/decodePart.ts", "../../../../../src/utils/decoders/isUtf8.ts", "../../../../../src/utils/decoders/isAscii.ts", "../../../../../src/utils/decoders/stringContainsNumbers.ts", "../../../../../src/utils/transactions/isGuardianTx.tsx", "../../../../../src/utils/transactions/index.ts", "../../../../../src/utils/transactions/builtCallbackUrl.ts", "../../../../../src/utils/transactions/getAllTransactionsLink.ts", "../../../../../src/utils/transactions/getAreTransactionsOnSameShard.ts", "../../../../../src/services/transactions/isCrossShardTransaction.ts", "../../../../../src/utils/account/getShardOfAddress.ts", "../../../../../src/utils/smartContracts.ts", "../../../../../src/utils/account/addressIsValid.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/index.tsx", "../../../../../src/utils/transactions/getInterpretedTransaction/getInterpretedTransaction.ts", "../../../../../src/utils/transactions/getTokenFromData.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/index.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/explorerUrlBuilder.ts", "../../../../../src/apiCalls/endpoints.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getTransactionTokens.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getTransactionReceiverAssets.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getTransactionReceiver.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getTransactionMethod.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getExplorerLink.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getTransactionTransferType.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getHumanReadableTimeFormat.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getOperationsMessages.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getReceiptMessage.ts", "../../../../../src/utils/operations/formatAmount.ts", "../../../../../src/utils/validation/stringIsInteger.ts", "../../../../../src/utils/operations/pipe.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getScResultsMessages.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getTransactionValue/index.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getTransactionValue/getTransactionValue.ts", "../../../../../src/types/tokens.types.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getTransactionActionNftText.ts", "../../../../../src/utils/operations/index.ts", "../../../../../src/utils/operations/denominate.ts", "../../../../../src/utils/operations/nominate.ts", "../../../../../src/utils/operations/parseAmount.ts", "../../../../../src/utils/operations/calculateFeeLimit.ts", "../../../../../src/utils/validation/index.ts", "../../../../../src/utils/validation/stringIsFloat.ts", "../../../../../src/utils/validation/maxDecimals.ts", "../../../../../src/utils/validation/getIdentifierType.ts", "../../../../../src/utils/operations/getUsdValue.tsx", "../../../../../src/utils/operations/timeRemaining.ts", "../../../../../src/utils/operations/truncate.tsx", "../../../../../src/utils/operations/ledger/index.ts", "../../../../../src/utils/operations/ledger/getLedgerVersionOptions.ts", "../../../../../src/utils/operations/calculateFeeInFiat.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getTransactionActionTokenText.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/constants.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getTransactionValue/helpers/index.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getTransactionValue/helpers/getTitleText.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getTransactionValue/helpers/getEgldValueData.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getTransactionValue/helpers/getValueFromDataField.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getTransactionValue/helpers/getValueFromOperations.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getVisibleOperations.ts", "../../../../../src/utils/transactions/getInterpretedTransaction/helpers/getTransactionValue/helpers/getValueFromActions.ts", "../../../../../src/utils/transactions/getTransactionLink.ts", "../../../../../src/utils/transactions/getUnHighlightedDataFieldParts.ts", "../../../../../src/utils/transactions/isTokenTransfer.ts", "../../../../../src/utils/transactions/parseMultiEsdtTransferData.ts", "../../../../../src/utils/getAllStringOccurrences.ts", "../../../../../src/utils/transactions/parseTransactionAfterSigning.ts", "../../../../../src/models/index.ts", "../../../../../src/models/TransactionParameter.ts", "../../../../../src/utils/transactions/removeTransactionParamsFromUrl.ts", "../../../../../src/utils/removeSearchParamsFromUrl.ts", "../../../../../src/utils/clearNavigationHistory.ts", "../../../../../src/utils/parseNavigationParams.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/index.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getEventListDataHexValue.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getEventListHighlight.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getOperationDirection.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getScResultsDecodedData.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getScResultsHighlight.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getScamFlag.tsx", "../../../../../src/utils/transactions/transactionInfoHelpers/getShardText.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getTransactionFee.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getTransactionLinkWithLabel.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getTransactionMessages.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getTransactionStatus.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getTransactionStatusText.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/getTrimmedHash.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/transactionActionUnwrapper/index.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/transactionActionUnwrapper/transactionActionUnwrapper.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/transactionActionUnwrapper/helpers/esdtNftUnwrapper.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/transactionActionUnwrapper/helpers/mexUnwrapper.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/transactionActionUnwrapper/helpers/stakeUnwrapper.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/useDataDecode.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/decodeForDisplay/index.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/decodeForDisplay/decodeForDisplay.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/decodeForDisplay/helpers/index.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/decodeForDisplay/helpers/decodeByMethod.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/decodeForDisplay/helpers/getDisplayValueAndValidationWarnings.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/decodeForDisplay/helpers/getHexValidationWarnings.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/decodeForDisplay/helpers/getSmartDecodedParts.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/useDataDecodeMethod.ts", "../../../../../src/utils/transactions/transactionInfoHelpers/useGetOperationList.tsx", "../../../../../src/utils/transactions/getOperationsDetails.ts", "../../../../../src/UI/SignTransactionsModals/components/index.tsx", "../../../../../src/UI/SignTransactionsModals/components/ConfirmationScreen.tsx", "../../../../../src/hooks/index.ts", "../../../../../src/hooks/useGetNetworkConfig.ts", "../../../../../src/hooks/useUpdateEffect.ts", "../../../../../src/hooks/useGetNotification.ts", "../../../../../src/hooks/transactions/index.ts", "../../../../../src/hooks/transactions/useCheckTransactionStatus/index.ts", "../../../../../src/hooks/transactions/useCheckTransactionStatus/useCheckTransactionStatus.ts", "../../../../../src/hooks/transactions/useGetPendingTransactions.ts", "../../../../../src/utils/account/refreshAccount.tsx", "../../../../../src/providers/index.ts", "../../../../../src/providers/accountProvider.ts", "../../../../../src/providers/utils.ts", "../../../../../src/lib/sdkWebWalletIframeProvider.ts", "../../../../../src/utils/walletconnect/__mocks__/sdkWalletconnectProvider.ts", "../../../../../src/utils/account/getAccount.tsx", "../../../../../src/apiCalls/accounts/getAccountFromApi.ts", "../../../../../src/apiCalls/utils/index.ts", "../../../../../src/apiCalls/utils/axiosFetcher.ts", "../../../../../src/apiCalls/utils/axiosInstance.ts", "../../../../../src/apiCalls/utils/getCleanApiAddress.ts", "../../../../../src/apiCalls/utils/getScamAddressData.ts", "../../../../../src/apiCalls/utils/useApiFetch.ts", "../../../../../src/utils/account/getAddress.tsx", "../../../../../src/utils/account/getIsProviderEqualTo.ts", "../../../../../src/utils/account/getAccountProviderType.ts", "../../../../../src/utils/account/getSearchParamAddress.ts", "../../../../../src/utils/account/getLatestNonce.tsx", "../../../../../src/hooks/transactions/useCheckTransactionStatus/checkBatch.ts", "../../../../../src/apiCalls/transactions/index.ts", "../../../../../src/apiCalls/transactions/sendSignedTransactions.ts", "../../../../../src/apiCalls/transactions/sendSignedBatchTransactions.ts", "../../../../../src/hooks/transactions/helpers/buildBatchId.ts", "../../../../../src/apiCalls/transactions/getTransactionsByHashes.ts", "../../../../../src/apiCalls/transactions/getTransactions.ts", "../../../../../src/apiCalls/transactions/helpers.ts", "../../../../../src/apiCalls/transactions/getTransactionsCount.ts", "../../../../../src/apiCalls/transactions/getTransaction.ts", "../../../../../src/apiCalls/transactions/getTransactions.types.ts", "../../../../../src/apiCalls/transactions/useGetTransactionsFromApi.ts", "../../../../../src/utils/account/index.ts", "../../../../../src/utils/account/getAccountBalance.tsx", "../../../../../src/utils/account/getWebviewToken.ts", "../../../../../src/utils/account/getAccessTokenFromSearchParams.ts", "../../../../../src/utils/account/loginWithExternalProvider.ts", "../../../../../src/utils/account/setNonce.tsx", "../../../../../src/utils/account/signMessage.ts", "../../../../../src/hooks/transactions/useCheckTransactionStatus/getPendingTransactions.ts", "../../../../../src/hooks/transactions/useCheckTransactionStatus/manageFailedTransactions.ts", "../../../../../src/hooks/transactions/useCheckTransactionStatus/manageTimedOutTransactions.ts", "../../../../../src/hooks/transactions/useGetActiveTransactionsStatus.ts", "../../../../../src/hooks/transactions/useGetFailedTransactions.ts", "../../../../../src/hooks/transactions/useGetLastPendingTransactionHash.ts", "../../../../../src/hooks/transactions/useGetPollingInterval.ts", "../../../../../src/hooks/transactions/useGetSignTransactionsError.ts", "../../../../../src/hooks/transactions/useGetSignedTransactions.ts", "../../../../../src/hooks/transactions/useGetSuccessfulTransactions.ts", "../../../../../src/hooks/transactions/useGetTokenDetails.tsx", "../../../../../src/apiCalls/tokens/getPersistedToken.ts", "../../../../../src/apiCalls/tokens/tokenDataStorage.ts", "../../../../../src/hooks/transactions/useGetTransactionDisplayInfo.ts", "../../../../../src/hooks/transactions/useParseMultiEsdtTransferData.ts", "../../../../../src/utils/transactions/parseMultiEsdtTransferDataForMultipleTransactions.ts", "../../../../../src/hooks/transactions/useParseSignedTransactions.tsx", "../../../../../src/hooks/transactions/useSignMultipleTransactions.tsx", "../../../../../src/apiCalls/accounts/useGetAccountFromApi.ts", "../../../../../src/hooks/transactions/helpers/index.ts", "../../../../../src/hooks/transactions/helpers/checkIsValidSender.ts", "../../../../../src/hooks/transactions/helpers/getShouldMoveTransactionsToSignedState.ts", "../../../../../src/hooks/transactions/helpers/useSetTransactionNonces.ts", "../../../../../src/hooks/transactions/helpers/computeTransactionsNonce.ts", "../../../../../src/services/transactions/computeTransactionNonce.ts", "../../../../../src/hooks/transactions/helpers/getAreAllTransactionsSignedByGuardian.ts", "../../../../../src/hooks/transactions/helpers/checkNeedsGuardianSigning.ts", "../../../../../src/apiCalls/configuration/index.ts", "../../../../../src/apiCalls/configuration/getServerConfigurationForEnvironment.ts", "../../../../../src/apiCalls/configuration/getServerConfiguration.ts", "../../../../../src/apiCalls/configuration/getNetworkConfig.ts", "../../../../../src/apiCalls/configuration/getApiAddressForChainId.ts", "../../../../../src/apiCalls/configuration/getEnvironmentForChainId.ts", "../../../../../src/apiCalls/configuration/useGetNetworkConfigFromApi.ts", "../../../../../src/apiCalls/configuration/useGetServerConfigurationFromApi.ts", "../../../../../src/components/ProviderInitializer/helpers/index.ts", "../../../../../src/components/ProviderInitializer/helpers/getOperaProvider.ts", "../../../../../src/components/ProviderInitializer/helpers/getExtensionProvider.ts", "../../../../../src/components/ProviderInitializer/helpers/getCrossWindowProvider.ts", "../../../../../src/components/ProviderInitializer/helpers/getIframeProvider.ts", "../../../../../src/components/ProviderInitializer/helpers/processModifiedAccount.ts", "../../../../../src/components/ProviderInitializer/helpers/getModifiedLoginToken.ts", "../../../../../src/services/nativeAuth/helpers/decodeLoginToken.ts", "../../../../../src/services/nativeAuth/nativeAuth.ts", "../../../../../src/services/nativeAuth/helpers/getLatestBlockHash.ts", "../../../../../src/utils/retryMultipleTimes.ts", "../../../../../src/utils/asyncActions/index.ts", "../../../../../src/utils/asyncActions/sleep.ts", "../../../../../src/utils/asyncActions/timeoutPromise.ts", "../../../../../src/services/nativeAuth/methods/index.ts", "../../../../../src/services/nativeAuth/methods/getTokenExpiration.ts", "../../../../../src/services/nativeAuth/helpers/decodeNativeAuthToken.tsx", "../../../../../src/services/nativeAuth/methods/getNativeAuthConfig.ts", "../../../../../src/components/ProviderInitializer/helpers/getMetamaskProvider.ts", "../../../../../src/components/ProviderInitializer/helpers/getPasskeyProvider.ts", "../../../../../src/hooks/transactions/helpers/useGetLedgerProvider.ts", "../../../../../src/components/ProviderInitializer/hooks/index.ts", "../../../../../src/components/ProviderInitializer/hooks/useSetLedgerProvider.ts", "../../../../../src/utils/logout.ts", "../../../../../src/wrappers/AuthenticatedRoutesWrapper/helpers/matchPath.tsx", "../../../../../src/hooks/account/useGetAccountProvider.ts", "../../../../../src/hooks/transactions/useSignTransactions.tsx", "../../../../../src/hooks/account/index.ts", "../../../../../src/hooks/account/useGetAccount.ts", "../../../../../src/hooks/account/useGetAccountInfo.ts", "../../../../../src/hooks/account/useGetBatchWebsocketEvent.ts", "../../../../../src/hooks/account/useGetIsLoggedIn.ts", "../../../../../src/hooks/account/useGetLoginInfo.ts", "../../../../../src/wrappers/AxiosInterceptorContext/index.tsx", "../../../../../src/wrappers/AxiosInterceptorContext/AxiosInterceptorContext.tsx", "../../../../../src/wrappers/AxiosInterceptorContext/components/index.tsx", "../../../../../src/wrappers/AxiosInterceptorContext/components/AxiosInterceptorContextProvider.tsx", "../../../../../src/wrappers/AxiosInterceptorContext/components/LoginInfoListener.tsx", "../../../../../src/wrappers/AxiosInterceptorContext/components/AxiosInterceptor.tsx", "../../../../../src/hooks/account/useGetIsWalletConnectV2Initialized.ts", "../../../../../src/hooks/account/useGetWebsocketEvent.ts", "../../../../../src/providers/experimentalWebViewProvider/index.ts", "../../../../../src/providers/experimentalWebViewProvider/ExperimentalWebviewProvider.ts", "../../../../../src/services/nativeAuth/helpers/loginWithNativeAuthToken.ts", "../../../../../src/services/transactions/index.tsx", "../../../../../src/services/transactions/clearTransactions.ts", "../../../../../src/services/transactions/sendTransactions.ts", "../../../../../src/services/transactions/signTransactions.ts", "../../../../../src/services/transactions/utils/transformTransactionsToSign.ts", "../../../../../src/services/transactions/transformAndSignTransactions.ts", "../../../../../src/services/transactions/utils.ts", "../../../../../src/hooks/transactions/useSignTransactionsCommonData.tsx", "../../../../../src/hooks/transactions/useSignTransactionsWithDevice.tsx", "../../../../../src/hooks/transactions/helpers/useClearTransactionsToSignWithWarning.ts", "../../../../../src/hooks/transactions/useSignTransactionsWithLedger.tsx", "../../../../../src/hooks/transactions/useTrackTransactionStatus.ts", "../../../../../src/services/index.tsx", "../../../../../src/services/nativeAuth/index.tsx", "../../../../../src/hooks/useDebounce.ts", "../../../../../src/hooks/login/index.ts", "../../../../../src/hooks/login/useExtensionLogin.ts", "../../../../../src/utils/getIsLoggedIn.ts", "../../../../../src/hooks/login/helpers/index.ts", "../../../../../src/hooks/login/helpers/clearInitiatedLogins.ts", "../../../../../src/hooks/login/useLoginService.ts", "../../../../../src/hooks/login/useOperaLogin.ts", "../../../../../src/hooks/login/useCrossWindowLogin.ts", "../../../../../src/hooks/login/useWebWalletLogin.ts", "../../../../../src/utils/index.ts", "../../../../../src/utils/buildUrlParams.ts", "../../../../../src/utils/environment/index.ts", "../../../../../src/utils/environment/isMobileEnvironment.ts", "../../../../../src/utils/math.ts", "../../../../../src/utils/network/index.ts", "../../../../../src/utils/network/getChainID.ts", "../../../../../src/utils/network/getNetworkConfig.ts", "../../../../../src/utils/network/getEgldLabel.ts", "../../../../../src/utils/platform/index.ts", "../../../../../src/utils/platform/detectCurrentPlatform.ts", "../../../../../src/utils/platform/getIsExtensionAvailable.ts", "../../../../../src/utils/platform/getIsMetamaskAvailable.ts", "../../../../../src/utils/progress/index.ts", "../../../../../src/utils/progress/getRemainingValue.ts", "../../../../../src/utils/switchTrue.ts", "../../../../../src/utils/toasts/index.ts", "../../../../../src/utils/toasts/customToastsActions.ts", "../../../../../src/utils/websocket/index.ts", "../../../../../src/utils/websocket/getWebsocketUrl.ts", "../../../../../src/utils/getHasNativeAuth/index.ts", "../../../../../src/utils/getHasNativeAuth/getHasNativeAuth.ts", "../../../../../src/utils/waitForChainID.ts", "../../../../../src/utils/sanitizeCallbackUrl.ts", "../../../../../src/hooks/login/useGetModalLoginMethods.ts", "../../../../../src/services/nativeAuth/helpers/index.ts", "../../../../../src/services/nativeAuth/helpers/getIsNativeAuthSingingForbidden.ts", "../../../../../src/services/nativeAuth/helpers/getAuthorizationInfo.ts", "../../../../../src/components/LogoutListener/helpers/useNativeAuthLogoutWarning/helpers/index.ts", "../../../../../src/components/LogoutListener/helpers/useNativeAuthLogoutWarning/helpers/getHumanReadableTokenExpirationTime.ts", "../../../../../src/UI/DappModal/index.ts", "../../../../../src/UI/DappModal/components/index.ts", "../../../../../src/UI/DappModal/components/DappModal.tsx", "../../../../../src/hocs/withStyles.tsx", "../../../../../src/hocs/useStyles.ts", "../../../../../src/utils/isSSR.ts", "../../../../../src/UI/DappModal/components/DappModalBody.tsx", "../../../../../src/UI/DappModal/components/DappModalFooter.tsx", "../../../../../src/UI/DappModal/components/DappModalHeader.tsx", "../../../../../src/UI/DappModal/hooks/index.ts", "../../../../../src/UI/DappModal/hooks/useDappModal.ts", "../../../../../src/UI/DappModal/dappModal.types.ts", "../../../../../src/hooks/login/useLedgerLogin.ts", "../../../../../src/hooks/login/useAddressScreens.ts", "../../../../../src/hooks/login/useXaliasLogin.ts", "../../../../../src/hooks/login/useWalletConnectV2Login.ts", "../../../../../src/hooks/login/useMetamaskLogin.ts", "../../../../../src/hooks/login/usePasskeyLogin.ts", "../../../../../src/hooks/websocketListener/index.ts", "../../../../../src/hooks/websocketListener/useGetWebsocketUrl.ts", "../../../../../src/hooks/websocketListener/useRegisterWebsocketListener.ts", "../../../../../src/hooks/websocketListener/useInitializeWebsocketConnection.tsx", "../../../../../src/hooks/websocketListener/websocketConnection.ts", "../../../../../src/hooks/toasts/index.ts", "../../../../../src/hooks/toasts/useTransactionsToasts.ts", "../../../../../src/hooks/toasts/useGetToasts.ts", "../../../../../src/hooks/economics/index.ts", "../../../../../src/hooks/economics/useGetEgldPrice.ts", "../../../../../src/apiCalls/index.ts", "../../../../../src/apiCalls/accounts/index.ts", "../../../../../src/apiCalls/economics/index.ts", "../../../../../src/apiCalls/economics/getEconomicsInfo.ts", "../../../../../src/apiCalls/economics/useGetEconomicsInfoFromApi.ts", "../../../../../src/UI/SignTransactionsModals/components/TransactionStatusToast.tsx", "../../../../../src/components/TransactionStatusToast/StatusMessageComponent.tsx", "../../../../../src/components/TransactionStatusToast/StatusIcon.tsx", "../../../../../src/components/TransactionStatusToast/transactionStatusToast.types.ts", "../../../../../src/UI/SignTransactionsModals/components/DeviceConfirmationScreen.tsx", "../../../../../src/UI/SignTransactionsModals/components/confirmationScreen.types.ts", "../../../../../src/UI/SignTransactionsModals/components/SignWaitingScreenModal/index.tsx", "../../../../../src/UI/SignTransactionsModals/components/SignWaitingScreenModal/SignWaitingScreenModal.tsx", "../../../../../src/UI/ModalContainer/ModalContainer.tsx", "../../../../../src/UI/PageState/index.tsx", "../../../../../src/UI/PageState/PageState.tsx"],
  "sourcesContent": ["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    var copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        Buffer.from(buf).copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (var i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n", "// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n", "var _globalThis = function (Object) {\n  function get() {\n    var _global = this || self;\n\n    delete Object.prototype.__magic__;\n    return _global;\n  }\n\n  if (typeof globalThis === \"object\") {\n    return globalThis;\n  }\n\n  if (this) {\n    return get();\n  } else {\n    Object.defineProperty(Object.prototype, \"__magic__\", {\n      configurable: true,\n      get: get\n    });\n    var _global = __magic__;\n    return _global;\n  }\n}(Object);\n\nimport { Buffer } from 'buffer';\nimport process from 'process';\nvar _global = _globalThis;\nexport { Buffer, process, _global as global };\n", "export enum DataTestIdsEnum {\n  accessWalletBtn = 'accessWalletBtn',\n  accessCrossWindowWalletBtn = 'accessCrossWindowWalletBtn',\n  addressTableContainer = 'addressTableContainer',\n  closeButton = 'closeButton',\n  confirmAmount = 'confirmAmount',\n  confirmBtn = 'confirmBtn',\n  confirmData = 'confirmData',\n  confirmFee = 'confirmFee',\n  confirmReceiver = 'confirmReceiver',\n  confirmScCall = 'confirmScCall',\n  confirmScamReport = 'confirmScamReport',\n  confirmUsdValue = 'confirmUsdValue',\n  dappModal = 'dappModal',\n  deleteToastButton = 'deleteToastButton',\n  errorScreen = 'errorScreen',\n  extensionLoginButton = 'extensionLoginButton',\n  iframeLoginButton = 'iframeLoginButton',\n  formatAmountComponent = 'formatAmountComponent',\n  formatAmountDecimals = 'formatAmountDecimals',\n  formatAmountInt = 'formatAmountInt',\n  formatAmountSymbol = 'formatAmountSymbol',\n  ledgerConfirmAddress = 'ledgerConfirmAddress',\n  ledgerConnectBtn = 'ledgerConnectBtn',\n  ledgerLoading = 'ledgerLoading',\n  ledgerLoginButton = 'ledgerLoginButton',\n  nextBtn = 'nextBtn',\n  nftExplorerLink = 'nftExplorerLink',\n  nftFormattedAmount = 'nftFormattedAmount',\n  nftIdentifier = 'nftIdentifier',\n  nftLabel = 'nftLabel',\n  operaLoginButton = 'operaLoginButton',\n  prevBtn = 'prevBtn',\n  receiverLink = 'receiverLink',\n  receiverShard = 'receiverShard',\n  scIcon = 'scIcon',\n  senderLink = 'senderLink',\n  senderShard = 'senderShard',\n  shardFromLink = 'shardFromLink',\n  shardToLink = 'shardToLink',\n  signBtn = 'signBtn',\n  signStepTitle = 'signStepTitle',\n  title = 'title',\n  tokenExplorerLink = 'tokenExplorerLink',\n  tokenFormattedAmount = 'tokenFormattedAmount',\n  transactionAction = 'transactionAction',\n  transactionAge = 'transactionAge',\n  transactionDataDecode = 'transactionDataDecode',\n  transactionDetailsToastBody = 'transactionDetailsToastBody',\n  transactionHash = 'transactionHash',\n  transactionInfoFee = 'transactionInfoFee',\n  transactionInfoValue = 'transactionInfoValue',\n  transactionLink = 'transactionLink',\n  transactionMethod = 'transactionMethod',\n  transactionReceiver = 'transactionReceiver',\n  transactionSender = 'transactionSender',\n  transactionTo = 'transactionTo',\n  transactionToAccount = 'transactionToAccount',\n  transactionToContract = 'transactionToContract',\n  transactionToExplorerLink = 'transactionToExplorerLink',\n  transactionToShard = 'transactionToShard',\n  transactionToastContent = 'transactionToastContent',\n  transactionToastTitle = 'transactionToastTitle',\n  transactionValue = 'transactionValue',\n  transactionValueIcon = 'transactionValueIcon',\n  transactionsTable = 'transactionsTable',\n  'trim-text-component' = 'trim-text-component',\n  xAliasLoginButton = 'xAliasLoginButton'\n}\n", "export const ERROR_SIGNING = 'error when signing';\nexport const CANCELLED = 'cancelled';\nexport const TRANSACTION_CANCELLED = 'Transaction canceled';\nexport const ERROR_SIGNING_TX = 'error signing transaction';\nexport const PROVIDER_NOT_INITIALIZED = 'provider not initialized';\nexport const MISSING_PROVIDER_MESSAGE =\n  'You need a signer/valid signer to send a transaction,use either WalletProvider, LedgerProvider or WalletConnect';\nexport const DEFAULT_TRANSACTION_STATUS_MESSAGE =\n  'Undefined transaction status';\nexport const SECOND_LOGIN_ATTEMPT_ERROR =\n  'Action not allowed. User is logged in. Call logout() first';\nexport const SENDER_DIFFERENT_THAN_LOGGED_IN_ADDRESS =\n  'You cannot sign transactions from a different account';\n", "export const FIREFOX_ADDON_LINK =\n  'https://addons.mozilla.org/en-US/firefox/addon/multiversx-defi-wallet';\n\nexport const CHROME_EXTENSION_LINK =\n  'https://chrome.google.com/webstore/detail/multiversx-defi-wallet/dngmlblcodfobpdpecaadgfbcggfjfnm';\n\nexport const FIREFOX_METAMASK_ADDON_LINK =\n  'https://addons.mozilla.org/en-US/firefox/addon/metamask-flask/';\n\nexport const CHROME_METAMASK_EXTENSION_LINK =\n  'https://chromewebstore.google.com/detail/metamask-flask-developmen/ljfoeinjpaedjfecbmggjgodbgkmjkjk';\n", "export enum GuardianActionsEnum {\n  SetGuardian = 'SetGuardian',\n  GuardAccount = 'GuardAccount',\n  UnGuardAccount = 'UnGuardAccount'\n}\n", "export const LEDGER_MULTI_ACCOUNT_MINIMUM_VERSION = '1.0.8';\nexport const LEDGER_HASH_SIGN_MINIMUM_VERSION = '1.0.11';\nexport const LEDGER_SIGN_AUTH_TOKEN_MINIMUM_VERSION = '1.0.15';\nexport const LEDGER_WITH_WHITELISTED_TOKENS_MINIMUM_VERSION = '1.0.17';\nexport const LEDGER_WITH_GUARDIANS_MINIMUM_VERSION = '1.0.22';\nexport const LEDGER_WITH_USERNAMES_MINIMUM_VERSION = '1.0.23';\n", "export const ledgerErrorCodes = {\n  0x9000: {\n    code: 'codeSuccess',\n    message: 'Success'\n  },\n  0x6985: {\n    code: 'ERR_USER_DENIED',\n    message: 'Rejected by user'\n  },\n  0x6d00: {\n    code: 'ERR_UNKNOWN_INSTRUCTION',\n    message: 'Unknown instruction'\n  },\n  0x6e00: {\n    code: 'ERR_WRONG_CLA',\n    message: 'Wrong CLA'\n  },\n  0x6e01: {\n    code: 'ERR_INVALID_ARGUMENTS',\n    message: 'Invalid arguments'\n  },\n  0x6e02: {\n    code: 'ERR_INVALID_MESSAGE',\n    message: 'Invalid message'\n  },\n  0x6e03: {\n    code: 'ERR_INVALID_P1',\n    message: 'Invalid P1'\n  },\n  0x6e04: {\n    code: 'ERR_MESSAGE_TOO_LONG',\n    message: 'Message too long'\n  },\n  0x6e05: {\n    code: 'ERR_RECEIVER_TOO_LONG',\n    message: 'Receiver too long'\n  },\n  0x6e06: {\n    code: 'ERR_AMOUNT_TOO_LONG',\n    message: 'Amount too long'\n  },\n  0x6e07: {\n    code: 'ERR_CONTRACT_DATA_DISABLED',\n    message: 'Contract data disabled in app options'\n  },\n  0x6e08: {\n    code: 'ERR_MESSAGE_INCOMPLETE',\n    message: 'Message incomplete'\n  },\n  0x6e10: {\n    code: 'ERR_SIGNATURE_FAILED',\n    message: 'Signature failed'\n  },\n  0x6e09: {\n    code: 'ERR_WRONG_TX_VERSION',\n    message: 'Wrong TX version'\n  },\n  0x6e0a: {\n    code: 'ERR_NONCE_TOO_LONG',\n    message: 'Nonce too long'\n  },\n  0x6e0b: {\n    code: 'ERR_INVALID_AMOUNT',\n    message: 'Invalid amount'\n  },\n  0x6e0c: {\n    code: 'ERR_INVALID_FEE',\n    message: 'Invalid fee'\n  },\n  0x6e0d: {\n    code: 'ERR_PRETTY_FAILED',\n    message: 'Pretty failed'\n  },\n  0x6e0e: {\n    code: 'ERR_DATA_TOO_LONG',\n    message: 'Data too long'\n  },\n  0x6e0f: {\n    code: 'ERR_WRONG_TX_OPTIONS',\n    message: 'Invalid transaction options'\n  },\n  0x6e11: {\n    code: 'ERR_SIGN_TX_DEPRECATED',\n    message:\n      'Regular transaction signing is deprecated in this version. Use hash signing.'\n  }\n};\n", "export const mnemonicWords = [\n  'abandon',\n  'ability',\n  'able',\n  'about',\n  'above',\n  'absent',\n  'absorb',\n  'abstract',\n  'absurd',\n  'abuse',\n  'access',\n  'accident',\n  'account',\n  'accuse',\n  'achieve',\n  'acid',\n  'acoustic',\n  'acquire',\n  'across',\n  'act',\n  'action',\n  'actor',\n  'actress',\n  'actual',\n  'adapt',\n  'add',\n  'addict',\n  'address',\n  'adjust',\n  'admit',\n  'adult',\n  'advance',\n  'advice',\n  'aerobic',\n  'affair',\n  'afford',\n  'afraid',\n  'again',\n  'age',\n  'agent',\n  'agree',\n  'ahead',\n  'aim',\n  'air',\n  'airport',\n  'aisle',\n  'alarm',\n  'album',\n  'alcohol',\n  'alert',\n  'alien',\n  'all',\n  'alley',\n  'allow',\n  'almost',\n  'alone',\n  'alpha',\n  'already',\n  'also',\n  'alter',\n  'always',\n  'amateur',\n  'amazing',\n  'among',\n  'amount',\n  'amused',\n  'analyst',\n  'anchor',\n  'ancient',\n  'anger',\n  'angle',\n  'angry',\n  'animal',\n  'ankle',\n  'announce',\n  'annual',\n  'another',\n  'answer',\n  'antenna',\n  'antique',\n  'anxiety',\n  'any',\n  'apart',\n  'apology',\n  'appear',\n  'apple',\n  'approve',\n  'april',\n  'arch',\n  'arctic',\n  'area',\n  'arena',\n  'argue',\n  'arm',\n  'armed',\n  'armor',\n  'army',\n  'around',\n  'arrange',\n  'arrest',\n  'arrive',\n  'arrow',\n  'art',\n  'artefact',\n  'artist',\n  'artwork',\n  'ask',\n  'aspect',\n  'assault',\n  'asset',\n  'assist',\n  'assume',\n  'asthma',\n  'athlete',\n  'atom',\n  'attack',\n  'attend',\n  'attitude',\n  'attract',\n  'auction',\n  'audit',\n  'august',\n  'aunt',\n  'author',\n  'auto',\n  'autumn',\n  'average',\n  'avocado',\n  'avoid',\n  'awake',\n  'aware',\n  'away',\n  'awesome',\n  'awful',\n  'awkward',\n  'axis',\n  'baby',\n  'bachelor',\n  'bacon',\n  'badge',\n  'bag',\n  'balance',\n  'balcony',\n  'ball',\n  'bamboo',\n  'banana',\n  'banner',\n  'bar',\n  'barely',\n  'bargain',\n  'barrel',\n  'base',\n  'basic',\n  'basket',\n  'battle',\n  'beach',\n  'bean',\n  'beauty',\n  'because',\n  'become',\n  'beef',\n  'before',\n  'begin',\n  'behave',\n  'behind',\n  'believe',\n  'below',\n  'belt',\n  'bench',\n  'benefit',\n  'best',\n  'betray',\n  'better',\n  'between',\n  'beyond',\n  'bicycle',\n  'bid',\n  'bike',\n  'bind',\n  'biology',\n  'bird',\n  'birth',\n  'bitter',\n  'black',\n  'blade',\n  'blame',\n  'blanket',\n  'blast',\n  'bleak',\n  'bless',\n  'blind',\n  'blood',\n  'blossom',\n  'blouse',\n  'blue',\n  'blur',\n  'blush',\n  'board',\n  'boat',\n  'body',\n  'boil',\n  'bomb',\n  'bone',\n  'bonus',\n  'book',\n  'boost',\n  'border',\n  'boring',\n  'borrow',\n  'boss',\n  'bottom',\n  'bounce',\n  'box',\n  'boy',\n  'bracket',\n  'brain',\n  'brand',\n  'brass',\n  'brave',\n  'bread',\n  'breeze',\n  'brick',\n  'bridge',\n  'brief',\n  'bright',\n  'bring',\n  'brisk',\n  'broccoli',\n  'broken',\n  'bronze',\n  'broom',\n  'brother',\n  'brown',\n  'brush',\n  'bubble',\n  'buddy',\n  'budget',\n  'buffalo',\n  'build',\n  'bulb',\n  'bulk',\n  'bullet',\n  'bundle',\n  'bunker',\n  'burden',\n  'burger',\n  'burst',\n  'bus',\n  'business',\n  'busy',\n  'butter',\n  'buyer',\n  'buzz',\n  'cabbage',\n  'cabin',\n  'cable',\n  'cactus',\n  'cage',\n  'cake',\n  'call',\n  'calm',\n  'camera',\n  'camp',\n  'can',\n  'canal',\n  'cancel',\n  'candy',\n  'cannon',\n  'canoe',\n  'canvas',\n  'canyon',\n  'capable',\n  'capital',\n  'captain',\n  'car',\n  'carbon',\n  'card',\n  'cargo',\n  'carpet',\n  'carry',\n  'cart',\n  'case',\n  'cash',\n  'casino',\n  'castle',\n  'casual',\n  'cat',\n  'catalog',\n  'catch',\n  'category',\n  'cattle',\n  'caught',\n  'cause',\n  'caution',\n  'cave',\n  'ceiling',\n  'celery',\n  'cement',\n  'census',\n  'century',\n  'cereal',\n  'certain',\n  'chair',\n  'chalk',\n  'champion',\n  'change',\n  'chaos',\n  'chapter',\n  'charge',\n  'chase',\n  'chat',\n  'cheap',\n  'check',\n  'cheese',\n  'chef',\n  'cherry',\n  'chest',\n  'chicken',\n  'chief',\n  'child',\n  'chimney',\n  'choice',\n  'choose',\n  'chronic',\n  'chuckle',\n  'chunk',\n  'churn',\n  'cigar',\n  'cinnamon',\n  'circle',\n  'citizen',\n  'city',\n  'civil',\n  'claim',\n  'clap',\n  'clarify',\n  'claw',\n  'clay',\n  'clean',\n  'clerk',\n  'clever',\n  'click',\n  'client',\n  'cliff',\n  'climb',\n  'clinic',\n  'clip',\n  'clock',\n  'clog',\n  'close',\n  'cloth',\n  'cloud',\n  'clown',\n  'club',\n  'clump',\n  'cluster',\n  'clutch',\n  'coach',\n  'coast',\n  'coconut',\n  'code',\n  'coffee',\n  'coil',\n  'coin',\n  'collect',\n  'color',\n  'column',\n  'combine',\n  'come',\n  'comfort',\n  'comic',\n  'common',\n  'company',\n  'concert',\n  'conduct',\n  'confirm',\n  'congress',\n  'connect',\n  'consider',\n  'control',\n  'convince',\n  'cook',\n  'cool',\n  'copper',\n  'copy',\n  'coral',\n  'core',\n  'corn',\n  'correct',\n  'cost',\n  'cotton',\n  'couch',\n  'country',\n  'couple',\n  'course',\n  'cousin',\n  'cover',\n  'coyote',\n  'crack',\n  'cradle',\n  'craft',\n  'cram',\n  'crane',\n  'crash',\n  'crater',\n  'crawl',\n  'crazy',\n  'cream',\n  'credit',\n  'creek',\n  'crew',\n  'cricket',\n  'crime',\n  'crisp',\n  'critic',\n  'crop',\n  'cross',\n  'crouch',\n  'crowd',\n  'crucial',\n  'cruel',\n  'cruise',\n  'crumble',\n  'crunch',\n  'crush',\n  'cry',\n  'crystal',\n  'cube',\n  'culture',\n  'cup',\n  'cupboard',\n  'curious',\n  'current',\n  'curtain',\n  'curve',\n  'cushion',\n  'custom',\n  'cute',\n  'cycle',\n  'dad',\n  'damage',\n  'damp',\n  'dance',\n  'danger',\n  'daring',\n  'dash',\n  'daughter',\n  'dawn',\n  'day',\n  'deal',\n  'debate',\n  'debris',\n  'decade',\n  'december',\n  'decide',\n  'decline',\n  'decorate',\n  'decrease',\n  'deer',\n  'defense',\n  'define',\n  'defy',\n  'degree',\n  'delay',\n  'deliver',\n  'demand',\n  'demise',\n  'denial',\n  'dentist',\n  'deny',\n  'depart',\n  'depend',\n  'deposit',\n  'depth',\n  'deputy',\n  'derive',\n  'describe',\n  'desert',\n  'design',\n  'desk',\n  'despair',\n  'destroy',\n  'detail',\n  'detect',\n  'develop',\n  'device',\n  'devote',\n  'diagram',\n  'dial',\n  'diamond',\n  'diary',\n  'dice',\n  'diesel',\n  'diet',\n  'differ',\n  'digital',\n  'dignity',\n  'dilemma',\n  'dinner',\n  'dinosaur',\n  'direct',\n  'dirt',\n  'disagree',\n  'discover',\n  'disease',\n  'dish',\n  'dismiss',\n  'disorder',\n  'display',\n  'distance',\n  'divert',\n  'divide',\n  'divorce',\n  'dizzy',\n  'doctor',\n  'document',\n  'dog',\n  'doll',\n  'dolphin',\n  'domain',\n  'donate',\n  'donkey',\n  'donor',\n  'door',\n  'dose',\n  'double',\n  'dove',\n  'draft',\n  'dragon',\n  'drama',\n  'drastic',\n  'draw',\n  'dream',\n  'dress',\n  'drift',\n  'drill',\n  'drink',\n  'drip',\n  'drive',\n  'drop',\n  'drum',\n  'dry',\n  'duck',\n  'dumb',\n  'dune',\n  'during',\n  'dust',\n  'dutch',\n  'duty',\n  'dwarf',\n  'dynamic',\n  'eager',\n  'eagle',\n  'early',\n  'earn',\n  'earth',\n  'easily',\n  'east',\n  'easy',\n  'echo',\n  'ecology',\n  'economy',\n  'edge',\n  'edit',\n  'educate',\n  'effort',\n  'egg',\n  'eight',\n  'either',\n  'elbow',\n  'elder',\n  'electric',\n  'elegant',\n  'element',\n  'elephant',\n  'elevator',\n  'elite',\n  'else',\n  'embark',\n  'embody',\n  'embrace',\n  'emerge',\n  'emotion',\n  'employ',\n  'empower',\n  'empty',\n  'enable',\n  'enact',\n  'end',\n  'endless',\n  'endorse',\n  'enemy',\n  'energy',\n  'enforce',\n  'engage',\n  'engine',\n  'enhance',\n  'enjoy',\n  'enlist',\n  'enough',\n  'enrich',\n  'enroll',\n  'ensure',\n  'enter',\n  'entire',\n  'entry',\n  'envelope',\n  'episode',\n  'equal',\n  'equip',\n  'era',\n  'erase',\n  'erode',\n  'erosion',\n  'error',\n  'erupt',\n  'escape',\n  'essay',\n  'essence',\n  'estate',\n  'eternal',\n  'ethics',\n  'evidence',\n  'evil',\n  'evoke',\n  'evolve',\n  'exact',\n  'example',\n  'excess',\n  'exchange',\n  'excite',\n  'exclude',\n  'excuse',\n  'execute',\n  'exercise',\n  'exhaust',\n  'exhibit',\n  'exile',\n  'exist',\n  'exit',\n  'exotic',\n  'expand',\n  'expect',\n  'expire',\n  'explain',\n  'expose',\n  'express',\n  'extend',\n  'extra',\n  'eye',\n  'eyebrow',\n  'fabric',\n  'face',\n  'faculty',\n  'fade',\n  'faint',\n  'faith',\n  'fall',\n  'false',\n  'fame',\n  'family',\n  'famous',\n  'fan',\n  'fancy',\n  'fantasy',\n  'farm',\n  'fashion',\n  'fat',\n  'fatal',\n  'father',\n  'fatigue',\n  'fault',\n  'favorite',\n  'feature',\n  'february',\n  'federal',\n  'fee',\n  'feed',\n  'feel',\n  'female',\n  'fence',\n  'festival',\n  'fetch',\n  'fever',\n  'few',\n  'fiber',\n  'fiction',\n  'field',\n  'figure',\n  'file',\n  'film',\n  'filter',\n  'final',\n  'find',\n  'fine',\n  'finger',\n  'finish',\n  'fire',\n  'firm',\n  'first',\n  'fiscal',\n  'fish',\n  'fit',\n  'fitness',\n  'fix',\n  'flag',\n  'flame',\n  'flash',\n  'flat',\n  'flavor',\n  'flee',\n  'flight',\n  'flip',\n  'float',\n  'flock',\n  'floor',\n  'flower',\n  'fluid',\n  'flush',\n  'fly',\n  'foam',\n  'focus',\n  'fog',\n  'foil',\n  'fold',\n  'follow',\n  'food',\n  'foot',\n  'force',\n  'forest',\n  'forget',\n  'fork',\n  'fortune',\n  'forum',\n  'forward',\n  'fossil',\n  'foster',\n  'found',\n  'fox',\n  'fragile',\n  'frame',\n  'frequent',\n  'fresh',\n  'friend',\n  'fringe',\n  'frog',\n  'front',\n  'frost',\n  'frown',\n  'frozen',\n  'fruit',\n  'fuel',\n  'fun',\n  'funny',\n  'furnace',\n  'fury',\n  'future',\n  'gadget',\n  'gain',\n  'galaxy',\n  'gallery',\n  'game',\n  'gap',\n  'garage',\n  'garbage',\n  'garden',\n  'garlic',\n  'garment',\n  'gas',\n  'gasp',\n  'gate',\n  'gather',\n  'gauge',\n  'gaze',\n  'general',\n  'genius',\n  'genre',\n  'gentle',\n  'genuine',\n  'gesture',\n  'ghost',\n  'giant',\n  'gift',\n  'giggle',\n  'ginger',\n  'giraffe',\n  'girl',\n  'give',\n  'glad',\n  'glance',\n  'glare',\n  'glass',\n  'glide',\n  'glimpse',\n  'globe',\n  'gloom',\n  'glory',\n  'glove',\n  'glow',\n  'glue',\n  'goat',\n  'goddess',\n  'gold',\n  'good',\n  'goose',\n  'gorilla',\n  'gospel',\n  'gossip',\n  'govern',\n  'gown',\n  'grab',\n  'grace',\n  'grain',\n  'grant',\n  'grape',\n  'grass',\n  'gravity',\n  'great',\n  'green',\n  'grid',\n  'grief',\n  'grit',\n  'grocery',\n  'group',\n  'grow',\n  'grunt',\n  'guard',\n  'guess',\n  'guide',\n  'guilt',\n  'guitar',\n  'gun',\n  'gym',\n  'habit',\n  'hair',\n  'half',\n  'hammer',\n  'hamster',\n  'hand',\n  'happy',\n  'harbor',\n  'hard',\n  'harsh',\n  'harvest',\n  'hat',\n  'have',\n  'hawk',\n  'hazard',\n  'head',\n  'health',\n  'heart',\n  'heavy',\n  'hedgehog',\n  'height',\n  'hello',\n  'helmet',\n  'help',\n  'hen',\n  'hero',\n  'hidden',\n  'high',\n  'hill',\n  'hint',\n  'hip',\n  'hire',\n  'history',\n  'hobby',\n  'hockey',\n  'hold',\n  'hole',\n  'holiday',\n  'hollow',\n  'home',\n  'honey',\n  'hood',\n  'hope',\n  'horn',\n  'horror',\n  'horse',\n  'hospital',\n  'host',\n  'hotel',\n  'hour',\n  'hover',\n  'hub',\n  'huge',\n  'human',\n  'humble',\n  'humor',\n  'hundred',\n  'hungry',\n  'hunt',\n  'hurdle',\n  'hurry',\n  'hurt',\n  'husband',\n  'hybrid',\n  'ice',\n  'icon',\n  'idea',\n  'identify',\n  'idle',\n  'ignore',\n  'ill',\n  'illegal',\n  'illness',\n  'image',\n  'imitate',\n  'immense',\n  'immune',\n  'impact',\n  'impose',\n  'improve',\n  'impulse',\n  'inch',\n  'include',\n  'income',\n  'increase',\n  'index',\n  'indicate',\n  'indoor',\n  'industry',\n  'infant',\n  'inflict',\n  'inform',\n  'inhale',\n  'inherit',\n  'initial',\n  'inject',\n  'injury',\n  'inmate',\n  'inner',\n  'innocent',\n  'input',\n  'inquiry',\n  'insane',\n  'insect',\n  'inside',\n  'inspire',\n  'install',\n  'intact',\n  'interest',\n  'into',\n  'invest',\n  'invite',\n  'involve',\n  'iron',\n  'island',\n  'isolate',\n  'issue',\n  'item',\n  'ivory',\n  'jacket',\n  'jaguar',\n  'jar',\n  'jazz',\n  'jealous',\n  'jeans',\n  'jelly',\n  'jewel',\n  'job',\n  'join',\n  'joke',\n  'journey',\n  'joy',\n  'judge',\n  'juice',\n  'jump',\n  'jungle',\n  'junior',\n  'junk',\n  'just',\n  'kangaroo',\n  'keen',\n  'keep',\n  'ketchup',\n  'key',\n  'kick',\n  'kid',\n  'kidney',\n  'kind',\n  'kingdom',\n  'kiss',\n  'kit',\n  'kitchen',\n  'kite',\n  'kitten',\n  'kiwi',\n  'knee',\n  'knife',\n  'knock',\n  'know',\n  'lab',\n  'label',\n  'labor',\n  'ladder',\n  'lady',\n  'lake',\n  'lamp',\n  'language',\n  'laptop',\n  'large',\n  'later',\n  'latin',\n  'laugh',\n  'laundry',\n  'lava',\n  'law',\n  'lawn',\n  'lawsuit',\n  'layer',\n  'lazy',\n  'leader',\n  'leaf',\n  'learn',\n  'leave',\n  'lecture',\n  'left',\n  'leg',\n  'legal',\n  'legend',\n  'leisure',\n  'lemon',\n  'lend',\n  'length',\n  'lens',\n  'leopard',\n  'lesson',\n  'letter',\n  'level',\n  'liar',\n  'liberty',\n  'library',\n  'license',\n  'life',\n  'lift',\n  'light',\n  'like',\n  'limb',\n  'limit',\n  'link',\n  'lion',\n  'liquid',\n  'list',\n  'little',\n  'live',\n  'lizard',\n  'load',\n  'loan',\n  'lobster',\n  'local',\n  'lock',\n  'logic',\n  'lonely',\n  'long',\n  'loop',\n  'lottery',\n  'loud',\n  'lounge',\n  'love',\n  'loyal',\n  'lucky',\n  'luggage',\n  'lumber',\n  'lunar',\n  'lunch',\n  'luxury',\n  'lyrics',\n  'machine',\n  'mad',\n  'magic',\n  'magnet',\n  'maid',\n  'mail',\n  'main',\n  'major',\n  'make',\n  'mammal',\n  'man',\n  'manage',\n  'mandate',\n  'mango',\n  'mansion',\n  'manual',\n  'maple',\n  'marble',\n  'march',\n  'margin',\n  'marine',\n  'market',\n  'marriage',\n  'mask',\n  'mass',\n  'master',\n  'match',\n  'material',\n  'math',\n  'matrix',\n  'matter',\n  'maximum',\n  'maze',\n  'meadow',\n  'mean',\n  'measure',\n  'meat',\n  'mechanic',\n  'medal',\n  'media',\n  'melody',\n  'melt',\n  'member',\n  'memory',\n  'mention',\n  'menu',\n  'mercy',\n  'merge',\n  'merit',\n  'merry',\n  'mesh',\n  'message',\n  'metal',\n  'method',\n  'middle',\n  'midnight',\n  'milk',\n  'million',\n  'mimic',\n  'mind',\n  'minimum',\n  'minor',\n  'minute',\n  'miracle',\n  'mirror',\n  'misery',\n  'miss',\n  'mistake',\n  'mix',\n  'mixed',\n  'mixture',\n  'mobile',\n  'model',\n  'modify',\n  'mom',\n  'moment',\n  'monitor',\n  'monkey',\n  'monster',\n  'month',\n  'moon',\n  'moral',\n  'more',\n  'morning',\n  'mosquito',\n  'mother',\n  'motion',\n  'motor',\n  'mountain',\n  'mouse',\n  'move',\n  'movie',\n  'much',\n  'muffin',\n  'mule',\n  'multiply',\n  'muscle',\n  'museum',\n  'mushroom',\n  'music',\n  'must',\n  'mutual',\n  'myself',\n  'mystery',\n  'myth',\n  'naive',\n  'name',\n  'napkin',\n  'narrow',\n  'nasty',\n  'nation',\n  'nature',\n  'near',\n  'neck',\n  'need',\n  'negative',\n  'neglect',\n  'neither',\n  'nephew',\n  'nerve',\n  'nest',\n  'net',\n  'network',\n  'neutral',\n  'never',\n  'news',\n  'next',\n  'nice',\n  'night',\n  'noble',\n  'noise',\n  'nominee',\n  'noodle',\n  'normal',\n  'north',\n  'nose',\n  'notable',\n  'note',\n  'nothing',\n  'notice',\n  'novel',\n  'now',\n  'nuclear',\n  'number',\n  'nurse',\n  'nut',\n  'oak',\n  'obey',\n  'object',\n  'oblige',\n  'obscure',\n  'observe',\n  'obtain',\n  'obvious',\n  'occur',\n  'ocean',\n  'october',\n  'odor',\n  'off',\n  'offer',\n  'office',\n  'often',\n  'oil',\n  'okay',\n  'old',\n  'olive',\n  'olympic',\n  'omit',\n  'once',\n  'one',\n  'onion',\n  'online',\n  'only',\n  'open',\n  'opera',\n  'opinion',\n  'oppose',\n  'option',\n  'orange',\n  'orbit',\n  'orchard',\n  'order',\n  'ordinary',\n  'organ',\n  'orient',\n  'original',\n  'orphan',\n  'ostrich',\n  'other',\n  'outdoor',\n  'outer',\n  'output',\n  'outside',\n  'oval',\n  'oven',\n  'over',\n  'own',\n  'owner',\n  'oxygen',\n  'oyster',\n  'ozone',\n  'pact',\n  'paddle',\n  'page',\n  'pair',\n  'palace',\n  'palm',\n  'panda',\n  'panel',\n  'panic',\n  'panther',\n  'paper',\n  'parade',\n  'parent',\n  'park',\n  'parrot',\n  'party',\n  'pass',\n  'patch',\n  'path',\n  'patient',\n  'patrol',\n  'pattern',\n  'pause',\n  'pave',\n  'payment',\n  'peace',\n  'peanut',\n  'pear',\n  'peasant',\n  'pelican',\n  'pen',\n  'penalty',\n  'pencil',\n  'people',\n  'pepper',\n  'perfect',\n  'permit',\n  'person',\n  'pet',\n  'phone',\n  'photo',\n  'phrase',\n  'physical',\n  'piano',\n  'picnic',\n  'picture',\n  'piece',\n  'pig',\n  'pigeon',\n  'pill',\n  'pilot',\n  'pink',\n  'pioneer',\n  'pipe',\n  'pistol',\n  'pitch',\n  'pizza',\n  'place',\n  'planet',\n  'plastic',\n  'plate',\n  'play',\n  'please',\n  'pledge',\n  'pluck',\n  'plug',\n  'plunge',\n  'poem',\n  'poet',\n  'point',\n  'polar',\n  'pole',\n  'police',\n  'pond',\n  'pony',\n  'pool',\n  'popular',\n  'portion',\n  'position',\n  'possible',\n  'post',\n  'potato',\n  'pottery',\n  'poverty',\n  'powder',\n  'power',\n  'practice',\n  'praise',\n  'predict',\n  'prefer',\n  'prepare',\n  'present',\n  'pretty',\n  'prevent',\n  'price',\n  'pride',\n  'primary',\n  'print',\n  'priority',\n  'prison',\n  'private',\n  'prize',\n  'problem',\n  'process',\n  'produce',\n  'profit',\n  'program',\n  'project',\n  'promote',\n  'proof',\n  'property',\n  'prosper',\n  'protect',\n  'proud',\n  'provide',\n  'public',\n  'pudding',\n  'pull',\n  'pulp',\n  'pulse',\n  'pumpkin',\n  'punch',\n  'pupil',\n  'puppy',\n  'purchase',\n  'purity',\n  'purpose',\n  'purse',\n  'push',\n  'put',\n  'puzzle',\n  'pyramid',\n  'quality',\n  'quantum',\n  'quarter',\n  'question',\n  'quick',\n  'quit',\n  'quiz',\n  'quote',\n  'rabbit',\n  'raccoon',\n  'race',\n  'rack',\n  'radar',\n  'radio',\n  'rail',\n  'rain',\n  'raise',\n  'rally',\n  'ramp',\n  'ranch',\n  'random',\n  'range',\n  'rapid',\n  'rare',\n  'rate',\n  'rather',\n  'raven',\n  'raw',\n  'razor',\n  'ready',\n  'real',\n  'reason',\n  'rebel',\n  'rebuild',\n  'recall',\n  'receive',\n  'recipe',\n  'record',\n  'recycle',\n  'reduce',\n  'reflect',\n  'reform',\n  'refuse',\n  'region',\n  'regret',\n  'regular',\n  'reject',\n  'relax',\n  'release',\n  'relief',\n  'rely',\n  'remain',\n  'remember',\n  'remind',\n  'remove',\n  'render',\n  'renew',\n  'rent',\n  'reopen',\n  'repair',\n  'repeat',\n  'replace',\n  'report',\n  'require',\n  'rescue',\n  'resemble',\n  'resist',\n  'resource',\n  'response',\n  'result',\n  'retire',\n  'retreat',\n  'return',\n  'reunion',\n  'reveal',\n  'review',\n  'reward',\n  'rhythm',\n  'rib',\n  'ribbon',\n  'rice',\n  'rich',\n  'ride',\n  'ridge',\n  'rifle',\n  'right',\n  'rigid',\n  'ring',\n  'riot',\n  'ripple',\n  'risk',\n  'ritual',\n  'rival',\n  'river',\n  'road',\n  'roast',\n  'robot',\n  'robust',\n  'rocket',\n  'romance',\n  'roof',\n  'rookie',\n  'room',\n  'rose',\n  'rotate',\n  'rough',\n  'round',\n  'route',\n  'royal',\n  'rubber',\n  'rude',\n  'rug',\n  'rule',\n  'run',\n  'runway',\n  'rural',\n  'sad',\n  'saddle',\n  'sadness',\n  'safe',\n  'sail',\n  'salad',\n  'salmon',\n  'salon',\n  'salt',\n  'salute',\n  'same',\n  'sample',\n  'sand',\n  'satisfy',\n  'satoshi',\n  'sauce',\n  'sausage',\n  'save',\n  'say',\n  'scale',\n  'scan',\n  'scare',\n  'scatter',\n  'scene',\n  'scheme',\n  'school',\n  'science',\n  'scissors',\n  'scorpion',\n  'scout',\n  'scrap',\n  'screen',\n  'script',\n  'scrub',\n  'sea',\n  'search',\n  'season',\n  'seat',\n  'second',\n  'secret',\n  'section',\n  'security',\n  'seed',\n  'seek',\n  'segment',\n  'select',\n  'sell',\n  'seminar',\n  'senior',\n  'sense',\n  'sentence',\n  'series',\n  'service',\n  'session',\n  'settle',\n  'setup',\n  'seven',\n  'shadow',\n  'shaft',\n  'shallow',\n  'share',\n  'shed',\n  'shell',\n  'sheriff',\n  'shield',\n  'shift',\n  'shine',\n  'ship',\n  'shiver',\n  'shock',\n  'shoe',\n  'shoot',\n  'shop',\n  'short',\n  'shoulder',\n  'shove',\n  'shrimp',\n  'shrug',\n  'shuffle',\n  'shy',\n  'sibling',\n  'sick',\n  'side',\n  'siege',\n  'sight',\n  'sign',\n  'silent',\n  'silk',\n  'silly',\n  'silver',\n  'similar',\n  'simple',\n  'since',\n  'sing',\n  'siren',\n  'sister',\n  'situate',\n  'six',\n  'size',\n  'skate',\n  'sketch',\n  'ski',\n  'skill',\n  'skin',\n  'skirt',\n  'skull',\n  'slab',\n  'slam',\n  'sleep',\n  'slender',\n  'slice',\n  'slide',\n  'slight',\n  'slim',\n  'slogan',\n  'slot',\n  'slow',\n  'slush',\n  'small',\n  'smart',\n  'smile',\n  'smoke',\n  'smooth',\n  'snack',\n  'snake',\n  'snap',\n  'sniff',\n  'snow',\n  'soap',\n  'soccer',\n  'social',\n  'sock',\n  'soda',\n  'soft',\n  'solar',\n  'soldier',\n  'solid',\n  'solution',\n  'solve',\n  'someone',\n  'song',\n  'soon',\n  'sorry',\n  'sort',\n  'soul',\n  'sound',\n  'soup',\n  'source',\n  'south',\n  'space',\n  'spare',\n  'spatial',\n  'spawn',\n  'speak',\n  'special',\n  'speed',\n  'spell',\n  'spend',\n  'sphere',\n  'spice',\n  'spider',\n  'spike',\n  'spin',\n  'spirit',\n  'split',\n  'spoil',\n  'sponsor',\n  'spoon',\n  'sport',\n  'spot',\n  'spray',\n  'spread',\n  'spring',\n  'spy',\n  'square',\n  'squeeze',\n  'squirrel',\n  'stable',\n  'stadium',\n  'staff',\n  'stage',\n  'stairs',\n  'stamp',\n  'stand',\n  'start',\n  'state',\n  'stay',\n  'steak',\n  'steel',\n  'stem',\n  'step',\n  'stereo',\n  'stick',\n  'still',\n  'sting',\n  'stock',\n  'stomach',\n  'stone',\n  'stool',\n  'story',\n  'stove',\n  'strategy',\n  'street',\n  'strike',\n  'strong',\n  'struggle',\n  'student',\n  'stuff',\n  'stumble',\n  'style',\n  'subject',\n  'submit',\n  'subway',\n  'success',\n  'such',\n  'sudden',\n  'suffer',\n  'sugar',\n  'suggest',\n  'suit',\n  'summer',\n  'sun',\n  'sunny',\n  'sunset',\n  'super',\n  'supply',\n  'supreme',\n  'sure',\n  'surface',\n  'surge',\n  'surprise',\n  'surround',\n  'survey',\n  'suspect',\n  'sustain',\n  'swallow',\n  'swamp',\n  'swap',\n  'swarm',\n  'swear',\n  'sweet',\n  'swift',\n  'swim',\n  'swing',\n  'switch',\n  'sword',\n  'symbol',\n  'symptom',\n  'syrup',\n  'system',\n  'table',\n  'tackle',\n  'tag',\n  'tail',\n  'talent',\n  'talk',\n  'tank',\n  'tape',\n  'target',\n  'task',\n  'taste',\n  'tattoo',\n  'taxi',\n  'teach',\n  'team',\n  'tell',\n  'ten',\n  'tenant',\n  'tennis',\n  'tent',\n  'term',\n  'test',\n  'text',\n  'thank',\n  'that',\n  'theme',\n  'then',\n  'theory',\n  'there',\n  'they',\n  'thing',\n  'this',\n  'thought',\n  'three',\n  'thrive',\n  'throw',\n  'thumb',\n  'thunder',\n  'ticket',\n  'tide',\n  'tiger',\n  'tilt',\n  'timber',\n  'time',\n  'tiny',\n  'tip',\n  'tired',\n  'tissue',\n  'title',\n  'toast',\n  'tobacco',\n  'today',\n  'toddler',\n  'toe',\n  'together',\n  'toilet',\n  'token',\n  'tomato',\n  'tomorrow',\n  'tone',\n  'tongue',\n  'tonight',\n  'tool',\n  'tooth',\n  'top',\n  'topic',\n  'topple',\n  'torch',\n  'tornado',\n  'tortoise',\n  'toss',\n  'total',\n  'tourist',\n  'toward',\n  'tower',\n  'town',\n  'toy',\n  'track',\n  'trade',\n  'traffic',\n  'tragic',\n  'train',\n  'transfer',\n  'trap',\n  'trash',\n  'travel',\n  'tray',\n  'treat',\n  'tree',\n  'trend',\n  'trial',\n  'tribe',\n  'trick',\n  'trigger',\n  'trim',\n  'trip',\n  'trophy',\n  'trouble',\n  'truck',\n  'true',\n  'truly',\n  'trumpet',\n  'trust',\n  'truth',\n  'try',\n  'tube',\n  'tuition',\n  'tumble',\n  'tuna',\n  'tunnel',\n  'turkey',\n  'turn',\n  'turtle',\n  'twelve',\n  'twenty',\n  'twice',\n  'twin',\n  'twist',\n  'two',\n  'type',\n  'typical',\n  'ugly',\n  'umbrella',\n  'unable',\n  'unaware',\n  'uncle',\n  'uncover',\n  'under',\n  'undo',\n  'unfair',\n  'unfold',\n  'unhappy',\n  'uniform',\n  'unique',\n  'unit',\n  'universe',\n  'unknown',\n  'unlock',\n  'until',\n  'unusual',\n  'unveil',\n  'update',\n  'upgrade',\n  'uphold',\n  'upon',\n  'upper',\n  'upset',\n  'urban',\n  'urge',\n  'usage',\n  'use',\n  'used',\n  'useful',\n  'useless',\n  'usual',\n  'utility',\n  'vacant',\n  'vacuum',\n  'vague',\n  'valid',\n  'valley',\n  'valve',\n  'van',\n  'vanish',\n  'vapor',\n  'various',\n  'vast',\n  'vault',\n  'vehicle',\n  'velvet',\n  'vendor',\n  'venture',\n  'venue',\n  'verb',\n  'verify',\n  'version',\n  'very',\n  'vessel',\n  'veteran',\n  'viable',\n  'vibrant',\n  'vicious',\n  'victory',\n  'video',\n  'view',\n  'village',\n  'vintage',\n  'violin',\n  'virtual',\n  'virus',\n  'visa',\n  'visit',\n  'visual',\n  'vital',\n  'vivid',\n  'vocal',\n  'voice',\n  'void',\n  'volcano',\n  'volume',\n  'vote',\n  'voyage',\n  'wage',\n  'wagon',\n  'wait',\n  'walk',\n  'wall',\n  'walnut',\n  'want',\n  'warfare',\n  'warm',\n  'warrior',\n  'wash',\n  'wasp',\n  'waste',\n  'water',\n  'wave',\n  'way',\n  'wealth',\n  'weapon',\n  'wear',\n  'weasel',\n  'weather',\n  'web',\n  'wedding',\n  'weekend',\n  'weird',\n  'welcome',\n  'west',\n  'wet',\n  'whale',\n  'what',\n  'wheat',\n  'wheel',\n  'when',\n  'where',\n  'whip',\n  'whisper',\n  'wide',\n  'width',\n  'wife',\n  'wild',\n  'will',\n  'win',\n  'window',\n  'wine',\n  'wing',\n  'wink',\n  'winner',\n  'winter',\n  'wire',\n  'wisdom',\n  'wise',\n  'wish',\n  'witness',\n  'wolf',\n  'woman',\n  'wonder',\n  'wood',\n  'wool',\n  'word',\n  'work',\n  'world',\n  'worry',\n  'worth',\n  'wrap',\n  'wreck',\n  'wrestle',\n  'wrist',\n  'write',\n  'wrong',\n  'yard',\n  'year',\n  'yellow',\n  'you',\n  'young',\n  'youth',\n  'zebra',\n  'zero',\n  'zone',\n  'zoo'\n];\n", "export enum SignedMessageQueryParamsEnum {\n  signature = 'signature',\n  sessionId = 'sessionId',\n  status = 'status',\n  address = 'address'\n}\n", "export interface AssetType {\n  name: string;\n  description: string;\n  tags: string[];\n  iconPng?: string;\n  iconSvg?: string;\n}\n\nexport interface AccountType {\n  address: string;\n  balance: string;\n  nonce: number;\n  txCount: number;\n  scrCount: number;\n  claimableRewards: string;\n  code?: string;\n  username?: string;\n  shard?: number;\n  ownerAddress?: string;\n  developerReward?: string;\n  deployedAt?: number;\n  scamInfo?: ScamInfoType;\n  isUpgradeable?: boolean;\n  isReadable?: boolean;\n  isPayable?: boolean;\n  isPayableBySmartContract?: boolean;\n  assets?: AssetType;\n  isGuarded: boolean;\n  activeGuardianActivationEpoch?: number;\n  activeGuardianAddress?: string;\n  activeGuardianServiceUid?: string;\n  pendingGuardianActivationEpoch?: number;\n  pendingGuardianAddress?: string;\n  pendingGuardianServiceUid?: string;\n}\n\nexport interface ScamInfoType {\n  type: string;\n  info: string;\n}\n", "import { Transaction } from '@multiversx/sdk-core';\nimport type { IDAppProviderBase } from '@multiversx/sdk-dapp-utils/out/models/dappProviderBase';\nimport { EngineTypes } from 'utils/walletconnect/__mocks__/sdkWalletconnectProvider';\nimport { Nullable } from './transactions.types';\n\nexport interface DappOptions {\n  callbackUrl?: string;\n}\n\nexport interface IDappProvider extends IDAppProviderBase {\n  init?(): Promise<boolean>;\n  getAddress(): Promise<string>;\n  isInitialized(): boolean;\n  isConnected(): boolean;\n  sendTransaction?(\n    transaction: Transaction,\n    options?: DappOptions\n  ): Promise<Transaction | void>;\n  sendCustomMessage?({\n    method,\n    params\n  }: {\n    method: string;\n    params: any;\n  }): Promise<any>;\n  sendCustomRequest?(options?: {\n    request: EngineTypes.RequestParams['request'];\n  }): Promise<any>;\n  ping?(): Promise<boolean>;\n  relogin?: () => Promise<Nullable<string | void>>;\n  setShouldShowConsentPopup?: (shouldShow: boolean) => void;\n}\n", "export { CrossWindowProvider } from '@multiversx/sdk-web-wallet-cross-window-provider/out/CrossWindowProvider/CrossWindowProvider';\nexport {\n  WindowProviderRequestEnums,\n  WindowProviderResponseEnums\n} from '@multiversx/sdk-web-wallet-cross-window-provider/out/enums';\n", "import {\n  WindowProviderRequestEnums,\n  WindowProviderResponseEnums\n} from 'lib/sdkWebWalletCrossWindowProvider';\n\nexport enum TransactionServerStatusesEnum {\n  pending = 'pending',\n  fail = 'fail',\n  invalid = 'invalid',\n  success = 'success',\n  executed = 'executed',\n  notExecuted = 'not executed',\n  rewardReverted = 'reward-reverted'\n}\n\nexport enum SignedMessageStatusesEnum {\n  pending = 'pending',\n  failed = 'failed',\n  signed = 'signed',\n  cancelled = 'cancelled'\n}\n\nexport enum TransactionBatchStatusesEnum {\n  signed = 'signed',\n  cancelled = 'cancelled',\n  success = 'success',\n  sent = 'sent',\n  fail = 'fail',\n  timedOut = 'timedOut',\n  invalid = 'invalid'\n}\n\nexport enum LoginMethodsEnum {\n  ledger = 'ledger',\n  walletconnect = 'walletconnect',\n  walletconnectv2 = 'walletconnectv2',\n  wallet = 'wallet',\n  crossWindow = 'crossWindow',\n  iframe = 'iframe',\n  extension = 'extension',\n  passkey = 'passkey',\n  metamask = 'metamask',\n  opera = 'opera',\n  extra = 'extra',\n  none = ''\n}\n\nexport enum NotificationTypesEnum {\n  warning = 'warning',\n  error = 'error',\n  success = 'success'\n}\n\nexport enum TypesOfSmartContractCallsEnum {\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTNFTTransfer = 'ESDTNFTTransfer'\n}\n\nexport enum EnvironmentsEnum {\n  testnet = 'testnet',\n  devnet = 'devnet',\n  mainnet = 'mainnet'\n}\n\nexport enum ToastsEnum {\n  custom = 'custom',\n  transaction = 'transaction'\n}\n\nexport enum TransactionTypesEnum {\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTTransfer = 'ESDTTransfer',\n  ESDTNFTBurn = 'ESDTNFTBurn',\n  ESDTNFTTransfer = 'ESDTNFTTransfer',\n  esdtTransaction = 'esdtTransaction',\n  nftTransaction = 'nftTransaction',\n  scCall = 'scCall'\n}\n\nexport enum TransactionsDefaultTitles {\n  success = 'Transaction successful',\n  received = 'Transaction received',\n  failed = 'Transaction failed',\n  pending = 'Processing transaction',\n  timedOut = 'Transaction timed out',\n  // Appears in batch transactions when the batch status is invalid (set the batch status to invalid for each transaction)\n  invalid = 'Transaction invalid'\n}\n\nexport enum PlatformsEnum {\n  ios = 'ios',\n  reactNative = 'reactNative',\n  web = 'web',\n  webWallet = 'webWallet'\n}\n\nexport enum WebViewProviderRequestBaseEnums {\n  signTransactionsWithGuardianResponse = 'SIGN_TRANSACTIONS_WITH_GUARDIAN_RESPONSE',\n  reloginRequest = 'RELOGIN_REQUEST'\n}\n\nexport const WebViewProviderRequestEnums = {\n  ...WindowProviderRequestEnums,\n  ...WebViewProviderRequestBaseEnums\n};\n\nexport enum WebViewProviderResponseBaseEnums {\n  reloginResponse = 'RELOGIN_RESPONSE'\n}\n\nexport const WebViewProviderResponseEnums = {\n  ...WindowProviderResponseEnums,\n  ...WebViewProviderResponseBaseEnums\n};\n", "export interface LoginHookGenericStateType {\n  error: string;\n  loginFailed: boolean;\n  isLoading: boolean;\n  isLoggedIn: boolean;\n}\n\nexport type InitiateLoginFunctionType = () => void;\n\nexport type LoginHookReturnType = [\n  LoginHookReturnType,\n  LoginHookGenericStateType\n];\n\nexport interface OnLoginRedirectOptionsType {\n  signature?: string;\n  address: string;\n}\n\nexport type OnLoginRedirectType = (\n  callbackRoute: string,\n  options?: OnLoginRedirectOptionsType\n) => void;\n\nexport interface NativeAuthConfigType {\n  origin?: string;\n  apiAddress?: string;\n  expirySeconds?: number;\n  blockHashShard?: number;\n  gatewayUrl?: string;\n  extraRequestHeaders?: { [key: string]: string };\n  extraInfo?: {\n    [key: string]: string;\n  };\n  /**\n   * Displays a logout toast warning before token expiration. Defaults to 5 minutes.\n   *\n   * If set to `null`, will not trigger any warning.\n   */\n  tokenExpirationToastWarningSeconds?: number | null;\n}\n\nexport interface OnProviderLoginType {\n  callbackRoute?: string;\n  token?: string;\n  /**\n   * If specified, `onLoginRedirect` will overwrite callbackRoute default navigation\n   */\n  onLoginRedirect?: OnLoginRedirectType;\n  /**\n   * If set to `true`, will fallback on default configuration\n   */\n  nativeAuth?: NativeAuthConfigType | boolean;\n}\n", "export interface BaseNetworkType {\n  id: string;\n  chainId: string;\n  name: string;\n  egldLabel: string;\n  decimals: string;\n  digits: string;\n  gasPerDataByte: string;\n  walletConnectDeepLink: string;\n  walletAddress: string;\n  apiAddress: string;\n  explorerAddress: string;\n  apiTimeout: string;\n  walletConnectV2ProjectId?: string;\n  walletConnectV2Options?: Record<string, any>;\n  xAliasAddress?: string;\n  roundDuration: number;\n  metamaskSnapWalletAddress?: string;\n  websocketUrl?: string;\n}\n\nexport interface AccountInfoSliceNetworkType extends BaseNetworkType {\n  walletConnectBridgeAddress: string;\n  walletConnectV2RelayAddress: string;\n  customWalletAddress?: string;\n}\n\nexport interface NetworkType extends BaseNetworkType {\n  walletConnectBridgeAddresses: string[];\n  walletConnectV2RelayAddresses: string[];\n}\n\nexport interface CustomNetworkType {\n  id?: string;\n  chainId?: string;\n  name?: string;\n  egldLabel?: string;\n  decimals?: string;\n  digits?: string;\n  gasPerDataByte?: string;\n  walletConnectDeepLink?: string;\n  walletConnectBridgeAddresses?: string[];\n  walletAddress?: string;\n  apiAddress?: string;\n  explorerAddress?: string;\n  skipFetchFromServer?: boolean;\n  apiTimeout?: string | number;\n  walletConnectV2ProjectId?: string;\n  walletConnectV2Options?: any;\n  metamaskSnapWalletAddress?: string;\n  websocketUrl?: string;\n}\n\nexport interface ApiNetworkConfigType {\n  erd_chain_id: string;\n  erd_denomination: number;\n  erd_gas_per_data_byte: number;\n  erd_gas_price_modifier: string;\n  erd_latest_tag_software_version: string;\n  erd_max_gas_per_transaction: number;\n  erd_meta_consensus_group_size: number;\n  erd_min_gas_limit: number;\n  erd_min_gas_price: number;\n  erd_min_transaction_version: number;\n  erd_num_metachain_nodes: number;\n  erd_num_nodes_in_shard: number;\n  erd_num_shards_without_meta: number;\n  erd_rewards_top_up_gradient_point: string;\n  erd_round_duration: number;\n  erd_rounds_per_epoch: number;\n  erd_shard_consensus_group_size: number;\n  erd_start_time: number;\n  erd_top_up_factor: string;\n}\n", "import { AssetType, ScamInfoType } from './account.types';\nimport { EsdtEnumType, NftEnumType } from './tokens.types';\nimport { SignedTransactionType } from './transactions.types';\n\n//#region server trasactions\nexport interface ScResultType {\n  callType: string;\n  gasLimit: number;\n  gasPrice: number;\n  nonce: number;\n  prevTxHash: string;\n  hash: string;\n  originalTxHash: string;\n  receiver: string;\n  sender: string;\n  timestamp: number;\n  value: string;\n  data?: string;\n  returnMessage?: string;\n}\n\nexport interface TransactionTokensType {\n  esdts: string[];\n  nfts: string[];\n}\n\nexport enum TransactionActionsEnum {\n  // esdtNft category\n  transfer = 'transfer',\n  // legacy delegation\n  unBond = 'unBond',\n  unStake = 'unStake',\n  // stake category\n  delegate = 'delegate',\n  stake = 'stake',\n  unDelegate = 'unDelegate',\n  stakeClaimRewards = 'claimRewards',\n  reDelegateRewards = 'reDelegateRewards',\n  withdraw = 'withdraw',\n  // mex category\n  claimLockedAssets = 'claimLockedAssets',\n  swapTokensFixedInput = 'swapTokensFixedInput',\n  swapTokensFixedOutput = 'swapTokensFixedOutput',\n  swap = 'swap',\n  addLiquidity = 'addLiquidity',\n  addLiquidityProxy = 'addLiquidityProxy',\n  removeLiquidity = 'removeLiquidity',\n  removeLiquidityProxy = 'removeLiquidityProxy',\n  enterFarm = 'enterFarm',\n  enterFarmProxy = 'enterFarmProxy',\n  enterFarmAndLockRewards = 'enterFarmAndLockRewards',\n  enterFarmAndLockRewardsProxy = 'enterFarmAndLockRewardsProxy',\n  exitFarm = 'exitFarm',\n  exitFarmProxy = 'exitFarmProxy',\n  claimRewards = 'claimRewards',\n  claimRewardsProxy = 'claimRewardsProxy',\n  compoundRewards = 'compoundRewards',\n  compoundRewardsProxy = 'compoundRewardsProxy',\n  wrapEgld = 'wrapEgld',\n  unwrapEgld = 'unwrapEgld',\n  unlockAssets = 'unlockAssets',\n  mergeLockedAssetTokens = 'mergeLockedAssetTokens',\n  stakeFarm = 'stakeFarm',\n  stakeFarmProxy = 'stakeFarmProxy',\n  stakeFarmTokens = 'stakeFarmTokens',\n  stakeFarmTokensProxy = 'stakeFarmTokensProxy',\n  unstakeFarm = 'unstakeFarm',\n  unstakeFarmProxy = 'unstakeFarmProxy',\n  unstakeFarmTokens = 'unstakeFarmTokens',\n  unstakeFarmTokensProxy = 'unstakeFarmTokensProxy',\n  claimDualYield = 'claimDualYield',\n  claimDualYieldProxy = 'claimDualYieldProxy',\n  unbondFarm = 'unbondFarm',\n  ping = 'ping',\n  lockTokens = 'lockTokens',\n  migrateOldTokens = 'migrateOldTokens'\n}\n\nexport enum TransactionActionCategoryEnum {\n  esdtNft = 'esdtNft',\n  mex = 'mex',\n  stake = 'stake',\n  scCall = 'scCall'\n}\n\nexport interface TokenArgumentType {\n  type: NftEnumType | EsdtEnumType;\n  name: string;\n  ticker: string;\n  collection?: string;\n  identifier?: string;\n  token?: string;\n  decimals: number;\n  value: string;\n  providerName?: string;\n  providerAvatar?: string;\n  svgUrl?: string;\n  valueUSD?: string;\n}\n\nexport interface TransactionActionType {\n  category: string;\n  name: TransactionActionsEnum;\n  description?: string;\n  arguments?: { [key: string]: any };\n}\n\nexport interface UnwrapperType {\n  token?: TokenArgumentType[];\n  tokenNoValue?: TokenArgumentType[];\n  tokenNoLink?: TokenArgumentType[];\n  address?: string;\n  egldValue?: string;\n  value?: string;\n  providerName?: string;\n  providerAvatar?: string;\n}\n\nexport enum TransactionOperationActionTypeEnum {\n  none = 'none',\n  transfer = 'transfer',\n  burn = 'burn',\n  addQuantity = 'addQuantity',\n  create = 'create',\n  multiTransfer = 'multiTransfer',\n  localMint = 'localMint',\n  localBurn = 'localBurn',\n  wipe = 'wipe',\n  freeze = 'freeze',\n  writeLog = 'writeLog',\n  signalError = 'signalError',\n\n  // to be deprecated ?\n  ESDTLocalMint = 'ESDTLocalMint',\n  ESDTLocalBurn = 'ESDTLocalBurn'\n}\n\nexport enum VisibleTransactionOperationType {\n  nft = 'nft',\n  esdt = 'esdt',\n  egld = 'egld'\n}\nexport enum HiddenTransactionOperationType {\n  none = 'none',\n  error = 'error',\n  log = 'log'\n}\n\nexport interface OperationType {\n  id?: string;\n  action: TransactionOperationActionTypeEnum;\n  type: VisibleTransactionOperationType | HiddenTransactionOperationType;\n  esdtType?: NftEnumType | EsdtEnumType;\n  collection?: string;\n  name?: string;\n  identifier?: string;\n  sender: string;\n  ticker?: string;\n  receiver: string;\n  value: string;\n  decimals?: number;\n  data?: string;\n  message?: string;\n  svgUrl?: string;\n  senderAssets?: AssetType;\n  receiverAssets?: AssetType;\n  valueUSD?: string;\n}\n\nexport interface LogType {\n  hash: string;\n  callType: string;\n  gasLimit: number;\n  gasPrice: number;\n  nonce: number;\n  prevTxHash: string;\n  receiver?: string;\n  sender: string;\n  value: string;\n  data?: string;\n  originalTxHash: string;\n  returnMessage?: string;\n  logs?: any;\n}\n\nexport interface EventType {\n  address: string;\n  identifier: string;\n  topics: string[];\n  order: number;\n  data?: string;\n  additionalData?: string[];\n}\n\nexport interface ResultLogType {\n  id: string;\n  address: string;\n  events: EventType[];\n}\n\nexport interface ResultType {\n  hash: string;\n  callType: string;\n  gasLimit: number;\n  gasPrice: number;\n  nonce: number;\n  prevTxHash: string;\n  receiver?: string;\n  sender: string;\n  value: string;\n  data?: string;\n  originalTxHash: string;\n  returnMessage?: string;\n  logs?: ResultLogType;\n  senderAssets?: AssetType;\n  receiverAssets?: AssetType;\n  miniBlockHash?: string;\n  function?: string;\n  timestamp?: number;\n}\n\nexport interface ReceiptType {\n  value: string;\n  sender: string;\n  data: string;\n}\n\nexport interface ServerTransactionType {\n  fee?: string;\n  data: string;\n  gasLimit: number;\n  gasPrice: number;\n  gasUsed: number;\n  txHash: string;\n  miniBlockHash: string;\n  nonce: number;\n  receiver: string;\n  receiverShard: number;\n  round: number;\n  sender: string;\n  senderShard: number;\n  signature: string;\n  status: string;\n  inTransit?: boolean;\n  timestamp: number;\n  value: string;\n  price: number;\n  results?: ResultType[];\n  operations?: OperationType[];\n  action?: TransactionActionType;\n  logs?: {\n    id: string;\n    address: string;\n    events: EventType[];\n  };\n  scamInfo?: ScamInfoType;\n  pendingResults?: boolean;\n  receipt?: ReceiptType;\n  senderAssets?: AssetType;\n  receiverAssets?: AssetType;\n  type?: TransferTypeEnum;\n  originalTxHash?: string;\n  isNew?: boolean; // UI flag\n  tokenValue?: string;\n  tokenIdentifier?: string;\n  function?: string;\n}\n\nexport enum TransferTypeEnum {\n  Transaction = 'Transaction',\n  SmartContractResult = 'SmartContractResult'\n}\n\n//#endregion\n\n//#region interpreted trasactions\n\nexport enum TransactionDirectionEnum {\n  SELF = 'Self',\n  INTERNAL = 'Internal',\n  IN = 'In',\n  OUT = 'Out'\n}\n\nexport interface InterpretedTransactionType extends ServerTransactionType {\n  transactionDetails: {\n    direction?: TransactionDirectionEnum;\n    method: string;\n    transactionTokens: TokenArgumentType[];\n    isContract?: boolean;\n  };\n  links: {\n    senderLink?: string;\n    receiverLink?: string;\n    senderShardLink?: string;\n    receiverShardLink?: string;\n    transactionLink?: string;\n  };\n}\n\nexport interface DecodeForDisplayPropsType {\n  input: string;\n  decodeMethod: DecodeMethodEnum;\n  identifier?: string;\n}\n\nexport interface DecodedDisplayType {\n  displayValue: string;\n  validationWarnings: string[];\n}\n\nexport enum DecodeMethodEnum {\n  raw = 'raw',\n  text = 'text',\n  decimal = 'decimal',\n  smart = 'smart'\n}\n\n//#endregion\n\nexport enum BatchTransactionStatus {\n  pending = 'pending',\n  success = 'success',\n  invalid = 'invalid',\n  dropped = 'dropped',\n  fail = 'fail'\n}\n\nexport interface BatchTransactionsRequestType {\n  id: string;\n  transactions: SignedTransactionType[][];\n}\n\nexport interface BatchTransactionsResponseType {\n  id: string;\n  status: BatchTransactionStatus;\n  transactions: SignedTransactionType[][];\n  error?: string;\n  message?: string;\n  statusCode?: string;\n}\n\nexport type BatchTransactionsWSResponseType = {\n  batchId: string;\n  txHashes: string[];\n};\n", "import { ScamInfoType } from './account.types';\n\nexport interface SuspiciousLinkType {\n  isSuspicious: boolean;\n  message: string;\n  textWithLinks: string;\n}\n\nexport interface SuspiciousLinkPropsType {\n  message: string;\n  messagePrefix?: string;\n  scamInfo?: ScamInfoType;\n  isNsfw?: boolean;\n  verified?: boolean;\n}\n\nexport interface TextWithLinksType {\n  textWithLinks: string;\n  hasLinks: boolean;\n}\n", "import { ReactNode, Dispatch, SetStateAction } from 'react';\nimport { Address, Transaction } from '@multiversx/sdk-core';\nimport { IPlainTransactionObject } from '@multiversx/sdk-core/out/interface';\n\nimport { SignStepInnerClassesType } from '../UI/SignTransactionsModals/SignWithDeviceModal/SignStep';\nimport { WithClassnameType } from '../UI/types';\nimport {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum,\n  TransactionTypesEnum\n} from './enums.types';\n\nexport interface TransactionsToSignType {\n  transactions: IPlainTransactionObject[];\n  callbackRoute?: string;\n  sessionId: string;\n  customTransactionInformation: CustomTransactionInformation;\n}\n\nexport interface SignedTransactionsBodyType {\n  transactions?: SignedTransactionType[];\n  status?: TransactionBatchStatusesEnum;\n  errorMessage?: string;\n  redirectRoute?: string;\n  customTransactionInformation?: CustomTransactionInformation;\n}\n\nexport interface SignedTransactionsType {\n  [sessionId: string]: SignedTransactionsBodyType;\n}\n\nexport interface TransactionParameter {\n  sender: Address;\n  receiver: Address;\n  functionName: string;\n  inputParameters: string[];\n  outputParameters: string[];\n}\n\nexport type RawTransactionType = IPlainTransactionObject;\n\nexport interface SignedTransactionType extends RawTransactionType {\n  hash: string;\n  status: TransactionServerStatusesEnum;\n  inTransit?: boolean;\n  errorMessage?: string;\n  customTransactionInformation?: CustomTransactionInformation;\n}\n\nexport interface TransactionDataTokenType {\n  tokenId: string;\n  amount: string;\n  receiver: string;\n  type?: MultiEsdtTransactionType['type'] | '';\n  nonce?: string;\n  multiTxData?: string;\n}\n\nexport type TransactionsDataTokensType =\n  | Record<string, TransactionDataTokenType>\n  | undefined;\n\ninterface MultiEsdtType {\n  type:\n    | TransactionTypesEnum.esdtTransaction\n    | TransactionTypesEnum.nftTransaction;\n  receiver: string;\n  token?: string;\n  nonce?: string;\n  amount?: string;\n  data: string;\n}\n\ninterface MultiEsdtScCallType {\n  type: TransactionTypesEnum.scCall;\n  receiver: string;\n  token?: string;\n  nonce?: string;\n  amount?: string;\n  data: string;\n}\n\nexport type MultiEsdtTransactionType = MultiEsdtType | MultiEsdtScCallType;\n\nexport interface MultiSignTransactionType {\n  multiTxData?: string;\n  transactionIndex: number;\n  transaction: Transaction;\n}\n\nexport interface TokenOptionType {\n  name: string;\n  identifier: string;\n  balance: string;\n  decimals: number;\n  collection?: string;\n  avatar?: string;\n}\n\nexport interface SimpleTransactionType {\n  value: string;\n  receiver: string;\n  data?: string;\n  gasPrice?: number;\n  gasLimit?: number;\n  chainID?: string;\n  version?: number;\n  options?: number;\n  guardian?: string;\n  guardianSignature?: string;\n  nonce?: number;\n}\n\nexport interface TransactionsDisplayInfoType {\n  errorMessage?: string;\n  successMessage?: string;\n  processingMessage?: string;\n  submittedMessage?: string;\n  transactionDuration?: number;\n  timedOutMessage?: string;\n  invalidMessage?: string;\n}\n\nexport interface SendSimpleTransactionPropsType {\n  transactions: SimpleTransactionType[];\n  minGasLimit?: number;\n}\n\nexport interface SendTransactionsPropsType {\n  transactions:\n    | Transaction\n    | SimpleTransactionType\n    | (Transaction | SimpleTransactionType)[];\n  redirectAfterSign?: boolean;\n  signWithoutSending: boolean;\n  skipGuardian?: boolean;\n  completedTransactionsDelay?: number;\n  callbackRoute?: string;\n  transactionsDisplayInfo: TransactionsDisplayInfoType;\n  minGasLimit?: number;\n  sessionInformation?: any;\n  hasConsentPopup?: boolean;\n}\n\nexport interface SendBatchTransactionsPropsType {\n  transactions: (Transaction | SimpleTransactionType)[][];\n  redirectAfterSign?: boolean;\n  signWithoutSending?: boolean;\n  skipGuardian?: boolean;\n  /**\n   * For Cross-Window provider in Safari browser, performing async calls before signing transactions needs a consent popup in order to open a new tab.\n   */\n  hasConsentPopup?: boolean;\n  completedTransactionsDelay?: number;\n  callbackRoute?: string;\n  transactionsDisplayInfo: TransactionsDisplayInfoType;\n  minGasLimit?: number;\n  sessionInformation?: any;\n}\n\nexport interface SignTransactionsPropsType {\n  transactions: Transaction[] | Transaction;\n  minGasLimit?: number; // unused, will be removed in v3.0.0\n  callbackRoute?: string;\n  transactionsDisplayInfo: TransactionsDisplayInfoType;\n  customTransactionInformation: CustomTransactionInformation;\n}\n\nexport interface ActiveLedgerTransactionType {\n  dataField: string;\n  isTokenTransaction: boolean;\n  receiverScamInfo: string | null;\n  transaction: Transaction;\n  transactionIndex: number;\n  transactionTokenInfo: TransactionDataTokenType;\n}\n\nexport interface SmartContractResult {\n  hash: string;\n  timestamp: number;\n  nonce: number;\n  gasLimit: number;\n  gasPrice: number;\n  value: string;\n  sender: string;\n  receiver: string;\n  data: string;\n  prevTxHash: string;\n  originalTxHash: string;\n  callType: string;\n  miniBlockHash: string;\n  returnMessage: string;\n}\n\nexport type DeviceSignedTransactions = Record<number, Transaction>;\n\nexport interface GuardianScreenType extends WithClassnameType {\n  address: string;\n  onSignTransaction: () => Promise<void>;\n  onPrev: () => void;\n  title?: ReactNode;\n  signStepInnerClasses?: SignStepInnerClassesType;\n  signedTransactions?: DeviceSignedTransactions;\n  guardianFormDescription?: ReactNode;\n  setSignedTransactions?: Dispatch<\n    SetStateAction<DeviceSignedTransactions | undefined>\n  >;\n}\n\nexport interface SignModalPropsType extends WithClassnameType {\n  callbackRoute?: string;\n  error: string | null;\n  GuardianScreen?: (signProps: GuardianScreenType) => JSX.Element;\n  handleClose: () => void;\n  handleSubmit?: () => void;\n  modalContentClassName?: string;\n  sessionId?: string;\n  signStepInnerClasses?: SignStepInnerClassesType;\n  title?: ReactNode;\n  transactions: Transaction[];\n  verifyReceiverScam?: boolean;\n}\n\nexport interface CustomTransactionInformation {\n  redirectAfterSign: boolean;\n  sessionInformation: any;\n  completedTransactionsDelay?: number;\n  signWithoutSending: boolean;\n  /**\n   * If true, transactions with lower nonces than the account nonce will not be updated with the correct nonce\n   */\n  skipUpdateNonces?: boolean;\n  /**\n   * If true, the change guardian action will not trigger transaction version update\n   */\n  skipGuardian?: boolean;\n  /**\n   * Keeps indexes of transactions that should be grouped together. If not provided, all transactions will be grouped together. Used only for batch transactions.\n   */\n  grouping?: number[][];\n  /**\n   * For Cross-Window provider in Safari browser, performing async calls before signing transactions needs a consent popup in order to open a new tab.\n   */\n  hasConsentPopup?: boolean;\n}\n\nexport interface SendTransactionReturnType {\n  error?: string;\n  sessionId: string | null;\n}\n\nexport interface SendBatchTransactionReturnType {\n  error?: string;\n  batchId: string | null;\n}\n\nexport type GetTransactionsByHashesType = (\n  pendingTransactions: PendingTransactionsType\n) => Promise<GetTransactionsByHashesReturnType>;\n\nexport type GetTransactionsByHashesReturnType = {\n  hash: string;\n  invalidTransaction: boolean;\n  status: TransactionServerStatusesEnum;\n  inTransit?: boolean;\n  results: SmartContractResult[];\n  sender: string;\n  receiver: string;\n  data: string;\n  previousStatus: string;\n  hasStatusChanged: boolean;\n}[];\n\nexport type PendingTransactionsType = {\n  hash: string;\n  previousStatus: string;\n}[];\n\nexport interface TransactionLinkType {\n  link: string;\n  label: string;\n  address: string;\n}\n\nexport type Nullable<T> = T | null;\n", "export type DappConfigType = {\n  logoutRoute?: string;\n  shouldUseWebViewProvider?: boolean;\n  cancelTransactionToastDuration?: number;\n  /**\n   * @param {boolean} shouldFetchWalletUrlOnLoad if set,\n   * `useParseSignedTransactions` will read the walletUrl\n   * at application boot instead of hook mount time\n   */\n  shouldFetchWalletUrlOnLoad?: boolean;\n  isSSR?: boolean;\n};\n", "import { NativeAuthConfigType } from './login.types';\nexport * from './signedMessage.types';\n\nexport interface WalletConnectSignatureType {\n  id?: number;\n  jsonrpc?: string;\n  signature: string;\n}\n\nexport interface RouteType {\n  path: string;\n  component: any;\n  authenticatedRoute?: boolean;\n}\n\nexport interface TokenLoginType {\n  loginToken: string;\n  signature?: string;\n  nativeAuthToken?: string;\n  /**\n   * config to be restored when web wallet provider returns url signature\n   */\n  nativeAuthConfig?: NativeAuthConfigType;\n}\n\nexport * from './account.types';\nexport * from './dappProvider.types';\nexport * from './enums.types';\nexport * from './login.types';\nexport * from './network.types';\nexport * from './serverTransactions.types';\nexport * from './suspiciousLink';\nexport * from './transactions.types';\nexport * from './dappConfig.types';\n", "import { EnvironmentsEnum, NetworkType } from 'types';\n\nexport const fallbackNetworkConfigurations: Record<\n  keyof typeof EnvironmentsEnum,\n  NetworkType\n> = {\n  devnet: {\n    id: 'devnet',\n    chainId: 'D',\n    name: 'Devnet',\n    egldLabel: 'xEGLD',\n    decimals: '18',\n    digits: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink:\n      'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://xportal.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletConnectV2RelayAddresses: ['wss://relay.walletconnect.com'],\n    walletAddress: 'https://devnet-wallet.multiversx.com',\n    xAliasAddress: 'https://devnet.xalias.com',\n    apiAddress: 'https://devnet-api.multiversx.com',\n    explorerAddress: 'http://devnet-explorer.multiversx.com',\n    metamaskSnapWalletAddress: 'https://devnet-iframe-wallet.multiversx.com',\n    apiTimeout: '4000',\n    roundDuration: 6000\n  },\n  testnet: {\n    id: 'testnet',\n    chainId: 'T',\n    name: 'Testnet',\n    egldLabel: 'xEGLD',\n    decimals: '18',\n    digits: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink:\n      'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://xportal.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletConnectV2RelayAddresses: ['wss://relay.walletconnect.com'],\n    walletAddress: 'https://testnet-wallet.multiversx.com',\n    xAliasAddress: 'https://testnet.xalias.com',\n    apiAddress: 'https://testnet-api.multiversx.com',\n    explorerAddress: 'http://testnet-explorer.multiversx.com',\n    metamaskSnapWalletAddress: 'https://testnet-iframe-wallet.multiversx.com',\n    apiTimeout: '4000',\n    roundDuration: 6000\n  },\n  mainnet: {\n    id: 'mainnet',\n    chainId: '1',\n    name: 'Mainnet',\n    egldLabel: 'EGLD',\n    decimals: '18',\n    digits: '4',\n    gasPerDataByte: '1500',\n    walletConnectDeepLink:\n      'https://maiar.page.link/?apn=com.elrond.maiar.wallet&isi=1519405832&ibi=com.elrond.maiar.wallet&link=https://xportal.com/',\n    walletConnectBridgeAddresses: ['https://bridge.walletconnect.org'],\n    walletConnectV2RelayAddresses: ['wss://relay.walletconnect.com'],\n    walletAddress: 'https://wallet.multiversx.com',\n    xAliasAddress: 'https://xalias.com',\n    apiAddress: 'https://api.multiversx.com',\n    explorerAddress: 'https://explorer.multiversx.com',\n    metamaskSnapWalletAddress: 'https://iframe-wallet.multiversx.com',\n    apiTimeout: '4000',\n    roundDuration: 6000\n  }\n};\n\nconst { chainId: DEVNET_CHAIN_ID, egldLabel: DEVNET_EGLD_LABEL } =\n  fallbackNetworkConfigurations[EnvironmentsEnum.devnet];\nconst { chainId: TESTNET_CHAIN_ID, egldLabel: TESTNET_EGLD_LABEL } =\n  fallbackNetworkConfigurations[EnvironmentsEnum.testnet];\nconst { chainId: MAINNET_CHAIN_ID, egldLabel: MAINNET_EGLD_LABEL } =\n  fallbackNetworkConfigurations[EnvironmentsEnum.mainnet];\n\nexport {\n  DEVNET_CHAIN_ID,\n  TESTNET_CHAIN_ID,\n  MAINNET_CHAIN_ID,\n  DEVNET_EGLD_LABEL,\n  TESTNET_EGLD_LABEL,\n  MAINNET_EGLD_LABEL\n};\n\nexport const chainIdByEnvironment: Record<EnvironmentsEnum, string> = {\n  [EnvironmentsEnum.devnet]: DEVNET_CHAIN_ID,\n  [EnvironmentsEnum.testnet]: TESTNET_CHAIN_ID,\n  [EnvironmentsEnum.mainnet]: MAINNET_CHAIN_ID\n};\n\nexport const chainIdToEnvironment: Record<string, EnvironmentsEnum> = {\n  [DEVNET_CHAIN_ID]: EnvironmentsEnum.devnet,\n  [TESTNET_CHAIN_ID]: EnvironmentsEnum.testnet,\n  [MAINNET_CHAIN_ID]: EnvironmentsEnum.mainnet\n};\n\nexport const MULTIVERSX_ORIGIN = 'multiversx://';\nexport const TIMEOUT = 3000;\n", "export const CANCEL_TRANSACTION_TOAST_ID = 'cancel-transaction-toast';\nexport const AVERAGE_TX_DURATION_MS = 6000;\nexport const CROSS_SHARD_ROUNDS = 5;\nexport const TRANSACTIONS_STATUS_POLLING_INTERVAL_MS = 90 * 1000; // 90sec\nexport const TRANSACTIONS_STATUS_DROP_INTERVAL_MS = 10 * 60 * 1000; // 10min\nexport const CANCEL_TRANSACTION_TOAST_DEFAULT_DURATION = 20000;\n", "export {\n  WALLET_PROVIDER_MAINNET,\n  WALLET_PROVIDER_DEVNET,\n  WALLET_PROVIDER_TESTNET,\n  WALLET_PROVIDER_CONNECT_URL,\n  WALLET_PROVIDER_DISCONNECT_URL,\n  WALLET_PROVIDER_SEND_TRANSACTION_URL,\n  WALLET_PROVIDER_SIGN_TRANSACTION_URL,\n  WALLET_PROVIDER_SIGN_MESSAGE_URL,\n  WALLET_PROVIDER_CALLBACK_PARAM,\n  WALLET_PROVIDER_CALLBACK_PARAM_TX_SIGNED\n} from '@multiversx/sdk-web-wallet-provider';\n", "export { safeWindow } from '@multiversx/sdk-dapp-utils/out/constants/browserConstants';\n", "import { safeWindow } from 'lib/sdkDappUtils';\n\nconst userAgent = String(safeWindow?.navigator?.userAgent);\n\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\nconst isFirefoxOnWindows =\n  /firefox/i.test(userAgent) && /windows/i.test(userAgent);\n\nexport const isBrowserWithPopupConfirmation = isSafari || isFirefoxOnWindows;\n", "export * from './dataTestIds.enum';\nexport * from './errorsMessages';\nexport * from './extension.constants';\nexport * from './guardianActions.enum';\nexport * from './ledger.constants';\nexport * from './ledgerErrorCodes';\nexport * from './mnemonicWords';\nexport * from './network';\nexport * from './transactionStatus';\nexport * from './web-wallet.constants';\nexport * from './browser';\n\nexport const GAS_PRICE_MODIFIER = 0.01;\nexport const GAS_PER_DATA_BYTE = 1_500;\nexport const GAS_LIMIT = 50_000;\n/**\n * Extra gas limit for guarded transactions\n */\nexport const EXTRA_GAS_LIMIT_GUARDED_TX = 50_000;\nexport const GAS_PRICE = 1_000_000_000;\nexport const DECIMALS = 18;\nexport const DIGITS = 4;\nexport const VERSION = 1;\n\nexport const LEDGER_CONTRACT_DATA_ENABLED_VALUE = 1;\n\nexport const METACHAIN_SHARD_ID = 4294967295;\nexport const ALL_SHARDS_SHARD_ID = 4294967280;\n\nexport const DAPP_INIT_ROUTE = '/dapp/init';\nexport const WALLET_SIGN_SESSION = 'signSession';\nexport const SDK_DAPP_VERSION = 'sdk-dapp-version';\n\nexport const LOGOUT_ACTION_NAME = 'logout';\nexport const LOGIN_ACTION_NAME = 'login';\n\nexport const CANCEL_ACTION_NAME = 'cancelSignTx';\n\nexport const REFUNDED_GAS = 'refundedGas';\n\n/**\n * Not Applicable\n * @value N/A\n */\nexport const N_A = 'N/A';\n\nexport const ZERO = '0';\nexport const ELLIPSIS = '...';\n\nexport const BATCH_TRANSACTIONS_ID_SEPARATOR = '-';\nexport const MULTI_TRANSFER_EGLD_TOKEN = 'EGLD-000000';\n", "export const getUnixTimestamp = () => {\n  return Date.now() / 1000;\n};\n", "export const getUnixTimestampWithAddedMilliseconds = (\n  addedMilliseconds: number\n) => {\n  return (\n    new Date().setMilliseconds(\n      new Date().getMilliseconds() + addedMilliseconds\n    ) / 1000\n  );\n};\n", "export const getUnixTimestampWithAddedSeconds = (addedSeconds: number) => {\n  return new Date().setSeconds(new Date().getSeconds() + addedSeconds);\n};\n", "export * from './getUnixTimestamp';\nexport * from './getUnixTimestampWithAddedMilliseconds';\nexport * from './getUnixTimestampWithAddedSeconds';\n", "import { getUnixTimestamp } from 'utils/dateTime';\n\nexport const localStorageKeys = {\n  loginExpiresAt: 'sdk-dapp-login-expires-at',\n  logoutEvent: 'sdk-dapp-logout-event'\n} as const;\n\ntype LocalValueType = keyof typeof localStorageKeys;\ntype LocalKeyType = typeof localStorageKeys[LocalValueType];\n\ntype ExpiresType = number | false;\n\nconst hasLocalStorage = typeof localStorage !== 'undefined';\n\nexport const setItem = ({\n  key,\n  data,\n  expires\n}: {\n  key: LocalKeyType;\n  data: any;\n  expires: ExpiresType;\n}) => {\n  if (!hasLocalStorage) {\n    return;\n  }\n  localStorage.setItem(\n    String(key),\n    JSON.stringify({\n      expires,\n      data\n    })\n  );\n};\n\nexport const getItem = (key: LocalKeyType): any => {\n  if (!hasLocalStorage) {\n    return;\n  }\n  const item = localStorage.getItem(String(key));\n  if (!item) {\n    return null;\n  }\n\n  const deserializedItem = JSON.parse(item);\n  if (!deserializedItem) {\n    return null;\n  }\n\n  if (\n    !deserializedItem.hasOwnProperty('expires') ||\n    !deserializedItem.hasOwnProperty('data')\n  ) {\n    return null;\n  }\n\n  const expired = getUnixTimestamp() >= deserializedItem.expires;\n  if (expired) {\n    localStorage.removeItem(String(key));\n    return null;\n  }\n\n  return deserializedItem.data;\n};\n\nexport const removeItem = (key: LocalKeyType) => {\n  if (!hasLocalStorage) {\n    return;\n  }\n\n  localStorage.removeItem(String(key));\n};\n\nexport const clear = () => {\n  if (!hasLocalStorage) {\n    return;\n  }\n\n  localStorage.clear();\n};\n", "export type SessionKeyType = 'address' | 'shard' | 'toasts' | 'toastProgress';\ntype ExpiresType = number | false;\n\nexport interface SetItemType {\n  key: SessionKeyType;\n  data: any;\n  expires: ExpiresType;\n}\n\nexport const setItem = ({ key, data, expires }: SetItemType) => {\n  sessionStorage.setItem(\n    String(key),\n    JSON.stringify({\n      expires,\n      data\n    })\n  );\n};\n\nexport const getItem = (key: SessionKeyType): any => {\n  const item = sessionStorage.getItem(String(key));\n  if (!item) {\n    return null;\n  }\n\n  const deserializedItem = JSON.parse(item);\n  if (!deserializedItem) {\n    return null;\n  }\n\n  if (\n    !deserializedItem.hasOwnProperty('expires') ||\n    !deserializedItem.hasOwnProperty('data')\n  ) {\n    return null;\n  }\n\n  const expired = Date.now() >= deserializedItem.expires;\n  if (expired) {\n    sessionStorage.removeItem(String(key));\n    return null;\n  }\n\n  return deserializedItem.data;\n};\n\nexport const removeItem = (key: SessionKeyType) =>\n  sessionStorage.removeItem(String(key));\n\nexport const clear = () => sessionStorage.clear();\n\nexport const storage = {\n  setItem,\n  getItem,\n  removeItem,\n  clear\n};\n", "import * as local from './local';\nimport * as session from './session';\n\nexport const storage = { session, local };\n", "import { createAction } from '@reduxjs/toolkit';\nimport { LOGIN_ACTION_NAME, LOGOUT_ACTION_NAME } from 'constants/index';\nimport { IframeLoginTypes } from 'lib/sdkWebWalletIframeProvider';\nimport { LoginMethodsEnum } from 'types/enums.types';\n\nexport interface LoginActionPayloadType {\n  address: string;\n  loginMethod: LoginMethodsEnum;\n  iframeLoginType?: IframeLoginTypes;\n}\n\nexport const logoutAction = createAction(LOGOUT_ACTION_NAME);\n\nexport const loginAction = createAction(\n  LOGIN_ACTION_NAME,\n  (payload: LoginActionPayloadType) => ({ payload })\n);\n", "import { Address } from '@multiversx/sdk-core';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { REHYDRATE } from 'redux-persist';\nimport { ZERO } from 'constants/index';\nimport { BatchTransactionsWSResponseType } from 'types';\nimport { AccountType } from 'types/account.types';\nimport { storage } from 'utils/storage';\nimport { localStorageKeys } from 'utils/storage/local';\n\nimport {\n  loginAction,\n  logoutAction,\n  LoginActionPayloadType\n} from '../commonActions';\n\nexport interface LedgerAccountType {\n  index: number;\n  address: string;\n  hasContractDataEnabled: boolean;\n  version: string;\n}\n\nexport interface UpdateLedgerAccountPayloadType {\n  index: number;\n  address: string;\n}\n\nexport interface AccountInfoSliceType {\n  address: string;\n  shard?: number;\n  accounts: { [address: string]: AccountType };\n  publicKey: string;\n  ledgerAccount: LedgerAccountType | null;\n  walletConnectAccount: string | null;\n  isAccountLoading: boolean;\n  websocketEvent: {\n    timestamp: number;\n    message: string;\n  } | null;\n  websocketBatchEvent: {\n    timestamp: number;\n    data: BatchTransactionsWSResponseType;\n  } | null;\n  accountLoadingError: string | null;\n}\n\nexport const emptyAccount: AccountType = {\n  balance: '...',\n  address: '',\n  isGuarded: false,\n  nonce: 0,\n  txCount: 0,\n  scrCount: 0,\n  claimableRewards: ZERO\n};\n\nconst initialState: AccountInfoSliceType = {\n  address: '',\n  websocketEvent: null,\n  websocketBatchEvent: null,\n  accounts: { '': emptyAccount },\n  ledgerAccount: null,\n  publicKey: '',\n  walletConnectAccount: null,\n  isAccountLoading: true,\n  accountLoadingError: null\n};\n\nexport const accountInfoSlice = createSlice({\n  name: 'accountInfoSlice',\n  initialState: initialState,\n  reducers: {\n    setAddress: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<string>\n    ) => {\n      const address = action.payload;\n      state.address = address;\n      state.publicKey = address ? new Address(address).hex() : '';\n    },\n    setAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<AccountType>\n    ) => {\n      // account fetching always comes after address is populated\n      const isSameAddress = state.address === action.payload.address;\n\n      state.accounts = {\n        [state.address]: isSameAddress ? action.payload : emptyAccount\n      };\n\n      state.shard = action.payload.shard;\n      state.isAccountLoading = false;\n      state.accountLoadingError = null;\n    },\n    setAccountNonce: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<number>\n    ) => {\n      const { address } = state;\n      state.accounts[address].nonce = action.payload;\n    },\n    setAccountShard: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<number>\n    ) => {\n      state.shard = action.payload;\n    },\n    setLedgerAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<LedgerAccountType | null>\n    ) => {\n      state.ledgerAccount = action.payload;\n    },\n    updateLedgerAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<UpdateLedgerAccountPayloadType>\n    ) => {\n      if (state.ledgerAccount != null) {\n        state.ledgerAccount.index = action.payload.index;\n        state.ledgerAccount.address = action.payload.address;\n      }\n    },\n    setWalletConnectAccount: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<string | null>\n    ) => {\n      state.walletConnectAccount = action.payload;\n    },\n    setIsAccountLoading: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<boolean>\n    ) => {\n      state.isAccountLoading = action.payload;\n      state.accountLoadingError = null;\n    },\n    setAccountLoadingError: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<string | null>\n    ) => {\n      state.accountLoadingError = action.payload;\n      state.isAccountLoading = false;\n    },\n    setWebsocketEvent: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<string>\n    ) => {\n      state.websocketEvent = {\n        timestamp: Date.now(),\n        message: action.payload\n      };\n    },\n    setWebsocketBatchEvent: (\n      state: AccountInfoSliceType,\n      action: PayloadAction<BatchTransactionsWSResponseType>\n    ) => {\n      state.websocketBatchEvent = {\n        timestamp: Date.now(),\n        data: action.payload\n      };\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      storage.local.removeItem(localStorageKeys.loginExpiresAt);\n      return initialState;\n    });\n    builder.addCase(\n      loginAction,\n      (\n        state: AccountInfoSliceType,\n        action: PayloadAction<LoginActionPayloadType>\n      ) => {\n        const { address } = action.payload;\n        state.address = address;\n        state.publicKey = new Address(address).hex();\n      }\n    );\n    builder.addCase(REHYDRATE, (state, action: any) => {\n      if (!action.payload?.account) {\n        return;\n      }\n\n      const { account: accountInfo } = action.payload;\n      const { address, shard, accounts, publicKey } =\n        accountInfo as AccountInfoSliceType;\n      state.address = address;\n      state.shard = shard;\n      const isAddressInAccounts = accounts && address in accounts;\n      state.accounts = isAddressInAccounts ? accounts : initialState.accounts;\n      state.publicKey = publicKey;\n    });\n  }\n});\n\nexport const {\n  setAccount,\n  setAddress,\n  setAccountNonce,\n  setAccountShard,\n  setLedgerAccount,\n  updateLedgerAccount,\n  setWalletConnectAccount,\n  setIsAccountLoading,\n  setAccountLoadingError,\n  setWebsocketEvent,\n  setWebsocketBatchEvent\n} = accountInfoSlice.actions;\n\nexport default accountInfoSlice.reducer;\n", "import { storage } from 'utils/storage';\nimport { localStorageKeys } from 'utils/storage/local';\n\nexport function getNewLoginExpiresTimestamp() {\n  return new Date().setHours(new Date().getHours() + 24);\n}\n\nexport function setLoginExpiresAt(expiresAt: number) {\n  storage.local.setItem({\n    key: localStorageKeys.loginExpiresAt,\n    data: expiresAt,\n    expires: expiresAt\n  });\n}\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IframeLoginTypes } from 'lib/sdkWebWalletIframeProvider';\nimport { setLoginExpiresAt, getNewLoginExpiresTimestamp } from 'storage/local';\nimport { LoginMethodsEnum } from 'types/enums.types';\nimport { TokenLoginType } from '../../types';\nimport {\n  loginAction,\n  logoutAction,\n  LoginActionPayloadType\n} from '../commonActions';\n\nexport interface WalletConnectLoginType {\n  loginType: string;\n  callbackRoute: string;\n  logoutRoute: string;\n}\n\nexport interface LedgerLoginType {\n  index: number;\n  loginType: string;\n}\n\nexport interface LoginInfoType {\n  data: any;\n  expires?: number;\n}\n\nexport interface LoginInfoStateType {\n  loginMethod: LoginMethodsEnum;\n  iframeLoginType?: IframeLoginTypes;\n  walletConnectLogin: WalletConnectLoginType | null;\n  ledgerLogin: LedgerLoginType | null;\n  tokenLogin: TokenLoginType | null;\n  walletLogin: LoginInfoType | null;\n  extensionLogin: LoginInfoType | null;\n  passkeyLogin: LoginInfoType | null;\n  operaLogin: LoginInfoType | null;\n  crossWindowLogin: LoginInfoType | null;\n  iframeWindowLogin: LoginInfoType | null;\n  webviewLogin: LoginInfoType | null;\n  isLoginSessionInvalid: boolean;\n  logoutRoute?: string;\n  isWalletConnectV2Initialized?: boolean;\n}\n\nconst initialState: LoginInfoStateType = {\n  loginMethod: LoginMethodsEnum.none,\n  walletConnectLogin: null,\n  ledgerLogin: null,\n  tokenLogin: null,\n  walletLogin: null,\n  extensionLogin: null,\n  passkeyLogin: null,\n  operaLogin: null,\n  crossWindowLogin: null,\n  iframeWindowLogin: null,\n  isLoginSessionInvalid: false,\n  webviewLogin: null\n};\n\nexport const loginInfoSlice = createSlice({\n  name: 'loginInfoSlice',\n  initialState: initialState,\n  reducers: {\n    setLoginMethod: (\n      state: LoginInfoStateType,\n      action: PayloadAction<LoginMethodsEnum>\n    ) => {\n      state.loginMethod = action.payload;\n    },\n    setTokenLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<TokenLoginType | null>\n    ) => {\n      state.tokenLogin = action.payload;\n    },\n    setTokenLoginSignature: (\n      state: LoginInfoStateType,\n      action: PayloadAction<string>\n    ) => {\n      if (state?.tokenLogin != null) {\n        state.tokenLogin.signature = action.payload;\n      }\n    },\n    setWalletLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<LoginInfoType | null>\n    ) => {\n      state.walletLogin = action.payload;\n    },\n    setWalletConnectLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<WalletConnectLoginType | null>\n    ) => {\n      state.walletConnectLogin = action.payload;\n    },\n    setLedgerLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<LedgerLoginType | null>\n    ) => {\n      state.ledgerLogin = action.payload;\n    },\n    setWebviewLogin: (\n      state: LoginInfoStateType,\n      action: PayloadAction<LoginInfoType | null>\n    ) => {\n      state.webviewLogin = action.payload;\n    },\n    invalidateLoginSession: (state: LoginInfoStateType) => {\n      state.isLoginSessionInvalid = true;\n    },\n    setLogoutRoute: (\n      state: LoginInfoStateType,\n      action: PayloadAction<string | undefined>\n    ) => {\n      state.logoutRoute = action.payload;\n    },\n    setIsWalletConnectV2Initialized: (\n      state: LoginInfoStateType,\n      action: PayloadAction<boolean>\n    ) => {\n      state.isWalletConnectV2Initialized = action.payload;\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n    builder.addCase(\n      loginAction,\n      (\n        state: LoginInfoStateType,\n        action: PayloadAction<LoginActionPayloadType>\n      ) => {\n        state.isLoginSessionInvalid = false;\n        state.loginMethod = action.payload.loginMethod;\n        state.iframeLoginType = action.payload.iframeLoginType;\n        setLoginExpiresAt(getNewLoginExpiresTimestamp());\n      }\n    );\n  }\n});\n\nexport const {\n  setLoginMethod,\n  setWalletConnectLogin,\n  setLedgerLogin,\n  setTokenLogin,\n  setTokenLoginSignature,\n  setWalletLogin,\n  invalidateLoginSession,\n  setLogoutRoute,\n  setIsWalletConnectV2Initialized,\n  setWebviewLogin\n} = loginInfoSlice.actions;\n\nexport default loginInfoSlice.reducer;\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { NotificationTypesEnum } from 'types';\nimport { logoutAction } from '../commonActions';\n\nexport interface TxSubmittedModal {\n  sessionId: string;\n  submittedMessage: string;\n}\n\nexport interface NotificationModal {\n  type: NotificationTypesEnum;\n  iconClassName: string;\n  title: string;\n  description: string;\n}\n\nexport interface ModalsSliceState {\n  txSubmittedModal?: TxSubmittedModal;\n  notificationModal?: NotificationModal;\n}\n\nconst initialState: ModalsSliceState = {};\n\nexport const modalsSlice = createSlice({\n  name: 'modalsSlice',\n  initialState,\n  reducers: {\n    setTxSubmittedModal: (\n      state: ModalsSliceState,\n      action: PayloadAction<TxSubmittedModal>\n    ) => {\n      state.txSubmittedModal = action.payload;\n    },\n    setNotificationModal: (\n      state: ModalsSliceState,\n      action: PayloadAction<NotificationModal>\n    ) => {\n      state.notificationModal = action.payload;\n    },\n    clearTxSubmittedModal: (state: ModalsSliceState) => {\n      state.txSubmittedModal = undefined;\n    },\n    clearNotificationModal: (state: ModalsSliceState) => {\n      state.notificationModal = undefined;\n    }\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n  }\n});\n\nexport const {\n  setTxSubmittedModal,\n  setNotificationModal,\n  clearTxSubmittedModal,\n  clearNotificationModal\n} = modalsSlice.actions;\n\nexport default modalsSlice.reducer;\n", "export const isWindowAvailable = () =>\n  typeof window != 'undefined' && typeof window?.location != 'undefined';\n", "import { isWindowAvailable } from 'utils/isWindowAvailable';\n\ntype GetWindowLocationType = {\n  pathname: string;\n  hash: string;\n  origin: string;\n  href: string;\n  search: string;\n};\n\nexport const getWindowLocation = (): GetWindowLocationType => {\n  const isAvailable = isWindowAvailable();\n\n  if (!isAvailable) {\n    return {\n      pathname: '',\n      hash: '',\n      origin: '',\n      href: '',\n      search: ''\n    };\n  }\n\n  const {\n    location: { pathname, hash, origin, href, search }\n  } = window;\n\n  return {\n    pathname,\n    hash,\n    origin,\n    href,\n    search\n  };\n};\n", "import { getWindowLocation } from './getWindowLocation';\n\nexport const addOriginToLocationPath = (path = '') => {\n  const location = getWindowLocation();\n  const isHrefUrl = path.startsWith('http') || path.startsWith('www.');\n\n  const shouldNotChangePath =\n    !location.origin || path.startsWith(location.origin) || isHrefUrl;\n\n  if (shouldNotChangePath) {\n    return path;\n  }\n\n  return `${location.origin}/${path.replace('/', '')}`;\n};\n", "import { getWindowLocation } from './index';\n\nexport const getDefaultCallbackUrl = () => {\n  const { pathname, search, hash } = getWindowLocation();\n\n  return `${pathname ?? ''}${search ?? ''}${hash ?? ''}`;\n};\n", "import { safeWindow } from 'lib/sdkDappUtils';\n\nexport const redirect = (to: string) => {\n  if (!safeWindow.location) {\n    return;\n  }\n\n  const url = new URL(safeWindow.location.href);\n\n  const isBrowser = url.protocol.startsWith('http');\n\n  if (!isBrowser) {\n    return safeWindow.location.reload();\n  }\n\n  safeWindow.location.assign(to);\n};\n", "export * from './addOriginToLocationPath';\nexport * from './getDefaultCallbackUrl';\nexport * from './getWindowLocation';\nexport * from './redirect';\n", "import { redirect } from './window';\n\nlet preventRedirect = false;\n\nexport const preventRedirects = (shouldPreventRedirect = true) => {\n  preventRedirect = shouldPreventRedirect;\n};\n\nexport const safeRedirect = ({\n  timeout = 0,\n  url\n}: {\n  timeout?: number;\n  url: string;\n}) => {\n  if (!preventRedirect) {\n    setTimeout(() => {\n      if (!window) {\n        return;\n      }\n\n      return redirect(url);\n    }, timeout);\n  }\n};\n", "import { OnLoginRedirectOptionsType, OnProviderLoginType } from '../../types';\nimport { safeRedirect } from '../redirect';\n\ninterface OptionalRedirectType extends Omit<OnProviderLoginType, 'token'> {\n  options?: OnLoginRedirectOptionsType;\n}\n\nconst DEFAULT_TIMEOUT = 200;\n\nexport function optionalRedirect({\n  callbackRoute,\n  onLoginRedirect,\n  options\n}: OptionalRedirectType) {\n  const shouldRedirect = Boolean(callbackRoute);\n  const hasOnLoginRedirect = typeof onLoginRedirect === 'function';\n\n  if (shouldRedirect && callbackRoute != null) {\n    // if onLoginRedirect is defined, it has priority over safeRedirect\n    if (hasOnLoginRedirect) {\n      return onLoginRedirect(callbackRoute, options);\n    }\n\n    safeRedirect({\n      url: callbackRoute,\n      timeout: DEFAULT_TIMEOUT\n    });\n  }\n}\n", "export function getRandomAddressFromNetwork(walletConnectAddresses: string[]) {\n  return walletConnectAddresses[\n    Math.floor(Math.random() * walletConnectAddresses.length)\n  ];\n}\n", "import { ledgerErrorCodes } from 'constants/ledgerErrorCodes';\n\nconst ledgerAppErrorText = 'Check if the MultiversX app is open on Ledger';\nconst notConnectedCode = 0x6e01;\nconst wrongClaCode = 0x6e00;\nconst inactiveAppCodes = [notConnectedCode, wrongClaCode];\n\nexport function getLedgerErrorCodes(err?: any) {\n  let errorMessage: string | null = null;\n  if (err?.statusCode in ledgerErrorCodes) {\n    const statusCode: keyof typeof ledgerErrorCodes = err?.statusCode;\n    const { message } = ledgerErrorCodes[statusCode];\n    errorMessage = inactiveAppCodes.includes(statusCode)\n      ? ledgerAppErrorText\n      : message;\n  }\n  return {\n    errorMessage,\n    defaultErrorMessage: ledgerAppErrorText\n  };\n}\n", "export * from './optionalRedirect';\nexport * from './getRandomAddressFromNetwork';\nexport * from './getLedgerErrorCodes';\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport omit from 'lodash.omit';\nimport { REHYDRATE } from 'redux-persist';\nimport { AVERAGE_TX_DURATION_MS } from 'constants/transactionStatus';\nimport { logoutAction } from 'reduxStore/commonActions';\nimport {\n  AccountInfoSliceNetworkType,\n  BaseNetworkType,\n  NetworkType\n} from 'types';\nimport { getRandomAddressFromNetwork } from 'utils/internal';\n\nexport interface NetworkConfigStateType {\n  network: AccountInfoSliceNetworkType;\n}\n\nexport const defaultNetwork: AccountInfoSliceNetworkType = {\n  id: 'not-configured',\n  chainId: '',\n  name: 'NOT CONFIGURED',\n  egldLabel: '',\n  decimals: '18',\n  digits: '4',\n  gasPerDataByte: '1500',\n  walletConnectDeepLink: '',\n  walletConnectBridgeAddress: '',\n  walletConnectV2RelayAddress: '',\n  walletConnectV2ProjectId: '',\n  walletConnectV2Options: {},\n  walletAddress: '',\n  apiAddress: '',\n  explorerAddress: '',\n  apiTimeout: '4000',\n  roundDuration: AVERAGE_TX_DURATION_MS\n};\n\nconst initialState: NetworkConfigStateType = {\n  network: defaultNetwork\n};\n\nexport const networkConfigSlice = createSlice({\n  name: 'appConfig',\n  initialState,\n  reducers: {\n    initializeNetworkConfig: (\n      state: NetworkConfigStateType,\n      action: PayloadAction<NetworkType>\n    ) => {\n      const walletConnectV2RelayAddress = getRandomAddressFromNetwork(\n        action.payload.walletConnectV2RelayAddresses\n      );\n\n      const network: BaseNetworkType = omit(\n        action.payload,\n        'walletConnectV2RelayAddresses'\n      );\n\n      state.network = {\n        ...state.network,\n        ...network,\n        walletConnectV2RelayAddress\n      };\n    },\n    updateNetworkConfig: (\n      state: NetworkConfigStateType,\n      action: PayloadAction<Partial<AccountInfoSliceNetworkType>>\n    ) => {\n      state.network = {\n        ...state.network,\n        ...action.payload\n      };\n    },\n    setCustomWalletAddress: (\n      state: NetworkConfigStateType,\n      action: PayloadAction<AccountInfoSliceNetworkType['customWalletAddress']>\n    ) => {\n      state.network.customWalletAddress = action.payload;\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, (state: NetworkConfigStateType) => {\n      state.network.customWalletAddress = undefined;\n    }),\n      builder.addCase(REHYDRATE, (state, action: any) => {\n        if (!action.payload?.network?.customWalletAddress) {\n          return;\n        }\n\n        const {\n          network: { customWalletAddress }\n        } = action.payload;\n        state.network.customWalletAddress = customWalletAddress;\n      });\n  }\n});\n\nexport const {\n  initializeNetworkConfig,\n  updateNetworkConfig,\n  setCustomWalletAddress\n} = networkConfigSlice.actions;\n\nexport default networkConfigSlice.reducer;\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SignedMessageStatusesEnum } from 'types';\nimport { logoutAction } from '../commonActions';\n\nexport interface SignedSessionPayloadType {\n  sessionId: string;\n  errorMessage?: string;\n  signedSession: SignedSessionType;\n}\n\nexport interface SignedMessageInfoStatePayloadType {\n  errorMessage?: string;\n  isSigning: boolean;\n}\n\nexport interface SignedSessionStatusPayloadType {\n  sessionId: string;\n  status: SignedMessageStatusesEnum;\n}\n\nexport interface SignedMessageInfoType {\n  message?: string;\n  signature?: string;\n}\n\nexport interface SignedSessionType extends SignedMessageInfoType {\n  callbackUrl?: string;\n  status: SignedMessageStatusesEnum;\n}\n\nexport interface SignedMessageInfoStateType\n  extends SignedMessageInfoStatePayloadType {\n  signedSessions: {\n    [sessionId: string]: SignedSessionType;\n  };\n}\n\nconst initialState: SignedMessageInfoStateType = {\n  isSigning: false,\n  signedSessions: {}\n};\n\nexport const signedMessageInfoSlice = createSlice({\n  name: 'signedMessageInfoSliceState',\n  initialState,\n  reducers: {\n    setSignSession: (\n      state: SignedMessageInfoStateType,\n      action: PayloadAction<SignedSessionPayloadType>\n    ) => {\n      const { sessionId, signedSession, errorMessage } = action.payload;\n\n      if (errorMessage) {\n        state.errorMessage = errorMessage;\n      }\n\n      state.isSigning =\n        signedSession.status === SignedMessageStatusesEnum.pending;\n\n      state.signedSessions[sessionId] = {\n        ...state.signedSessions[sessionId],\n        ...signedSession\n      };\n    },\n    setSignSessionState: (\n      state: SignedMessageInfoStateType,\n      action: PayloadAction<SignedMessageInfoStatePayloadType>\n    ) => {\n      return {\n        ...state,\n        ...action.payload\n      };\n    },\n    clearSignedMessageInfo: () => {\n      return initialState;\n    }\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n  }\n});\n\nexport const { setSignSession, clearSignedMessageInfo, setSignSessionState } =\n  signedMessageInfoSlice.actions;\n\nexport const signedMessageInfoReducer = signedMessageInfoSlice.reducer;\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { REHYDRATE } from 'redux-persist';\nimport { ToastsEnum } from 'types';\nimport { CustomToastType, TransactionToastType } from 'types/toasts.types';\nimport { getUnixTimestamp } from 'utils/dateTime/getUnixTimestamp';\nimport { logoutAction } from '../commonActions';\n\nexport interface ToastsSliceState {\n  customToasts: CustomToastType[];\n  transactionToasts: TransactionToastType[];\n}\n\nconst initialState: ToastsSliceState = {\n  customToasts: [],\n  transactionToasts: []\n};\n\nexport const toastsSlice = createSlice({\n  name: 'toastsSlice',\n  initialState,\n  reducers: {\n    addCustomToast: (\n      state: ToastsSliceState,\n      action: PayloadAction<CustomToastType>\n    ) => {\n      const toastId =\n        action.payload.toastId ||\n        `custom-toast-${state.customToasts.length + 1}`;\n\n      const existingToastIndex = state.customToasts.findIndex(\n        (toast) => toast.toastId === toastId\n      );\n\n      if (existingToastIndex !== -1) {\n        state.customToasts[existingToastIndex] = {\n          ...state.customToasts[existingToastIndex],\n          ...action.payload,\n          type: ToastsEnum.custom,\n          toastId\n        } as CustomToastType;\n        return;\n      }\n\n      state.customToasts.push({\n        ...action.payload,\n        type: ToastsEnum.custom,\n        toastId\n      });\n    },\n\n    removeCustomToast: (\n      state: ToastsSliceState,\n      action: PayloadAction<string>\n    ) => {\n      state.customToasts = state.customToasts.filter(\n        (toast) => toast.toastId !== action.payload\n      );\n    },\n\n    addTransactionToast: (\n      state: ToastsSliceState,\n      action: PayloadAction<string>\n    ) => {\n      state.transactionToasts.push({\n        type: ToastsEnum.transaction,\n        startTimestamp: getUnixTimestamp(),\n        toastId:\n          action.payload || `custom-toast-${state.transactionToasts.length + 1}`\n      });\n    },\n    removeTransactionToast: (\n      state: ToastsSliceState,\n      action: PayloadAction<string>\n    ) => {\n      state.transactionToasts = state.transactionToasts.filter((toast) => {\n        return toast.toastId !== action.payload;\n      });\n    }\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n    builder.addCase(REHYDRATE, (state, action: any) => {\n      const excludeComponentToasts =\n        action.customToasts?.filter(\n          (toast: CustomToastType) => !('component' in toast)\n        ) ?? [];\n      state.customToasts = excludeComponentToasts;\n    });\n  }\n});\n\nexport const {\n  addCustomToast,\n  removeCustomToast,\n  addTransactionToast,\n  removeTransactionToast\n} = toastsSlice.actions;\n\nexport default toastsSlice.reducer;\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { TransactionsDisplayInfoType } from 'types';\nimport { logoutAction } from '../commonActions';\n\nexport interface StateType {\n  [sessionId: string]: TransactionsDisplayInfoType;\n}\n\nexport interface SetTransactionsInfoPayloadType {\n  sessionId: string;\n  transactionsDisplayInfo: TransactionsDisplayInfoType;\n}\n\nexport const defaultTransactionErrorMessage = 'Transaction failed';\nexport const defaultTransactionSuccessMessage = 'Transaction successful';\nexport const defaultTransactionProcessingMessage = 'Processing transaction';\nexport const defaultTransactionSubmittedMessage = 'Transaction submitted';\n\nconst initialState: StateType = {};\n\nexport const signTransactionsSlice = createSlice({\n  name: 'transactionsInfo',\n  initialState,\n  reducers: {\n    setTransactionsDisplayInfo(\n      state: StateType,\n      action: PayloadAction<SetTransactionsInfoPayloadType>\n    ) {\n      const { sessionId, transactionsDisplayInfo } = action.payload;\n      if (sessionId != null) {\n        state[sessionId] = {\n          errorMessage:\n            transactionsDisplayInfo?.errorMessage ||\n            defaultTransactionErrorMessage,\n          successMessage:\n            transactionsDisplayInfo?.successMessage ||\n            defaultTransactionSuccessMessage,\n          processingMessage:\n            transactionsDisplayInfo?.processingMessage ||\n            defaultTransactionProcessingMessage,\n          submittedMessage:\n            transactionsDisplayInfo?.submittedMessage ||\n            defaultTransactionSubmittedMessage,\n          transactionDuration: transactionsDisplayInfo?.transactionDuration\n        };\n      }\n    },\n    clearTransactionsInfoForSessionId(\n      state: StateType,\n      action: PayloadAction<string | undefined>\n    ) {\n      if (action.payload != null) {\n        delete state[action.payload];\n      }\n    },\n    clearTransactionsInfo: () => initialState\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n  }\n});\n\nexport const {\n  clearTransactionsInfo,\n  setTransactionsDisplayInfo,\n  clearTransactionsInfoForSessionId\n} = signTransactionsSlice.actions;\n\nexport default signTransactionsSlice.reducer;\n", "import {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums.types';\n\nexport const pendingBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.sent\n];\n\nexport const successBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.success\n];\n\nexport const failBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.fail,\n  TransactionBatchStatusesEnum.cancelled,\n  TransactionBatchStatusesEnum.timedOut\n];\n\nexport const invalidBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.invalid\n];\n\nexport const timedOutBatchTransactionsStates = [\n  TransactionBatchStatusesEnum.timedOut\n];\n\nexport const pendingServerTransactionsStatuses = [\n  TransactionServerStatusesEnum.pending\n];\n\nexport const successServerTransactionsStates = [\n  TransactionServerStatusesEnum.success\n];\n\nexport const failServerTransactionsStates = [\n  TransactionServerStatusesEnum.fail,\n  TransactionServerStatusesEnum.invalid\n];\n\nexport const notExecutedServerTransactionsStates = [\n  TransactionServerStatusesEnum.notExecuted\n];\n\nexport function getIsTransactionPending(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionPending(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionPending(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionSuccessful(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionSuccessful(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionSuccessful(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionFailed(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionFailed(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionFailed(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionNotExecuted(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    (isBatchTransactionInvalid(status as TransactionBatchStatusesEnum) ||\n      isServerTransactionNotExecuted(status as TransactionServerStatusesEnum))\n  );\n}\n\nexport function getIsTransactionTimedOut(\n  status?: TransactionServerStatusesEnum | TransactionBatchStatusesEnum\n) {\n  return (\n    status != null &&\n    isBatchTransactionTimedOut(status as TransactionBatchStatusesEnum)\n  );\n}\n\nexport function isBatchTransactionPending(\n  status?: TransactionBatchStatusesEnum\n) {\n  return status != null && pendingBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionSuccessful(\n  status: TransactionBatchStatusesEnum\n) {\n  return status != null && successBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionFailed(status: TransactionBatchStatusesEnum) {\n  return status != null && failBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionInvalid(\n  status: TransactionBatchStatusesEnum\n) {\n  return status != null && invalidBatchTransactionsStates.includes(status);\n}\n\nexport function isBatchTransactionTimedOut(\n  status?: TransactionBatchStatusesEnum\n) {\n  return status != null && timedOutBatchTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionPending(\n  status?: TransactionServerStatusesEnum\n) {\n  return status != null && pendingServerTransactionsStatuses.includes(status);\n}\nexport function isServerTransactionSuccessful(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && successServerTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionFailed(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && failServerTransactionsStates.includes(status);\n}\n\nexport function isServerTransactionNotExecuted(\n  status: TransactionServerStatusesEnum\n) {\n  return status != null && notExecutedServerTransactionsStates.includes(status);\n}\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { REHYDRATE } from 'redux-persist';\nimport {\n  CustomTransactionInformation,\n  ServerTransactionType,\n  SignedTransactionsBodyType,\n  SignedTransactionsType,\n  SignedTransactionType,\n  TransactionsToSignType\n} from 'types';\nimport {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums.types';\nimport {\n  getIsTransactionFailed,\n  getIsTransactionNotExecuted,\n  getIsTransactionSuccessful\n} from 'utils/transactions/transactionStateByStatus';\nimport { logoutAction } from '../commonActions';\n\nexport interface UpdateSignedTransactionsPayloadType {\n  sessionId: string;\n  status: TransactionBatchStatusesEnum;\n  errorMessage?: string;\n  transactions?: SignedTransactionType[];\n  customTransactionInformationOverrides?: Partial<CustomTransactionInformation>;\n}\n\nexport interface MoveTransactionsToSignedStatePayloadType\n  extends SignedTransactionsBodyType {\n  sessionId: string;\n  customTransactionInformation?: CustomTransactionInformation;\n}\n\nexport interface UpdateSignedTransactionStatusPayloadType {\n  sessionId: string;\n  transactionHash: string;\n  status: TransactionServerStatusesEnum;\n  serverTransaction?: ServerTransactionType;\n  errorMessage?: string;\n  inTransit?: boolean;\n}\n\nexport interface TransactionsSliceStateType {\n  signedTransactions: SignedTransactionsType;\n  transactionsToSign: TransactionsToSignType | null;\n  signTransactionsError: string | null;\n  signTransactionsCancelMessage: string | null;\n  customTransactionInformationForSessionId: {\n    [sessionId: string]: CustomTransactionInformation;\n  };\n}\n\nconst initialState: TransactionsSliceStateType = {\n  signedTransactions: {},\n  transactionsToSign: null,\n  signTransactionsError: null,\n  signTransactionsCancelMessage: null,\n  customTransactionInformationForSessionId: {}\n};\n\nconst defaultCustomInformation: CustomTransactionInformation = {\n  signWithoutSending: false,\n  sessionInformation: null,\n  redirectAfterSign: false\n};\n\nexport const transactionsSlice = createSlice({\n  name: 'transactionsSlice',\n  initialState,\n  reducers: {\n    moveTransactionsToSignedState: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<MoveTransactionsToSignedStatePayloadType>\n    ) => {\n      const {\n        sessionId,\n        transactions,\n        errorMessage,\n        status,\n        redirectRoute,\n        customTransactionInformation: overrideCustomTransactionInformation\n      } = action.payload;\n\n      state.customTransactionInformationForSessionId[sessionId] = {\n        ...defaultCustomInformation,\n        ...(state.signedTransactions[sessionId]?.customTransactionInformation ||\n          {}),\n        ...(state.customTransactionInformationForSessionId[sessionId] || {})\n      };\n\n      state.signedTransactions[sessionId] = {\n        transactions,\n        status,\n        errorMessage,\n        redirectRoute,\n        customTransactionInformation: {\n          ...state.customTransactionInformationForSessionId[sessionId],\n          ...(overrideCustomTransactionInformation ?? {})\n        }\n      };\n\n      if (state?.transactionsToSign?.sessionId === sessionId) {\n        state.transactionsToSign = initialState.transactionsToSign;\n      }\n    },\n\n    clearSignedTransaction: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<string>\n    ) => {\n      if (state.signedTransactions[action.payload]) {\n        delete state.signedTransactions[action.payload];\n      }\n    },\n    clearTransactionToSign: (state: TransactionsSliceStateType) => {\n      if (state?.transactionsToSign) {\n        state.transactionsToSign = null;\n      }\n    },\n    updateSignedTransaction: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<SignedTransactionsType>\n    ) => {\n      state.signedTransactions = {\n        ...state.signedTransactions,\n        ...action.payload\n      };\n    },\n    updateSignedTransactions: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<UpdateSignedTransactionsPayloadType>\n    ) => {\n      const { sessionId, status, errorMessage, transactions } = action.payload;\n      const session = state.signedTransactions[sessionId];\n      if (session != null) {\n        state.signedTransactions[sessionId].status = status;\n        if (errorMessage != null) {\n          state.signedTransactions[sessionId].errorMessage = errorMessage;\n        }\n        if (transactions != null) {\n          state.signedTransactions[sessionId].transactions = transactions;\n        }\n      }\n    },\n    updateSignedTransactionStatus: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<UpdateSignedTransactionStatusPayloadType>\n    ) => {\n      const {\n        sessionId,\n        status,\n        errorMessage,\n        transactionHash,\n        serverTransaction,\n        inTransit\n      } = action.payload;\n      const transactions = state.signedTransactions?.[sessionId]?.transactions;\n      if (transactions != null) {\n        state.signedTransactions[sessionId].transactions = transactions.map(\n          (transaction) => {\n            if (transaction.hash === transactionHash) {\n              return {\n                ...(serverTransaction ?? {}),\n                ...transaction,\n                status,\n                errorMessage,\n                inTransit\n              };\n            }\n            return transaction;\n          }\n        );\n        const areTransactionsSuccessful = state.signedTransactions[\n          sessionId\n        ]?.transactions?.every((transaction) => {\n          return getIsTransactionSuccessful(transaction.status);\n        });\n\n        const areTransactionsFailed = state.signedTransactions[\n          sessionId\n        ]?.transactions?.some((transaction) =>\n          getIsTransactionFailed(transaction.status)\n        );\n\n        const areTransactionsNotExecuted = state.signedTransactions[\n          sessionId\n        ]?.transactions?.every((transaction) =>\n          getIsTransactionNotExecuted(transaction.status)\n        );\n\n        if (areTransactionsSuccessful) {\n          state.signedTransactions[sessionId].status =\n            TransactionBatchStatusesEnum.success;\n        }\n        if (areTransactionsFailed) {\n          state.signedTransactions[sessionId].status =\n            TransactionBatchStatusesEnum.fail;\n        }\n        if (areTransactionsNotExecuted) {\n          state.signedTransactions[sessionId].status =\n            TransactionBatchStatusesEnum.invalid;\n        }\n      }\n    },\n    setTransactionsToSign: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<TransactionsToSignType>\n    ) => {\n      state.transactionsToSign = action.payload;\n\n      const { sessionId, customTransactionInformation } = action.payload;\n      state.customTransactionInformationForSessionId[sessionId] =\n        customTransactionInformation;\n\n      state.signTransactionsError = null;\n    },\n    clearAllTransactionsToSign: (state: TransactionsSliceStateType) => {\n      state.transactionsToSign = initialState.transactionsToSign;\n      state.signTransactionsError = null;\n    },\n    clearAllSignedTransactions: (state: TransactionsSliceStateType) => {\n      state.signedTransactions = initialState.signedTransactions;\n    },\n    setSignTransactionsError: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<string | null>\n    ) => {\n      state.signTransactionsError = action.payload;\n    },\n    setSignTransactionsCancelMessage: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<string | null>\n    ) => {\n      state.signTransactionsCancelMessage = action.payload;\n    },\n    updateSignedTransactionsCustomTransactionInformation: (\n      state: TransactionsSliceStateType,\n      action: PayloadAction<{\n        sessionId: string;\n        customTransactionInformationOverrides: Partial<CustomTransactionInformation>;\n      }>\n    ) => {\n      const { sessionId, customTransactionInformationOverrides } =\n        action.payload;\n      const session = state.signedTransactions[sessionId];\n      if (session != null) {\n        state.signedTransactions[sessionId].customTransactionInformation = {\n          ...(state.signedTransactions[sessionId]\n            .customTransactionInformation as CustomTransactionInformation),\n          ...customTransactionInformationOverrides\n        };\n      }\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n    builder.addCase(REHYDRATE, (state, action: any) => {\n      // cancel message does not persist between page reloads\n      state.signTransactionsCancelMessage = null;\n\n      if (!action.payload?.transactions) {\n        return;\n      }\n\n      const { signedTransactions, customTransactionInformationForSessionId } =\n        action.payload.transactions;\n      const parsedSignedTransactions = Object.entries(\n        signedTransactions\n      ).reduce((acc, [sessionId, transaction]) => {\n        const txTimestamp: any = new Date(sessionId);\n        const expiration: any = new Date();\n        expiration.setHours(expiration.getHours() + 5);\n        const isExpired = expiration - txTimestamp > 0;\n        if (!isExpired) {\n          acc[sessionId] = transaction;\n        }\n        return acc;\n      }, {} as { [key: string]: any });\n      if (customTransactionInformationForSessionId != null) {\n        state.customTransactionInformationForSessionId =\n          customTransactionInformationForSessionId;\n      }\n      if (signedTransactions != null) {\n        state.signedTransactions = parsedSignedTransactions;\n      }\n    });\n  }\n});\n\nexport const {\n  updateSignedTransactionStatus,\n  updateSignedTransactions,\n  setTransactionsToSign,\n  clearAllTransactionsToSign,\n  clearAllSignedTransactions,\n  clearSignedTransaction,\n  clearTransactionToSign,\n  setSignTransactionsError,\n  setSignTransactionsCancelMessage,\n  moveTransactionsToSignedState,\n  updateSignedTransactionsCustomTransactionInformation\n} = transactionsSlice.actions;\n\nexport default transactionsSlice.reducer;\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { BatchTransactionsResponseType } from 'types';\nimport { logoutAction } from '../commonActions';\n\nexport interface BatchTransactionsSliceStateType {\n  [batchId: string]: BatchTransactionsResponseType;\n}\n\nconst initialState: BatchTransactionsSliceStateType = {};\n\nexport const batchTransactionsSlice = createSlice({\n  name: 'batchTransactionsSlice',\n  initialState,\n  reducers: {\n    setBatchTransactions: (\n      state: BatchTransactionsSliceStateType,\n      action: PayloadAction<BatchTransactionsResponseType>\n    ) => {\n      state[action.payload.id] = action.payload;\n    },\n    updateBatchTransactions: (\n      state: BatchTransactionsSliceStateType,\n      action: PayloadAction<BatchTransactionsResponseType>\n    ) => {\n      state[action.payload.id] = action.payload;\n    },\n    clearBatchTransactions: (\n      state: BatchTransactionsSliceStateType,\n      action: PayloadAction<{ batchId: string }>\n    ) => {\n      delete state[action.payload.batchId];\n    },\n    clearAllBatchTransactions: () => initialState\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n  }\n});\n\nexport const {\n  setBatchTransactions,\n  updateBatchTransactions,\n  clearBatchTransactions,\n  clearAllBatchTransactions\n} = batchTransactionsSlice.actions;\n\nexport default batchTransactionsSlice.reducer;\n", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DappConfigType } from 'types';\nimport { logoutAction } from '../commonActions';\n\nexport type DappConfigSliceStateType = DappConfigType | undefined;\n\nconst initialState: DappConfigSliceStateType = {};\n\nexport const dappConfigSlice = createSlice({\n  name: 'dappConfigSlice',\n  initialState,\n  reducers: {\n    setDappConfig: (\n      _state: DappConfigSliceStateType,\n      action: PayloadAction<DappConfigSliceStateType>\n    ) => action.payload\n  },\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n  }\n});\n\nexport const { setDappConfig } = dappConfigSlice.actions;\n\nexport default dappConfigSlice.reducer;\n", "export * from './accountInfoSlice';\nexport * from './loginInfoSlice';\nexport * from './modalsSlice';\nexport * from './networkConfigSlice';\nexport * from './signedMessageInfoSlice';\nexport * from './toastsSlice';\nexport * from './transactionsInfoSlice';\nexport * from './transactionsSlice';\nexport * from './batchTransactionsSlice';\nexport * from './dappConfigSlice';\n", "export enum ReducersEnum {\n  account = 'account',\n  dappModal = 'dappModal',\n  dappConfig = 'dappConfig',\n  loginInfo = 'loginInfo',\n  modals = 'modals',\n  networkConfig = 'networkConfig',\n  signedMessageInfo = 'signedMessageInfo',\n  toasts = 'toasts',\n  transactions = 'transactions',\n  batchTransactions = 'batchTransactions',\n  transactionsInfo = 'transactionsInfo',\n  transactionsToSign = 'transactionsToSign'\n}\n", "import { combineReducers } from '@reduxjs/toolkit';\n\nimport { ReducersEnum } from 'types/reducers.types';\nimport account from './slices/accountInfoSlice';\nimport batchTransactions from './slices/batchTransactionsSlice';\nimport dappConfig from './slices/dappConfigSlice';\nimport loginInfo from './slices/loginInfoSlice';\nimport modals from './slices/modalsSlice';\nimport networkConfig from './slices/networkConfigSlice';\nimport { signedMessageInfoReducer } from './slices/signedMessageInfoSlice';\nimport toasts from './slices/toastsSlice';\nimport transactionsInfo from './slices/transactionsInfoSlice';\nimport transactions from './slices/transactionsSlice';\n\nconst reducers = {\n  [ReducersEnum.account]: account,\n  [ReducersEnum.dappConfig]: dappConfig,\n  [ReducersEnum.loginInfo]: loginInfo,\n  [ReducersEnum.modals]: modals,\n  [ReducersEnum.networkConfig]: networkConfig,\n  [ReducersEnum.signedMessageInfo]: signedMessageInfoReducer,\n  [ReducersEnum.toasts]: toasts,\n  [ReducersEnum.transactionsInfo]: transactionsInfo,\n  [ReducersEnum.transactions]: transactions,\n  [ReducersEnum.batchTransactions]: batchTransactions\n};\n\nconst getRootReducer = (customReducers = {}) =>\n  combineReducers({ ...reducers, ...customReducers });\n\nexport default getRootReducer;\n", "import { createMigrate, persistReducer } from 'redux-persist';\nimport reduxPersistLocalStorage from 'redux-persist/lib/storage';\nimport reduxPersistSessionStorage from 'redux-persist/lib/storage/session';\nimport { PersistConfig } from 'redux-persist/lib/types';\nimport getRootReducer from 'reduxStore/reducers';\nimport { defaultNetwork } from 'reduxStore/slices';\nimport account from 'reduxStore/slices/accountInfoSlice';\nimport batchTransactions from 'reduxStore/slices/batchTransactionsSlice';\nimport loginInfo from 'reduxStore/slices/loginInfoSlice';\nimport modals from 'reduxStore/slices/modalsSlice';\nimport networkConfig from 'reduxStore/slices/networkConfigSlice';\nimport { signedMessageInfoReducer } from 'reduxStore/slices/signedMessageInfoSlice';\nimport toasts from 'reduxStore/slices/toastsSlice';\nimport transactionsInfo from 'reduxStore/slices/transactionsInfoSlice';\nimport transactions from 'reduxStore/slices/transactionsSlice';\nimport { ReducersEnum } from 'types/reducers.types';\n\nconst config: {\n  persistReducersStorageType: 'localStorage' | 'sessionStorage';\n} = {\n  persistReducersStorageType: 'localStorage'\n};\n\nconst persistMapping = {\n  [ReducersEnum.account]: 'sdk-dapp-account',\n  [ReducersEnum.loginInfo]: 'sdk-dapp-login-info',\n  [ReducersEnum.modals]: 'sdk-dapp-modals',\n  [ReducersEnum.networkConfig]: 'sdk-dapp-network-config'\n};\n\nconst accountReducerPersistConfig = getSessionStoragePersistConfig(\n  persistMapping[ReducersEnum.account]\n);\nconst loginInfReducerPersistConfig = getSessionStoragePersistConfig(\n  persistMapping[ReducersEnum.loginInfo]\n);\nconst modalsReducerPersistConfig = getSessionStoragePersistConfig(\n  persistMapping[ReducersEnum.modals]\n);\nconst networkConfigReducerPersistConfig = getSessionStoragePersistConfig(\n  persistMapping[ReducersEnum.networkConfig]\n);\n\nconst migrations: any = {\n  2: (state: any) => {\n    return {\n      ...state,\n      networkConfig: defaultNetwork\n    };\n  }\n};\n\nfunction getSessionStoragePersistConfig(key: string, blacklist: string[] = []) {\n  return {\n    key,\n    version: 1,\n    storage: reduxPersistSessionStorage,\n    blacklist\n  };\n}\n\nconst transactionsInfoPersistConfig = getSessionStoragePersistConfig(\n  'sdk-dapp-transactionsInfo'\n);\nconst transactionsReducerPersistConfig = getSessionStoragePersistConfig(\n  'sdk-dapp-transactions',\n  [ReducersEnum.transactionsToSign]\n);\nconst batchTransactionsReducerPersistConfig = getSessionStoragePersistConfig(\n  'sdk-dapp-batchTransactions',\n  [ReducersEnum.batchTransactions]\n);\nconst toastsReducerPersistConfig =\n  getSessionStoragePersistConfig('sdk-dapp-toasts');\nconst signedMessageInfoersistConfig = getSessionStoragePersistConfig(\n  'sdk-dapp-signedMessageInfo'\n);\n\nconst localStoragePersistConfig: PersistConfig<any> = {\n  key: 'sdk-dapp-store',\n  version: 2,\n  storage: reduxPersistLocalStorage,\n  whitelist: Object.keys(persistMapping),\n  migrate: createMigrate(migrations, { debug: false })\n};\n\nconst emptyLocalStoragePersistConfig = {\n  ...localStoragePersistConfig,\n  whitelist: []\n};\n\nexport const sessionStorageReducers = {\n  [ReducersEnum.toasts]: persistReducer(toastsReducerPersistConfig, toasts),\n  [ReducersEnum.transactions]: persistReducer(\n    transactionsReducerPersistConfig,\n    transactions\n  ),\n  [ReducersEnum.transactionsInfo]: persistReducer(\n    transactionsInfoPersistConfig,\n    transactionsInfo\n  ),\n  [ReducersEnum.batchTransactions]: persistReducer(\n    batchTransactionsReducerPersistConfig,\n    batchTransactions\n  ),\n  [ReducersEnum.signedMessageInfo]: persistReducer(\n    signedMessageInfoersistConfig,\n    signedMessageInfoReducer\n  )\n};\n\nconst fullSessionReducers = {\n  ...sessionStorageReducers,\n  [ReducersEnum.account]: persistReducer(accountReducerPersistConfig, account),\n  [ReducersEnum.loginInfo]: persistReducer(\n    loginInfReducerPersistConfig,\n    loginInfo\n  ),\n  [ReducersEnum.modals]: persistReducer(modalsReducerPersistConfig, modals),\n  [ReducersEnum.networkConfig]: persistReducer(\n    networkConfigReducerPersistConfig,\n    networkConfig\n  )\n};\n\nconst isPersistToLocalStorage =\n  config.persistReducersStorageType === 'localStorage';\n\nconst persistedReducer = isPersistToLocalStorage\n  ? persistReducer(\n      localStoragePersistConfig,\n      getRootReducer(sessionStorageReducers)\n    )\n  : persistReducer(\n      emptyLocalStoragePersistConfig,\n      getRootReducer(fullSessionReducers)\n    );\n\nexport default persistedReducer;\n", "import getRootReducer from './reducers';\nexport default getRootReducer();\n", "import {\n  FLUSH,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n  REHYDRATE\n} from 'redux-persist';\n\nconst reduxPersistIgnoredActions = [\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n];\n\nexport default reduxPersistIgnoredActions;\n", "import { persistStore } from 'redux-persist';\n\nexport default function persistReduxStore(store: any) {\n  return persistStore(store);\n}\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n", "var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n", "var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n", "/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n", "var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n", "/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n", "var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n", "var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n", "var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n", "/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n", "var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n", "/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n", "var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n", "var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n", "var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n", "/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n", "var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n", "var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n", "/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n", "/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n", "var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n", "/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n", "/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n", "/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n", "var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n", "var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n", "/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n", "/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n", "/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n", "/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n", "var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n", "var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n", "const css = `.dapp-core-component__main__link-style {\n  color: #1392ff;\n}\n\n.dapp-core-component__main__link-second-style {\n  color: #9dabbd;\n}\n.dapp-core-component__main__link-second-style:hover {\n  color: #1392ff;\n}\n.dapp-core-component__main__link-second-style:hover svg {\n  color: #1392ff;\n}\n\n.dapp-core-component__main__wrapper {\n  min-height: 100vh;\n}\n\n.dapp-core-component__main__opacity-6 {\n  opacity: 0.6;\n}\n\n.dapp-core-component__main__qr-code-svg-container {\n  width: 15rem;\n  height: 15rem;\n}\n\n.dapp-core-component__main__pair-list {\n  max-height: 20rem;\n  overflow-y: auto;\n  margin-bottom: -0.5rem;\n}\n\n.dapp-core-component__main__pair-loader,\n.dapp-core-component__main__pair-image {\n  width: 4rem;\n  overflow: hidden;\n  height: auto;\n  min-width: 2rem;\n  margin: 0;\n  padding: 0;\n}\n\n.dapp-core-component__main__pair-remove {\n  padding: 0 0.5rem;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.dapp-core-component__main__dapp-icon {\n  padding: 5px;\n  border-radius: 50%;\n  background-color: #fafafa;\n  width: calc(65 / 14)rem;\n  height: calc(65 / 14)rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 auto;\n}\n.dapp-core-component__main__dapp-icon.dapp-core-component__main__icon-medium {\n  width: 80px;\n  height: 80px;\n}\n\n.dapp-core-component__main__centering {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.dapp-core-component__main__border-n {\n  border: none;\n}\n\n.dapp-core-component__main__t-shadow {\n  text-shadow: 0px 4px 7px rgba(0, 0, 0, 0.3);\n}\n\n.dapp-core-component__main__btn {\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.04);\n}\n\n.dapp-core-component__main__media {\n  display: flex;\n  align-items: flex-start;\n}\n\n.dapp-core-component__main__media-body {\n  flex: 1;\n}\n\n.dapp-core-component__main__connect-btns .dapp-core-component__main__btn {\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  background-color: #1392ff;\n  padding: 15px 20px 15px 16px;\n  border-radius: 6px;\n  gap: 8px;\n}\n.dapp-core-component__main__connect-btns .dapp-core-component__main__btn:hover, .dapp-core-component__main__connect-btns .dapp-core-component__main__btn:active {\n  background-color: #1392ff;\n  background-image: linear-gradient(rgba(0, 0, 0, 0.1) 0 0);\n}\n.dapp-core-component__main__connect-btns .dapp-core-component__main__info {\n  color: #1392ff;\n  margin-left: 48px;\n}\n\n.dapp-core-component__main__btn {\n  transition: none;\n}\n\n.dapp-core-component__main__trust-badge {\n  width: 20px;\n  height: 20px;\n}\n\n/* Navbar\n  -------------------------------------------------- */\n.dapp-core-component__main__navbar .dapp-core-component__main__dapp-name {\n  display: flex;\n  align-items: center;\n  font-size: calc(24 / 14)rem;\n  font-weight: 400;\n  color: #9ba5b4;\n  margin-left: 1.6428571429rem;\n}\n.dapp-core-component__main__navbar .dapp-core-component__main__dapp-name:before {\n  content: \"\";\n  display: block;\n  width: 1px;\n  height: calc(42 / 14)rem;\n  margin-right: calc(24 / 14)rem;\n}\n\n/* Dashboard\n  -------------------------------------------------- */\n.dapp-core-component__main__action-btn {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  margin: 0 7px;\n}\n.dapp-core-component__main__action-btn button {\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  background-color: #fff;\n}\n.dapp-core-component__main__action-btn button:hover {\n  opacity: 0.9;\n}\n\n.dapp-core-component__main__transactions .dapp-core-component__main__transaction-icon {\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n}\n.dapp-core-component__main__transactions.dapp-core-component__main__table td {\n  white-space: nowrap;\n  vertical-align: middle;\n}\n.dapp-core-component__main__transactions.dapp-core-component__main__table tr:last-of-type td {\n  border-bottom: 1px solid #dee2e6;\n}\n\n/* Loader, Transaction Success/Fail\n  -------------------------------------------------- */\n.dapp-core-component__main__page-state .dapp-core-component__main__lds-ellipsis {\n  display: inline-block;\n  position: relative;\n  width: 64px;\n  height: 64px;\n}\n.dapp-core-component__main__page-state .dapp-core-component__main__lds-ellipsis div {\n  position: absolute;\n  top: 27px;\n  width: 11px;\n  height: 11px;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.1);\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\n}\n.dapp-core-component__main__page-state .dapp-core-component__main__bg-blue .dapp-core-component__main__lds-ellipsis div {\n  background: rgba(255, 255, 255, 0.4);\n}\n.dapp-core-component__main__page-state .dapp-core-component__main__lds-ellipsis div:nth-child(1) {\n  left: 6px;\n  animation: dapp-core-component__main__lds-ellipsis1 0.6s infinite;\n}\n.dapp-core-component__main__page-state .dapp-core-component__main__lds-ellipsis div:nth-child(2) {\n  left: 6px;\n  animation: dapp-core-component__main__lds-ellipsis2 0.6s infinite;\n}\n.dapp-core-component__main__page-state .dapp-core-component__main__lds-ellipsis div:nth-child(3) {\n  left: 26px;\n  animation: dapp-core-component__main__lds-ellipsis2 0.6s infinite;\n}\n.dapp-core-component__main__page-state .dapp-core-component__main__lds-ellipsis div:nth-child(4) {\n  left: 45px;\n  animation: dapp-core-component__main__lds-ellipsis3 0.6s infinite;\n}\n@keyframes dapp-core-component__main__lds-ellipsis1 {\n  0% {\n    transform: scale(0);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@keyframes dapp-core-component__main__lds-ellipsis3 {\n  0% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(0);\n  }\n}\n@keyframes dapp-core-component__main__lds-ellipsis2 {\n  0% {\n    transform: translate(0, 0);\n  }\n  100% {\n    transform: translate(19px, 0);\n  }\n}\n\n.dapp-core-component__main__btn {\n  display: inline-block;\n  font-weight: 400;\n  color: #212529;\n  text-align: center;\n  vertical-align: middle;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  background-color: rgba(0, 0, 0, 0);\n  border: 1px solid rgba(0, 0, 0, 0);\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  border-radius: 0.25rem;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  cursor: pointer;\n}\n\n.dapp-core-component__main__btn .dapp-core-component__main__focus {\n  outline: 0;\n  box-shadow: 0 0 0 0.2rem rgba(27, 70, 194, 0.25);\n}\n\n.dapp-core-component__main__btn .dapp-core-component__main__disabled {\n  opacity: 0.65;\n  cursor: default;\n}\n\n.dapp-core-component__main__btn:hover {\n  color: #212529;\n  text-decoration: none;\n}\n\n.dapp-core-component__main__btn:focus {\n  outline: 0;\n  box-shadow: 0 0 0 0.2rem rgba(27, 70, 194, 0.25);\n}\n\n.dapp-core-component__main__btn:disabled {\n  opacity: 0.65;\n  cursor: default;\n}\n\n.dapp-core-component__main__btn-primary {\n  color: #fff;\n  background-color: #1b46c2;\n  border-color: #007bff;\n}\n\n.dapp-core-component__main__btn-primary .dapp-core-component__main__focus {\n  color: #fff;\n  background-color: #1b46c2;\n  border-color: #0062cc;\n  box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.5);\n}\n\n.dapp-core-component__main__btn-primary .dapp-core-component__main__disabled {\n  color: #fff;\n  background-color: #1b46c2;\n  border-color: #007bff;\n}\n\n.dapp-core-component__main__btn-primary:hover {\n  color: #fff;\n  background-color: #1b46c2;\n  border-color: #0062cc;\n}\n\n.dapp-core-component__main__btn-primary:focus {\n  color: #fff;\n  background-color: #1b46c2;\n  border-color: #0062cc;\n  box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.5);\n}\n\n.dapp-core-component__main__btn-secondary {\n  color: #fff;\n  background-color: #6c757d;\n  border-color: #007bff;\n}\n\n.dapp-core-component__main__btn-secondary .dapp-core-component__main__focus {\n  color: #fff;\n  background-color: #6c757d;\n  border-color: #0062cc;\n  box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.5);\n}\n\n.dapp-core-component__main__btn-secondary .dapp-core-component__main__disabled {\n  color: #fff;\n  background-color: #6c757d;\n  border-color: #007bff;\n}\n\n.dapp-core-component__main__btn-secondary:hover {\n  color: #fff;\n  background-color: #6c757d;\n  border-color: #0062cc;\n}\n\n.dapp-core-component__main__btn-secondary:focus {\n  color: #fff;\n  background-color: #6c757d;\n  border-color: #0062cc;\n  box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.5);\n}\n\n.dapp-core-component__main__btn-warning {\n  color: #212529;\n  background-color: #ffc107;\n  border-color: #ffc107;\n}\n\n.dapp-core-component__main__btn-warning .dapp-core-component__main__focus {\n  color: #212529;\n  background-color: #e0a800;\n  border-color: #d39e00;\n  box-shadow: 0 0 0 0.2rem rgba(222, 170, 12, 0.5);\n}\n\n.dapp-core-component__main__btn-warning .dapp-core-component__main__disabled {\n  color: #212529;\n  background-color: #ffc107;\n  border-color: #ffc107;\n}\n\n.dapp-core-component__main__btn-warning:hover {\n  color: #212529;\n  background-color: #e0a800;\n  border-color: #d39e00;\n  box-shadow: 0 0 0 0.2rem rgba(222, 170, 12, 0.5);\n}\n\n.dapp-core-component__main__btn-warning:focus {\n  color: #212529;\n  background-color: #e0a800;\n  border-color: #d39e00;\n  box-shadow: 0 0 0 0.2rem rgba(222, 170, 12, 0.5);\n}\n\n.dapp-core-component__main__btn-dark {\n  color: #fff;\n  background-color: #343a40;\n  border-color: #343a40;\n}\n\n.dapp-core-component__main__btn-dark .dapp-core-component__main__focus {\n  color: #fff;\n  background-color: #23272b;\n  border-color: #1d2124;\n  box-shadow: 0 0 0 0.2rem rgba(82, 88, 93, 0.5);\n}\n\n.dapp-core-component__main__btn-dark .dapp-core-component__main__disabled {\n  color: #fff;\n  background-color: #343a40;\n  border-color: #343a40;\n}\n\n.dapp-core-component__main__btn-dark:hover {\n  color: #fff;\n  background-color: #23272b;\n  border-color: #1d2124;\n}\n\n.dapp-core-component__main__btn-dark:focus {\n  color: #fff;\n  background-color: #23272b;\n  border-color: #1d2124;\n  box-shadow: 0 0 0 0.2rem rgba(82, 88, 93, 0.5);\n}\n\n.dapp-core-component__main__btn-link {\n  font-weight: 400;\n  color: #007bff;\n  text-decoration: none;\n}\n\n.dapp-core-component__main__btn-link:hover {\n  color: rgb(0, 86.1, 178.5);\n  text-decoration: underline;\n}\n\n.dapp-core-component__main__btn-link:focus, .dapp-core-component__main__btn-link.dapp-core-component__main__focus {\n  text-decoration: underline;\n}\n\n.dapp-core-component__main__btn-link:disabled, .dapp-core-component__main__btn-link.dapp-core-component__main__disabled {\n  color: #6c757d;\n  pointer-events: none;\n}\n\n.dapp-core-component__main__btn-light {\n  color: #212529;\n  background-color: #fafafa;\n  border-color: #fafafa;\n}\n\n.dapp-core-component__main__btn-light .dapp-core-component__main__focus {\n  color: #212529;\n  background-color: #e2e6ea;\n  border-color: #dae0e5;\n  box-shadow: 0 0 0 0.2rem rgba(216, 217, 219, 0.5);\n}\n\n.dapp-core-component__main__btn-light .dapp-core-component__main__disabled {\n  color: #212529;\n  background-color: #f8f9fa;\n  border-color: #f8f9fa;\n}\n\n.dapp-core-component__main__btn-light:hover {\n  color: #212529;\n  background-color: #e2e6ea;\n  border-color: #dae0e5;\n}\n\n.dapp-core-component__main__btn-light:focus {\n  color: #212529;\n  background-color: #e2e6ea;\n  border-color: #dae0e5;\n  box-shadow: 0 0 0 0.2rem rgba(216, 217, 219, 0.5);\n}\n\n.dapp-core-component__main__badge {\n  display: inline-block;\n  padding: 0.25em 0.4em;\n  font-size: 75%;\n  font-weight: 700;\n  line-height: 1;\n  text-align: center;\n  white-space: pre-wrap;\n  word-break: break-all;\n  vertical-align: baseline;\n  border-radius: 0.25rem;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .dapp-core-component__main__badge {\n    transition: none;\n  }\n}\na.dapp-core-component__main__badge:hover, a.dapp-core-component__main__badge:focus {\n  text-decoration: none;\n}\n\n.dapp-core-component__main__badge:empty {\n  display: none;\n}\n\n.dapp-core-component__main__btn .dapp-core-component__main__badge {\n  position: relative;\n  top: -1px;\n}\n\n.dapp-core-component__main__badge-pill {\n  padding-right: 0.6em;\n  padding-left: 0.6em;\n  border-radius: 10rem;\n}\n\n.dapp-core-component__main__badge-primary {\n  color: #fff;\n  background-color: #007bff;\n}\n\na.dapp-core-component__main__badge-primary:hover, a.dapp-core-component__main__badge-primary:focus {\n  color: #fff;\n  background-color: #0062cc;\n}\n\na.dapp-core-component__main__badge-primary:focus, a.dapp-core-component__main__badge-primary.dapp-core-component__main__focus {\n  outline: 0;\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);\n}\n\n.dapp-core-component__main__badge-secondary {\n  color: #fff;\n  background-color: #6c757d;\n}\n\na.dapp-core-component__main__badge-secondary:hover, a.dapp-core-component__main__badge-secondary:focus {\n  color: #fff;\n  background-color: #545b62;\n}\n\na.dapp-core-component__main__badge-secondary:focus, a.dapp-core-component__main__badge-secondary.dapp-core-component__main__focus {\n  outline: 0;\n  box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5);\n}\n\n.dapp-core-component__main__badge-success {\n  color: #fff;\n  background-color: #28a745;\n}\n\na.dapp-core-component__main__badge-success:hover, a.dapp-core-component__main__badge-success:focus {\n  color: #fff;\n  background-color: #1e7e34;\n}\n\na.dapp-core-component__main__badge-success:focus, a.dapp-core-component__main__badge-success.dapp-core-component__main__focus {\n  outline: 0;\n  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5);\n}\n\n.dapp-core-component__main__badge-info {\n  color: #fff;\n  background-color: #17a2b8;\n}\n\na.dapp-core-component__main__badge-info:hover, a.dapp-core-component__main__badge-info:focus {\n  color: #fff;\n  background-color: #117a8b;\n}\n\na.dapp-core-component__main__badge-info:focus, a.dapp-core-component__main__badge-info.dapp-core-component__main__focus {\n  outline: 0;\n  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5);\n}\n\n.dapp-core-component__main__badge-warning {\n  color: #212529;\n  background-color: #ffc107;\n}\n\na.dapp-core-component__main__badge-warning:hover, a.dapp-core-component__main__badge-warning:focus {\n  color: #212529;\n  background-color: #d39e00;\n}\n\na.dapp-core-component__main__badge-warning:focus, a.dapp-core-component__main__badge-warning.dapp-core-component__main__focus {\n  outline: 0;\n  box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5);\n}\n\n.dapp-core-component__main__badge-danger {\n  color: #fff;\n  background-color: #dc3545;\n}\n\na.dapp-core-component__main__badge-danger:hover, a.dapp-core-component__main__badge-danger:focus {\n  color: #fff;\n  background-color: #bd2130;\n}\n\na.dapp-core-component__main__badge-danger:focus, a.dapp-core-component__main__badge-danger.dapp-core-component__main__focus {\n  outline: 0;\n  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5);\n}\n\n.dapp-core-component__main__badge-light {\n  color: #212529;\n  background-color: #f8f9fa;\n}\n\na.dapp-core-component__main__badge-light:hover, a.dapp-core-component__main__badge-light:focus {\n  color: #212529;\n  background-color: #dae0e5;\n}\n\na.dapp-core-component__main__badge-light:focus, a.dapp-core-component__main__badge-light.dapp-core-component__main__focus {\n  outline: 0;\n  box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5);\n}\n\n.dapp-core-component__main__badge-dark {\n  color: #fff;\n  background-color: #343a40;\n}\n\na.dapp-core-component__main__badge-dark:hover, a.dapp-core-component__main__badge-dark:focus {\n  color: #fff;\n  background-color: #1d2124;\n}\n\na.dapp-core-component__main__badge-dark:focus, a.dapp-core-component__main__badge-dark.dapp-core-component__main__focus {\n  outline: 0;\n  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);\n}\n\n.dapp-core-component__main__card {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  min-width: 0;\n  word-wrap: break-word;\n  background-color: #fff;\n  background-clip: border-box;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  border-radius: 5px;\n}\n\n.dapp-core-component__main__card > hr {\n  margin-right: 0;\n  margin-left: 0;\n}\n\n.dapp-core-component__main__card > .dapp-core-component__main__list-group {\n  border-top: inherit;\n  border-bottom: inherit;\n}\n\n.dapp-core-component__main__card > .dapp-core-component__main__list-group:first-child {\n  border-top-width: 0;\n}\n\n.dapp-core-component__main__card > .dapp-core-component__main__list-group:last-child {\n  border-bottom-width: 0;\n}\n\n.dapp-core-component__main__card > .dapp-core-component__main__card-header + .dapp-core-component__main__list-group,\n.dapp-core-component__main__card > .dapp-core-component__main__list-group + .dapp-core-component__main__card-footer {\n  border-top: 0;\n}\n\n.dapp-core-component__main__card .dapp-core-component__main__card-header {\n  border: 0;\n  padding: 0;\n}\n\n.dapp-core-component__main__card .dapp-core-component__main__card-header:first-child {\n  border-radius: calc(0.25rem - 1px) calc(0.25rem - 1px) 0 0;\n}\n\n.dapp-core-component__main__card .dapp-core-component__main__card-header .dapp-core-component__main__card-header-item {\n  border-bottom: 1px solid #dee2e6;\n  padding: 1.1rem 1rem;\n}\n\n.dapp-core-component__main__card .dapp-core-component__main__card-header .dapp-core-component__main__card-header-item h6,\n.dapp-core-component__main__card .dapp-core-component__main__card-header .dapp-core-component__main__card-header-item .dapp-core-component__main__h6 {\n  line-height: 2.5rem;\n  letter-spacing: unset;\n  margin: 0;\n}\n\n.dapp-core-component__main__card .dapp-core-component__main__card-header .dapp-core-component__main__card-header-item.dapp-core-component__main__compact {\n  padding-top: 0.75rem;\n  padding-bottom: 0.75rem;\n  background-color: #fafafa;\n}\n\n.dapp-core-component__main__card-body {\n  flex: 1 1 auto;\n  height: 100%;\n  min-height: 1px;\n  padding: 1.25rem;\n}\n\n.dapp-core-component__main__card-title {\n  margin-bottom: 0.75rem;\n}\n\n.dapp-core-component__main__card-subtitle {\n  margin-top: -0.375rem;\n  margin-bottom: 0;\n}\n\n.dapp-core-component__main__card-text:last-child {\n  margin-bottom: 0;\n}\n\n.dapp-core-component__main__card-link:hover {\n  text-decoration: none;\n}\n\n.dapp-core-component__main__card-link + .dapp-core-component__main__card-link {\n  margin-left: 1.25rem;\n}\n\n.dapp-core-component__main__card-header {\n  padding: 0.75rem 1.25rem;\n  margin-bottom: 0;\n  background-color: rgba(0, 0, 0, 0.03);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n}\n\n.dapp-core-component__main__card-footer {\n  padding: 0.75rem 1.25rem;\n  background-color: rgba(0, 0, 0, 0.03);\n  border-top: 1px solid rgba(0, 0, 0, 0.125);\n}\n\n.dapp-core-component__main__text {\n  color: #9dabbd;\n}\n\n.dapp-core-component__main__text-white {\n  color: #fff;\n}\n\n.dapp-core-component__main__text-monospace {\n  font-family: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\n}\n\n.dapp-core-component__main__table .dapp-core-component__main__trim-size-xl .dapp-core-component__main__trim {\n  max-width: 13rem;\n}\n\n.dapp-core-component__main__table .dapp-core-component__main__trim {\n  max-width: 10rem;\n}\n\n.dapp-core-component__main__table .dapp-core-component__main__trim-only-sm .dapp-core-component__main__trim {\n  max-width: none;\n}\n\n.dapp-core-component__main__text-justify {\n  text-align: justify;\n}\n\n.dapp-core-component__main__text-wrap {\n  white-space: normal;\n}\n\n.dapp-core-component__main__text-nowrap {\n  white-space: nowrap;\n}\n\n.dapp-core-component__main__text-truncate {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.dapp-core-component__main__text-left {\n  text-align: left;\n}\n\n.dapp-core-component__main__text-right {\n  text-align: right;\n}\n\n.dapp-core-component__main__text-center {\n  text-align: center;\n}\n\n.dapp-core-component__main__text-primary {\n  color: #1b46c2;\n}\n\n.dapp-core-component__main__text-secondary {\n  color: #6c757d;\n}\n\n.dapp-core-component__main__text-primary-highlight {\n  color: #1b46c2;\n}\n\n.dapp-core-component__main__text-muted {\n  color: #6c757d;\n}\n\n.dapp-core-component__main__text-success {\n  color: #28a745;\n}\n\n.dapp-core-component__main__text-justify {\n  text-align: justify;\n}\n\n.dapp-core-component__main__text-wrap {\n  white-space: normal;\n}\n\n.dapp-core-component__main__text-nowrap {\n  white-space: nowrap;\n}\n\n.dapp-core-component__main__text-truncate {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.dapp-core-component__main__text-body {\n  color: #212529;\n}\n\n.dapp-core-component__main__text-muted {\n  color: #6c757d;\n}\n\n.dapp-core-component__main__text-black-50 {\n  color: rgba(0, 0, 0, 0.5);\n}\n\n.dapp-core-component__main__text-white-50 {\n  color: rgba(255, 255, 255, 0.5);\n}\n\n@media (min-width: 992px) {\n  .dapp-core-component__main__text-lg-right {\n    text-align: right;\n  }\n}\n.dapp-core-component__main__text-hide {\n  font: 0/0 a;\n  color: rgba(0, 0, 0, 0);\n  text-shadow: none;\n  background-color: rgba(0, 0, 0, 0);\n  border: 0;\n}\n\n.dapp-core-component__main__text-decoration-none {\n  text-decoration: none;\n}\n\n.dapp-core-component__main__text-break {\n  word-break: break-word;\n  word-wrap: break-word;\n}\n\n.dapp-core-component__main__text-reset {\n  color: inherit;\n}\n\n.dapp-core-component__main__text-lowercase {\n  text-transform: lowercase;\n}\n\n.dapp-core-component__main__text-uppercase {\n  text-transform: uppercase;\n}\n\n.dapp-core-component__main__text-capitalize {\n  text-transform: capitalize;\n}\n\n.dapp-core-component__main__text-danger {\n  color: #d9534f;\n}\n\n.dapp-core-component__main__text-warning {\n  color: #f0ad4e;\n}\n\n.dapp-core-component__main__trim-fs-sm {\n  color: inherit;\n}\n\n.dapp-core-component__main__text-break {\n  word-break: break-word;\n  word-wrap: break-word;\n}\n\n.dapp-core-component__main__mx-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.dapp-core-component__main__m-0 {\n  margin: 0;\n}\n\n.dapp-core-component__main__mt-0 {\n  margin-top: 0;\n}\n\n.dapp-core-component__main__my-0 {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.dapp-core-component__main__mr-0 {\n  margin-right: 0;\n}\n\n.dapp-core-component__main__mx-0 {\n  margin-right: 0;\n  margin-left: 0;\n}\n\n.dapp-core-component__main__mb-0 {\n  margin-bottom: 0;\n}\n\n.dapp-core-component__main__my-0 {\n  margin-bottom: 0;\n  margin-top: 0;\n}\n\n.dapp-core-component__main__ml-0 {\n  margin-left: 0;\n}\n\n.dapp-core-component__main__mx-0 {\n  margin-left: 0;\n  margin-right: 0;\n}\n\n.dapp-core-component__main__m-1 {\n  margin: 0.25rem;\n}\n\n.dapp-core-component__main__mt-1 {\n  margin-top: 0.25rem;\n}\n\n.dapp-core-component__main__my-1 {\n  margin-top: 0.25rem;\n  margin-bottom: 0.25rem;\n}\n\n.dapp-core-component__main__mr-1 {\n  margin-right: 0.25rem;\n}\n\n.dapp-core-component__main__mx-1 {\n  margin-left: 0.25rem;\n  margin-right: 0.25rem;\n}\n\n.dapp-core-component__main__mb-1 {\n  margin-bottom: 0.25rem;\n}\n\n.dapp-core-component__main__my-1 {\n  margin-bottom: 0.25rem;\n  margin-top: 0.25rem;\n}\n\n.dapp-core-component__main__ml-1 {\n  margin-left: 0.25rem;\n}\n\n.dapp-core-component__main__mx-1 {\n  margin-right: 0.25rem;\n  margin-left: 0.25rem;\n}\n\n.dapp-core-component__main__m-2 {\n  margin: 0.5rem;\n}\n\n.dapp-core-component__main__mt-2 {\n  margin-top: 0.5rem;\n}\n\n.dapp-core-component__main__my-2 {\n  margin-bottom: 0.5rem;\n  margin-top: 0.5rem;\n}\n\n.dapp-core-component__main__mr-2 {\n  margin-right: 0.5rem;\n}\n\n.dapp-core-component__main__mx-2 {\n  margin-right: 0.5rem;\n  margin-left: 0.5rem;\n}\n\n.dapp-core-component__main__mb-2 {\n  margin-bottom: 0.5rem;\n}\n\n.dapp-core-component__main__my-2 {\n  margin-top: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.dapp-core-component__main__ml-2 {\n  margin-left: 0.5rem;\n}\n\n.dapp-core-component__main__mx-2 {\n  margin-right: 0.5rem;\n  margin-left: 0.5rem;\n}\n\n.dapp-core-component__main__m-3 {\n  margin: 1rem;\n}\n\n.dapp-core-component__main__mt-3,\n.dapp-core-component__main__my-3 {\n  margin-top: 1rem;\n}\n\n.dapp-core-component__main__mr-3 {\n  margin-right: 1rem;\n}\n\n.dapp-core-component__main__mx-3 {\n  margin-left: 1rem;\n  margin-right: 1rem;\n}\n\n.dapp-core-component__main__mb-3 {\n  margin-bottom: 1rem;\n}\n\n.dapp-core-component__main__my-3 {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n\n.dapp-core-component__main__ml-3 {\n  margin-left: 1rem;\n}\n\n.dapp-core-component__main__mx-3 {\n  margin-left: 1rem;\n  margin-right: 1rem;\n}\n\n.dapp-core-component__main__m-4 {\n  margin: 1.5rem;\n}\n\n.dapp-core-component__main__mt-4 {\n  margin-top: 1.5rem;\n}\n\n.dapp-core-component__main__my-4 {\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\n.dapp-core-component__main__mr-4 {\n  margin-right: 1.5rem;\n}\n\n.dapp-core-component__main__mx-4 {\n  margin-right: 1.5rem;\n  margin-left: 1.5rem;\n}\n\n.dapp-core-component__main__mb-4 {\n  margin-bottom: 1.5rem;\n}\n\n.dapp-core-component__main__my-4 {\n  margin-bottom: 1.5rem;\n  margin-top: 1.5rem;\n}\n\n.dapp-core-component__main__ml-4 {\n  margin-left: 1.5rem;\n}\n\n.dapp-core-component__main__mx-4 {\n  margin-left: 1.5rem;\n  margin-right: 1.5rem;\n}\n\n.dapp-core-component__main__m-5 {\n  margin: 3rem;\n}\n\n.dapp-core-component__main__mt-5 {\n  margin-top: 3rem;\n}\n\n.dapp-core-component__main__my-5 {\n  margin-top: 3rem;\n  margin-bottom: 3rem;\n}\n\n.dapp-core-component__main__mr-5 {\n  margin-right: 3rem;\n}\n\n.dapp-core-component__main__mx-5 {\n  margin-right: 3rem;\n  margin-left: 3rem;\n}\n\n.dapp-core-component__main__mb-5 {\n  margin-bottom: 3rem;\n}\n\n.dapp-core-component__main__my-5 {\n  margin-top: 3rem;\n  margin-bottom: 3rem;\n}\n\n.dapp-core-component__main__ml-5 {\n  margin-left: 3rem;\n}\n\n.dapp-core-component__main__mx-5 {\n  margin-left: 3rem;\n  margin-right: 3rem;\n}\n\n.dapp-core-component__main__p-0 {\n  padding: 0;\n}\n\n.dapp-core-component__main__pt-0 {\n  padding-top: 0;\n}\n\n.dapp-core-component__main__py-0 {\n  padding-top: 0;\n  padding-bottom: 0;\n}\n\n.dapp-core-component__main__pr-0 {\n  padding-right: 0;\n}\n\n.dapp-core-component__main__px-0 {\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.dapp-core-component__main__pb-0 {\n  padding-bottom: 0;\n}\n\n.dapp-core-component__main__py-0 {\n  padding-bottom: 0;\n  padding-top: 0;\n}\n\n.dapp-core-component__main__pl-0 {\n  padding-left: 0;\n}\n\n.dapp-core-component__main__px-0 {\n  padding-left: 0;\n  padding-right: 0;\n}\n\n.dapp-core-component__main__p-1 {\n  padding: 0.25rem;\n}\n\n.dapp-core-component__main__pt-1 {\n  padding-top: 0.25rem;\n}\n\n.dapp-core-component__main__py-1 {\n  padding-top: 0.25rem;\n  padding-bottom: 0.25rem;\n}\n\n.dapp-core-component__main__pr-1 {\n  padding-right: 0.25rem;\n}\n\n.dapp-core-component__main__px-1 {\n  padding-right: 0.25rem;\n  padding-left: 0.25rem;\n}\n\n.dapp-core-component__main__pb-1 {\n  padding-bottom: 0.25rem;\n}\n\n.dapp-core-component__main__py-1 {\n  padding-top: 0.25rem;\n  padding-bottom: 0.25rem;\n}\n\n.dapp-core-component__main__pl-1 {\n  padding-left: 0.25rem;\n}\n\n.dapp-core-component__main__px-1 {\n  padding-left: 0.25rem;\n  padding-right: 0.25rem;\n}\n\n.dapp-core-component__main__p-2 {\n  padding: 0.5rem;\n}\n\n.dapp-core-component__main__pt-2 {\n  padding-top: 0.5rem;\n}\n\n.dapp-core-component__main__py-2 {\n  padding-bottom: 0.5rem;\n  padding-top: 0.5rem;\n}\n\n.dapp-core-component__main__pr-2 {\n  padding-right: 0.5rem;\n}\n\n.dapp-core-component__main__px-2 {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n\n.dapp-core-component__main__pb-2 {\n  padding-bottom: 0.5rem;\n}\n\n.dapp-core-component__main__py-2 {\n  padding-top: 0.5rem;\n  padding-bottom: 0.5rem;\n}\n\n.dapp-core-component__main__pl-2 {\n  padding-left: 0.5rem;\n}\n\n.dapp-core-component__main__px-2 {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n\n.dapp-core-component__main__p-3 {\n  padding: 1rem;\n}\n\n.dapp-core-component__main__pt-3 {\n  padding-top: 1rem;\n}\n\n.dapp-core-component__main__py-3 {\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n}\n\n.dapp-core-component__main__pr-3 {\n  padding-right: 1rem;\n}\n\n.dapp-core-component__main__px-3 {\n  padding-right: 1rem;\n  padding-left: 1rem;\n}\n\n.dapp-core-component__main__pb-3 {\n  padding-bottom: 1rem;\n}\n\n.dapp-core-component__main__py-3 {\n  padding-bottom: 1rem;\n  padding-top: 1rem;\n}\n\n.dapp-core-component__main__pl-3 {\n  padding-left: 1rem;\n}\n\n.dapp-core-component__main__px-3 {\n  padding-right: 1rem;\n  padding-left: 1rem;\n}\n\n.dapp-core-component__main__p-4 {\n  padding: 1.5rem;\n}\n\n.dapp-core-component__main__pt-4 {\n  padding-top: 1.5rem;\n}\n\n.dapp-core-component__main__py-4 {\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n}\n\n.dapp-core-component__main__pr-4 {\n  padding-right: 1.5rem;\n}\n\n.dapp-core-component__main__px-4 {\n  padding-left: 1.5rem;\n  padding-right: 1.5rem;\n}\n\n.dapp-core-component__main__pb-4 {\n  padding-bottom: 1.5rem;\n}\n\n.dapp-core-component__main__py-4 {\n  padding-top: 1.5rem;\n  padding-bottom: 1.5rem;\n}\n\n.dapp-core-component__main__pl-4 {\n  padding-left: 1.5rem;\n}\n\n.dapp-core-component__main__px-4 {\n  padding-right: 1.5rem;\n  padding-left: 1.5rem;\n}\n\n.dapp-core-component__main__p-5 {\n  padding: 3rem;\n}\n\n.dapp-core-component__main__pt-5 {\n  padding-top: 3rem;\n}\n\n.dapp-core-component__main__py-5 {\n  padding-bottom: 3rem;\n  padding-top: 3rem;\n}\n\n.dapp-core-component__main__pr-5 {\n  padding-right: 3rem;\n}\n\n.dapp-core-component__main__px-5 {\n  padding-right: 3rem;\n  padding-left: 3rem;\n}\n\n.dapp-core-component__main__pb-5 {\n  padding-right: 3rem;\n}\n\n.dapp-core-component__main__py-5 {\n  padding-top: 3rem;\n  padding-bottom: 3rem;\n}\n\n.dapp-core-component__main__pl-5 {\n  padding-left: 3rem;\n}\n\n.dapp-core-component__main__px-5 {\n  padding-right: 3rem;\n  padding-left: 3rem;\n}\n\n.dapp-core-component__main__m-n1 {\n  margin: -0.25rem;\n}\n\n.dapp-core-component__main__mt-n1 {\n  margin-top: -0.25rem;\n}\n\n.dapp-core-component__main__my-n1 {\n  margin-top: -0.25rem;\n  margin-bottom: -0.25rem;\n}\n\n.dapp-core-component__main__mr-n1 {\n  margin-right: -0.25rem;\n}\n\n.dapp-core-component__main__mx-n1 {\n  margin-left: -0.25rem;\n  margin-right: -0.25rem;\n}\n\n.dapp-core-component__main__mb-n1 {\n  margin-bottom: -0.25rem;\n}\n\n.dapp-core-component__main__my-n1 {\n  margin-bottom: -0.25rem;\n  margin-top: -0.25rem;\n}\n\n.dapp-core-component__main__ml-n1 {\n  margin-left: -0.25rem;\n}\n\n.dapp-core-component__main__mx-n1 {\n  margin-left: -0.25rem;\n  margin-right: -0.25rem;\n}\n\n.dapp-core-component__main__m-n2 {\n  margin: -0.5rem;\n}\n\n.dapp-core-component__main__mt-n2 {\n  margin-top: -0.5rem;\n}\n\n.dapp-core-component__main__my-n2 {\n  margin-top: -0.5rem;\n  margin-left: -0.5rem;\n}\n\n.dapp-core-component__main__mr-n2 {\n  margin-right: -0.5rem;\n}\n\n.dapp-core-component__main__mx-n2 {\n  margin-right: -0.5rem;\n  margin-left: -0.5rem;\n}\n\n.dapp-core-component__main__mb-n2 {\n  margin-bottom: -0.5rem;\n}\n\n.dapp-core-component__main__my-n2 {\n  margin-bottom: -0.5rem;\n  margin-top: -0.5rem;\n}\n\n.dapp-core-component__main__ml-n2 {\n  margin-left: -0.5rem;\n}\n\n.dapp-core-component__main__mx-n2 {\n  margin-left: -0.5rem;\n  margin-right: -0.5rem;\n}\n\n.dapp-core-component__main__m-n3 {\n  margin: -1rem;\n}\n\n.dapp-core-component__main__mt-n3 {\n  margin-top: -1rem;\n}\n\n.dapp-core-component__main__my-n3 {\n  margin-top: -1rem;\n  margin-bottom: -1rem;\n}\n\n.dapp-core-component__main__mr-n3 {\n  margin-right: -1rem;\n}\n\n.dapp-core-component__main__mx-n3 {\n  margin-right: -1rem;\n  margin-left: -1rem;\n}\n\n.dapp-core-component__main__mb-n3 {\n  margin-bottom: -1rem;\n}\n\n.dapp-core-component__main__my-n3 {\n  margin-bottom: -1rem;\n  margin-top: -1rem;\n}\n\n.dapp-core-component__main__ml-n3 {\n  margin-left: -1rem;\n}\n\n.dapp-core-component__main__mx-n3 {\n  margin-left: -1rem;\n  margin-right: -1rem;\n}\n\n.dapp-core-component__main__m-n4 {\n  margin: -1.5rem;\n}\n\n.dapp-core-component__main__mt-n4 {\n  margin-top: -1.5rem;\n}\n\n.dapp-core-component__main__my-n4 {\n  margin-top: -1.5rem;\n  margin-bottom: -1.5rem;\n}\n\n.dapp-core-component__main__mr-n4 {\n  margin-right: -1.5rem;\n}\n\n.dapp-core-component__main__mx-n4 {\n  margin-left: -1.5rem;\n  margin-right: -1.5rem;\n}\n\n.dapp-core-component__main__mb-n4 {\n  margin-bottom: -1.5rem;\n}\n\n.dapp-core-component__main__my-n4 {\n  margin-bottom: -1.5rem;\n  margin-top: -1.5rem;\n}\n\n.dapp-core-component__main__ml-n4 {\n  margin-left: -1.5rem;\n}\n\n.dapp-core-component__main__mx-n4 {\n  margin-left: -1.5rem;\n  margin-right: -1.5rem;\n}\n\n.dapp-core-component__main__m-n5 {\n  margin: -3rem;\n}\n\n.dapp-core-component__main__mt-n5 {\n  margin-top: -3rem;\n}\n\n.dapp-core-component__main__my-n5 {\n  margin-bottom: -3rem;\n  margin-top: -3rem;\n}\n\n.dapp-core-component__main__mr-n5 {\n  margin-right: -3rem;\n}\n\n.dapp-core-component__main__mx-n5 {\n  margin-left: -3rem;\n  margin-right: -3rem;\n}\n\n.dapp-core-component__main__mb-n5 {\n  margin-bottom: -3rem;\n}\n\n.dapp-core-component__main__my-n5 {\n  margin-top: -3rem;\n  margin-bottom: -3rem;\n}\n\n.dapp-core-component__main__ml-n5 {\n  margin-left: -3rem;\n}\n\n.dapp-core-component__main__mx-n5 {\n  margin-right: -3rem;\n  margin-left: -3rem;\n}\n\n.dapp-core-component__main__m-auto {\n  margin: auto;\n}\n\n.dapp-core-component__main__mt-auto {\n  margin-top: auto;\n}\n\n.dapp-core-component__main__my-auto {\n  margin-bottom: auto;\n  margin-top: auto;\n}\n\n.dapp-core-component__main__mr-auto {\n  margin-right: auto;\n}\n\n.dapp-core-component__main__mx-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.dapp-core-component__main__mb-auto {\n  margin-bottom: auto;\n}\n\n.dapp-core-component__main__my-auto {\n  margin-top: auto;\n  margin-bottom: auto;\n}\n\n.dapp-core-component__main__ml-auto {\n  margin-left: auto;\n}\n\n.dapp-core-component__main__mx-auto {\n  margin-left: auto;\n  margin-right: auto;\n}\n\n@media (min-width: 992px) {\n  .dapp-core-component__main__mr-lg-1 {\n    margin-right: 0.25rem;\n  }\n}\n@media (min-width: 992px) {\n  .dapp-core-component__main__mr-lg-4 {\n    margin-right: 1.5rem;\n  }\n}\n@media (min-width: 992px) {\n  .dapp-core-component__main__mx-lg-4 {\n    margin-left: 1.5rem;\n    margin-right: 1.5rem;\n  }\n}\n@media (min-width: 1200px) {\n  .dapp-core-component__main__mb-xl-2 {\n    margin-bottom: 0.5rem;\n  }\n}\n@media (min-width: 576px) {\n  .dapp-core-component__main__pr-sm-2 {\n    padding-right: 0.5rem;\n  }\n}\n@media (min-width: 576px) {\n  .dapp-core-component__main__px-sm-2 {\n    padding-left: 0.5rem;\n    padding-right: 0.5rem;\n  }\n}\n@media (min-width: 1200px) {\n  .dapp-core-component__main__pr-xl-0,\n  .dapp-core-component__main__px-xl-0 {\n    padding-right: 0;\n  }\n}\n.dapp-core-component__main__col {\n  -ms-flex-preferred-size: 0;\n  flex-basis: 0;\n  -ms-flex-positive: 1;\n  flex-grow: 1;\n  max-width: 100%;\n}\n\n.dapp-core-component__main__row {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -15px;\n  margin-left: -15px;\n}\n\n.dapp-core-component__main__col {\n  flex-basis: 0;\n  flex-grow: 1;\n  max-width: 100%;\n}\n\n.dapp-core-component__main__col-xl,\n.dapp-core-component__main__col-xl-auto,\n.dapp-core-component__main__col-xl-12,\n.dapp-core-component__main__col-xl-11,\n.dapp-core-component__main__col-xl-10,\n.dapp-core-component__main__col-xl-9,\n.dapp-core-component__main__col-xl-8,\n.dapp-core-component__main__col-xl-7,\n.dapp-core-component__main__col-xl-6,\n.dapp-core-component__main__col-xl-5,\n.dapp-core-component__main__col-xl-4,\n.dapp-core-component__main__col-xl-3,\n.dapp-core-component__main__col-xl-2,\n.dapp-core-component__main__col-xl-1,\n.dapp-core-component__main__col-lg,\n.dapp-core-component__main__col-lg-auto,\n.dapp-core-component__main__col-lg-12,\n.dapp-core-component__main__col-lg-11,\n.dapp-core-component__main__col-lg-10,\n.dapp-core-component__main__col-lg-9,\n.dapp-core-component__main__col-lg-8,\n.dapp-core-component__main__col-lg-7,\n.dapp-core-component__main__col-lg-6,\n.dapp-core-component__main__col-lg-5,\n.dapp-core-component__main__col-lg-4,\n.dapp-core-component__main__col-lg-3,\n.dapp-core-component__main__col-lg-2,\n.dapp-core-component__main__col-lg-1,\n.dapp-core-component__main__col-md,\n.dapp-core-component__main__col-md-auto,\n.dapp-core-component__main__col-md-12,\n.dapp-core-component__main__col-md-11,\n.dapp-core-component__main__col-md-10,\n.dapp-core-component__main__col-md-9,\n.dapp-core-component__main__col-md-8,\n.dapp-core-component__main__col-md-7,\n.dapp-core-component__main__col-md-6,\n.dapp-core-component__main__col-md-5,\n.dapp-core-component__main__col-md-4,\n.dapp-core-component__main__col-md-3,\n.dapp-core-component__main__col-md-2,\n.dapp-core-component__main__col-md-1,\n.dapp-core-component__main__col-sm,\n.dapp-core-component__main__col-sm-auto,\n.dapp-core-component__main__col-sm-12,\n.dapp-core-component__main__col-sm-11,\n.dapp-core-component__main__col-sm-10,\n.dapp-core-component__main__col-sm-9,\n.dapp-core-component__main__col-sm-8,\n.dapp-core-component__main__col-sm-7,\n.dapp-core-component__main__col-sm-6,\n.dapp-core-component__main__col-sm-5,\n.dapp-core-component__main__col-sm-4,\n.dapp-core-component__main__col-sm-3,\n.dapp-core-component__main__col-sm-2,\n.dapp-core-component__main__col-sm-1,\n.dapp-core-component__main__col,\n.dapp-core-component__main__col-auto,\n.dapp-core-component__main__col-12,\n.dapp-core-component__main__col-11,\n.dapp-core-component__main__col-10,\n.dapp-core-component__main__col-9,\n.dapp-core-component__main__col-8,\n.dapp-core-component__main__col-7,\n.dapp-core-component__main__col-6,\n.dapp-core-component__main__col-5,\n.dapp-core-component__main__col-4,\n.dapp-core-component__main__col-3,\n.dapp-core-component__main__col-2,\n.dapp-core-component__main__col-1 {\n  position: relative;\n  width: 100%;\n  padding-right: 15px;\n  padding-left: 15px;\n}\n\n.dapp-core-component__main__col-1 {\n  flex: 0 0 8.3333333333%;\n  max-width: 8.3333333333%;\n}\n\n@media (min-width: 576px) {\n  .dapp-core-component__main__col-sm-1 {\n    flex: 0 0 8.3333333333%;\n    max-width: 8.3333333333%;\n  }\n  .dapp-core-component__main__col-sm-2 {\n    flex: 0 0 16.6666666667%;\n    max-width: 16.6666666667%;\n  }\n  .dapp-core-component__main__col-sm-3 {\n    flex: 0 0 25%;\n    max-width: 25%;\n  }\n  .dapp-core-component__main__col-sm-4 {\n    flex: 0 0 33.3333333333%;\n    max-width: 33.3333333333%;\n  }\n  .dapp-core-component__main__col-sm-5 {\n    flex: 0 0 41.6666666667%;\n    max-width: 41.6666666667%;\n  }\n  .dapp-core-component__main__col-sm-6 {\n    flex: 0 0 50%;\n    max-width: 50%;\n  }\n  .dapp-core-component__main__col-sm-7 {\n    flex: 0 0 58.3333333333%;\n    max-width: 58.3333333333%;\n  }\n  .dapp-core-component__main__col-sm-8 {\n    flex: 0 0 66.6666666667%;\n    max-width: 66.6666666667%;\n  }\n  .dapp-core-component__main__col-sm-9 {\n    flex: 0 0 75%;\n    max-width: 75%;\n  }\n  .dapp-core-component__main__col-sm-10 {\n    flex: 0 0 83.3333333333%;\n    max-width: 83.3333333333%;\n  }\n  .dapp-core-component__main__col-sm-11 {\n    flex: 0 0 91.6666666667%;\n    max-width: 91.6666666667%;\n  }\n  .dapp-core-component__main__col-sm-12 {\n    flex: 0 0 100%;\n    max-width: 100%;\n  }\n}\n@media (min-width: 768px) {\n  .dapp-core-component__main__col-md-1 {\n    flex: 0 0 8.3333333333%;\n    max-width: 8.3333333333%;\n  }\n  .dapp-core-component__main__col-md-2 {\n    flex: 0 0 16.6666666667%;\n    max-width: 16.6666666667%;\n  }\n  .dapp-core-component__main__col-md-3 {\n    flex: 0 0 25%;\n    max-width: 25%;\n  }\n  .dapp-core-component__main__col-md-4 {\n    flex: 0 0 33.3333333333%;\n    max-width: 33.3333333333%;\n  }\n  .dapp-core-component__main__col-md-5 {\n    flex: 0 0 41.6666666667%;\n    max-width: 41.6666666667%;\n  }\n  .dapp-core-component__main__col-md-6 {\n    flex: 0 0 50%;\n    max-width: 50%;\n  }\n  .dapp-core-component__main__col-md-7 {\n    flex: 0 0 58.3333333333%;\n    max-width: 58.3333333333%;\n  }\n  .dapp-core-component__main__col-md-8 {\n    flex: 0 0 66.6666666667%;\n    max-width: 66.6666666667%;\n  }\n  .dapp-core-component__main__col-md-9 {\n    flex: 0 0 75%;\n    max-width: 75%;\n  }\n  .dapp-core-component__main__col-md-10 {\n    flex: 0 0 83.3333333333%;\n    max-width: 83.3333333333%;\n  }\n  .dapp-core-component__main__col-md-11 {\n    flex: 0 0 91.6666666667%;\n    max-width: 91.6666666667%;\n  }\n  .dapp-core-component__main__col-md-12 {\n    flex: 0 0 100%;\n    max-width: 100%;\n  }\n}\n@media (min-width: 992px) {\n  .dapp-core-component__main__col-lg-1 {\n    flex: 0 0 8.3333333333%;\n    max-width: 8.3333333333%;\n  }\n  .dapp-core-component__main__col-lg-2 {\n    flex: 0 0 16.6666666667%;\n    max-width: 16.6666666667%;\n  }\n  .dapp-core-component__main__col-lg-3 {\n    flex: 0 0 25%;\n    max-width: 25%;\n  }\n  .dapp-core-component__main__col-lg-4 {\n    flex: 0 0 33.3333333333%;\n    max-width: 33.3333333333%;\n  }\n  .dapp-core-component__main__col-lg-5 {\n    flex: 0 0 41.6666666667%;\n    max-width: 41.6666666667%;\n  }\n  .dapp-core-component__main__col-lg-6 {\n    flex: 0 0 50%;\n    max-width: 50%;\n  }\n  .dapp-core-component__main__col-lg-7 {\n    flex: 0 0 58.3333333333%;\n    max-width: 58.3333333333%;\n  }\n  .dapp-core-component__main__col-lg-8 {\n    flex: 0 0 66.6666666667%;\n    max-width: 66.6666666667%;\n  }\n  .dapp-core-component__main__col-lg-9 {\n    flex: 0 0 75%;\n    max-width: 75%;\n  }\n  .dapp-core-component__main__col-lg-10 {\n    flex: 0 0 83.3333333333%;\n    max-width: 83.3333333333%;\n  }\n  .dapp-core-component__main__col-lg-11 {\n    flex: 0 0 91.6666666667%;\n    max-width: 91.6666666667%;\n  }\n  .dapp-core-component__main__col-lg-12 {\n    flex: 0 0 100%;\n    max-width: 100%;\n  }\n}\n@media (min-width: 1200px) {\n  .dapp-core-component__main__col-xl-1 {\n    flex: 0 0 8.3333333333%;\n    max-width: 8.3333333333%;\n  }\n  .dapp-core-component__main__col-xl-2 {\n    flex: 0 0 16.6666666667%;\n    max-width: 16.6666666667%;\n  }\n  .dapp-core-component__main__col-xl-3 {\n    flex: 0 0 25%;\n    max-width: 25%;\n  }\n  .dapp-core-component__main__col-xl-4 {\n    flex: 0 0 33.3333333333%;\n    max-width: 33.3333333333%;\n  }\n  .dapp-core-component__main__col-xl-5 {\n    flex: 0 0 41.6666666667%;\n    max-width: 41.6666666667%;\n  }\n  .dapp-core-component__main__col-xl-6 {\n    flex: 0 0 50%;\n    max-width: 50%;\n  }\n  .dapp-core-component__main__col-xl-7 {\n    flex: 0 0 58.3333333333%;\n    max-width: 58.3333333333%;\n  }\n  .dapp-core-component__main__col-xl-8 {\n    flex: 0 0 66.6666666667%;\n    max-width: 66.6666666667%;\n  }\n  .dapp-core-component__main__col-xl-9 {\n    flex: 0 0 75%;\n    max-width: 75%;\n  }\n  .dapp-core-component__main__col-xl-10 {\n    flex: 0 0 83.3333333333%;\n    max-width: 83.3333333333%;\n  }\n  .dapp-core-component__main__col-xl-11 {\n    flex: 0 0 91.6666666667%;\n    max-width: 91.6666666667%;\n  }\n  .dapp-core-component__main__col-xl-12 {\n    flex: 0 0 100%;\n    max-width: 100%;\n  }\n}\n.dapp-core-component__main__flex-row {\n  flex-direction: row;\n}\n\n.dapp-core-component__main__flex-column {\n  flex-direction: column;\n}\n\n.dapp-core-component__main__flex-row-reverse {\n  flex-direction: row-reverse;\n}\n\n.dapp-core-component__main__flex-column-reverse {\n  flex-direction: column-reverse;\n}\n\n.dapp-core-component__main__flex-wrap {\n  flex-wrap: wrap;\n}\n\n.dapp-core-component__main__flex-nowrap {\n  flex-wrap: nowrap;\n}\n\n.dapp-core-component__main__flex-wrap-reverse {\n  flex-wrap: wrap-reverse;\n}\n\n.dapp-core-component__main__flex-fill {\n  flex: 1 1 auto;\n}\n\n.dapp-core-component__main__flex-grow-0 {\n  flex-grow: 0;\n}\n\n.dapp-core-component__main__flex-grow-1 {\n  flex-grow: 1;\n}\n\n.dapp-core-component__main__flex-shrink-0 {\n  flex-shrink: 0;\n}\n\n.dapp-core-component__main__flex-shrink-1 {\n  flex-shrink: 1;\n}\n\n.dapp-core-component__main__justify-content-start {\n  justify-content: flex-start;\n}\n\n.dapp-core-component__main__justify-content-end {\n  justify-content: flex-end;\n}\n\n.dapp-core-component__main__justify-content-center {\n  justify-content: center;\n}\n\n.dapp-core-component__main__justify-content-between {\n  justify-content: space-between;\n}\n\n.dapp-core-component__main__justify-content-around {\n  justify-content: space-around;\n}\n\n.dapp-core-component__main__align-items-start {\n  align-items: flex-start;\n}\n\n.dapp-core-component__main__align-items-end {\n  align-items: flex-end;\n}\n\n.dapp-core-component__main__align-items-center {\n  align-items: center;\n}\n\n.dapp-core-component__main__align-items-baseline {\n  align-items: baseline;\n}\n\n.dapp-core-component__main__align-items-stretch {\n  align-items: stretch;\n}\n\n.dapp-core-component__main__align-content-start {\n  align-content: flex-start;\n}\n\n.dapp-core-component__main__align-content-end {\n  align-content: flex-end;\n}\n\n.dapp-core-component__main__align-content-center {\n  align-content: center;\n}\n\n.dapp-core-component__main__align-content-between {\n  align-content: space-between;\n}\n\n.dapp-core-component__main__align-content-around {\n  align-content: space-around;\n}\n\n.dapp-core-component__main__align-content-stretch {\n  align-content: stretch;\n}\n\n.dapp-core-component__main__align-self-auto {\n  align-self: auto;\n}\n\n.dapp-core-component__main__align-self-start {\n  align-self: flex-start;\n}\n\n.dapp-core-component__main__align-self-end {\n  align-self: flex-end;\n}\n\n.dapp-core-component__main__align-self-center {\n  align-self: center;\n}\n\n.dapp-core-component__main__align-self-baseline {\n  align-self: baseline;\n}\n\n.dapp-core-component__main__align-self-stretch {\n  align-self: stretch;\n}\n\n@media (min-width: 576px) {\n  .dapp-core-component__main__flex-sm-row {\n    flex-direction: row;\n  }\n}\n@media (min-width: 992px) {\n  .dapp-core-component__main__flex-lg-row {\n    flex-direction: row;\n  }\n}\n@media (min-width: 992px) {\n  .dapp-core-component__main__flex-lg-wrap {\n    flex-wrap: wrap;\n  }\n}\n.dapp-core-component__main__form-check {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  width: auto;\n  padding-left: 0;\n}\n\n.dapp-core-component__main__form-check-label {\n  margin-bottom: 0;\n}\n\n.dapp-core-component__main__form-check-input {\n  position: absolute;\n  margin-top: 0.3rem;\n  margin-left: -1.25rem;\n}\n\n.dapp-core-component__main__form-check-input[disabled] ~ .dapp-core-component__main__form-check-label, .dapp-core-component__main__form-check-input:disabled ~ .dapp-core-component__main__form-check-label {\n  color: #6c757d;\n}\n\n.dapp-core-component__main__form-group {\n  display: flex;\n  flex: 0 0 auto;\n  flex-flow: row wrap;\n  align-items: center;\n  margin-bottom: 0;\n}\n\n.dapp-core-component__main__form-control {\n  display: block;\n  width: 100%;\n  height: calc(1.5em + 0.75rem + 2px);\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 1.5;\n  color: #495057;\n  background-color: #fff;\n  background-clip: padding-box;\n  border: 1px solid #ced4da;\n  border-radius: 0.25rem;\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n}\n\n.dapp-core-component__main__form-label {\n  padding-top: calc(0.375rem + 1px);\n  padding-bottom: calc(0.375rem + 1px);\n  margin-bottom: 0;\n  font-size: inherit;\n  line-height: 1.5;\n}\n\ninput,\nbutton,\nselect,\noptgroup,\ntextarea {\n  margin: 0;\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n\n.dapp-core-component__main__form-group {\n  margin-bottom: 1rem;\n}\n\n.dapp-core-component__main__form-text {\n  display: block;\n  margin-top: 0.25rem;\n  color: inherit;\n}\n\n.dapp-core-component__main__border {\n  border: 1px solid #dee2e6;\n}\n\n.dapp-core-component__main__border-top {\n  border-top: 1px solid #dee2e6;\n}\n\n.dapp-core-component__main__border-right {\n  border-right: 1px solid #dee2e6;\n}\n\n.dapp-core-component__main__border-bottom {\n  border-bottom: 1px solid #dee2e6;\n}\n\n.dapp-core-component__main__border-left {\n  border-left: 1px solid #dee2e6;\n}\n\n.dapp-core-component__main__border-0 {\n  border: 0;\n}\n\n.dapp-core-component__main__border-top-0 {\n  border-top: 0;\n}\n\n.dapp-core-component__main__border-right-0 {\n  border-right: 0;\n}\n\n.dapp-core-component__main__border-bottom-0 {\n  border-bottom: 0;\n}\n\n.dapp-core-component__main__border-left-0 {\n  border-left: 0;\n}\n\n.dapp-core-component__main__rounded-sm {\n  border-radius: 0.2rem;\n}\n\n.dapp-core-component__main__rounded {\n  border-radius: 0.25rem;\n}\n\n.dapp-core-component__main__rounded-top {\n  border-top-left-radius: 0.25rem;\n  border-top-right-radius: 0.25rem;\n}\n\n.dapp-core-component__main__rounded-right {\n  border-top-right-radius: 0.25rem;\n  border-bottom-right-radius: 0.25rem;\n}\n\n.dapp-core-component__main__rounded-bottom {\n  border-bottom-right-radius: 0.25rem;\n  border-bottom-left-radius: 0.25rem;\n}\n\n.dapp-core-component__main__rounded-left {\n  border-top-left-radius: 0.25rem;\n  border-bottom-left-radius: 0.25rem;\n}\n\n.dapp-core-component__main__rounded-lg {\n  border-radius: 0.3rem;\n}\n\n.dapp-core-component__main__rounded-circle {\n  border-radius: 50%;\n}\n\n.dapp-core-component__main__rounded-pill {\n  border-radius: 50rem;\n}\n\n.dapp-core-component__main__rounded-0 {\n  border-radius: 0;\n}\n\n.dapp-core-component__main__h1,\n.dapp-core-component__main__h2,\n.dapp-core-component__main__h3,\n.dapp-core-component__main__h4,\n.dapp-core-component__main__h5,\n.dapp-core-component__main__h6 {\n  margin-bottom: 0.5rem;\n  font-weight: 500;\n  line-height: 1.2;\n}\n\n.dapp-core-component__main__h1 {\n  font-size: 2.5rem;\n}\n\n.dapp-core-component__main__h2 {\n  font-size: 2rem;\n}\n\n.dapp-core-component__main__h3 {\n  font-size: 1.75rem;\n}\n\n.dapp-core-component__main__h4 {\n  font-size: 1.5rem;\n}\n\n.dapp-core-component__main__h5 {\n  font-size: 1.25rem;\n}\n\n.dapp-core-component__main__h6 {\n  font-size: 1rem;\n}\n\n.dapp-core-component__main__lead {\n  font-size: 1.25rem;\n  font-weight: 300;\n}\n\n.dapp-core-component__main__bg-primary {\n  background-color: #1b46c2;\n}\n\n.dapp-core-component__main__bg-warning,\n.dapp-core-component__main__warning {\n  background-color: #f0ad4e;\n}\n\n.dapp-core-component__main__bg-danger,\n.dapp-core-component__main__danger {\n  background-color: #d9534f;\n}\n\n.dapp-core-component__main__bg-success,\n.dapp-core-component__main__success {\n  background-color: #5cb85c;\n}\n\n.dapp-core-component__main__position-relative {\n  position: relative;\n}\n\n.dapp-core-component__main__position-absolute {\n  position: absolute;\n}\n\n.dapp-core-component__main__w-25 {\n  width: 25%;\n}\n\n.dapp-core-component__main__w-50 {\n  width: 50%;\n}\n\n.dapp-core-component__main__w-75 {\n  width: 75%;\n}\n\n.dapp-core-component__main__w-100 {\n  width: 100%;\n}\n\n.dapp-core-component__main__w-auto {\n  width: auto;\n}\n\n.dapp-core-component__main__h-25 {\n  height: 25%;\n}\n\n.dapp-core-component__main__h-50 {\n  height: 50%;\n}\n\n.dapp-core-component__main__h-75 {\n  height: 75%;\n}\n\n.dapp-core-component__main__h-100 {\n  height: 100%;\n}\n\n.dapp-core-component__main__h-auto {\n  height: auto;\n}\n\n.dapp-core-component__main__mw-100 {\n  max-width: 100%;\n}\n\n.dapp-core-component__main__mh-100 {\n  max-height: 100%;\n}\n\n.dapp-core-component__main__min-vw-100 {\n  min-width: 100vw;\n}\n\n.dapp-core-component__main__min-vh-100 {\n  min-height: 100vh;\n}\n\n.dapp-core-component__main__vw-100 {\n  width: 100vw;\n}\n\n.dapp-core-component__main__vh-100 {\n  height: 100vh;\n}\n\n@media (min-width: 768px) {\n  .dapp-core-component__main__w-md-auto {\n    width: auto;\n  }\n}\n.dapp-core-component__main__locked-icon {\n  color: inherit;\n}\n\n.dapp-core-component__main__shadow-sm {\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\n}\n\n.dapp-core-component__main__shadow {\n  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n}\n\n.dapp-core-component__main__shadow-lg {\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175);\n}\n\n.dapp-core-component__main__shadow-none {\n  box-shadow: none;\n}\n\n.dapp-core-component__main__d-none {\n  display: none;\n}\n\n.dapp-core-component__main__d-inline {\n  display: inline;\n}\n\n.dapp-core-component__main__d-inline-block {\n  display: inline-block;\n}\n\n.dapp-core-component__main__d-block {\n  display: block;\n}\n\n.dapp-core-component__main__d-table {\n  display: table;\n}\n\n.dapp-core-component__main__d-table-row {\n  display: table-row;\n}\n\n.dapp-core-component__main__d-table-cell {\n  display: table-cell;\n}\n\n.dapp-core-component__main__d-flex {\n  display: -ms-flexbox;\n  display: flex;\n}\n\n.dapp-core-component__main__d-inline-flex {\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n}\n\n@media (min-width: 576px) {\n  .dapp-core-component__main__d-sm-flex {\n    display: flex;\n  }\n}\n.dapp-core-component__main__table {\n  width: 100%;\n  margin-bottom: 1rem;\n  color: #212529;\n}\n\n.dapp-core-component__main__table th,\n.dapp-core-component__main__table td {\n  padding: 0.75rem;\n  vertical-align: top;\n  border-top: 1px solid #dee2e6;\n}\n\n.dapp-core-component__main__table thead th {\n  vertical-align: bottom;\n  border-bottom: 2px solid #dee2e6;\n}\n\n.dapp-core-component__main__table tbody + tbody {\n  border-top: 2px solid #dee2e6;\n}\n\n.dapp-core-component__main__table-sm th,\n.dapp-core-component__main__table-sm td {\n  padding: 0.3rem;\n}\n\n.dapp-core-component__main__table-bordered {\n  border: 1px solid #dee2e6;\n}\n\n.dapp-core-component__main__table-bordered th,\n.dapp-core-component__main__table-bordered td {\n  border: 1px solid #dee2e6;\n}\n\n.dapp-core-component__main__table-bordered thead th,\n.dapp-core-component__main__table-bordered thead td {\n  border-bottom-width: 2px;\n}\n\n.dapp-core-component__main__table-borderless th,\n.dapp-core-component__main__table-borderless td,\n.dapp-core-component__main__table-borderless thead th,\n.dapp-core-component__main__table-borderless tbody + tbody {\n  border: 0;\n}\n\n.dapp-core-component__main__table-striped tbody tr:nth-of-type(odd) {\n  background-color: rgba(0, 0, 0, 0.05);\n}\n\n.dapp-core-component__main__table .dapp-core-component__main__thead-dark th {\n  color: #fff;\n  background-color: #343a40;\n  border-color: rgb(69.1465517241, 77.125, 85.1034482759);\n}\n\n.dapp-core-component__main__table .dapp-core-component__main__thead-light th {\n  color: #495057;\n  background-color: #e9ecef;\n  border-color: #dee2e6;\n}\n\n.dapp-core-component__main__table-dark {\n  color: #fff;\n  background-color: #343a40;\n}\n\n.dapp-core-component__main__table-dark th,\n.dapp-core-component__main__table-dark td,\n.dapp-core-component__main__table-dark thead th {\n  border-color: rgb(69.1465517241, 77.125, 85.1034482759);\n}\n\n.dapp-core-component__main__table-dark.dapp-core-component__main__table-bordered {\n  border: 0;\n}\n\n.dapp-core-component__main__table-dark.dapp-core-component__main__table-striped tbody tr:nth-of-type(odd) {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n\n.dapp-core-component__main__table-dark.dapp-core-component__main__table-hover tbody tr {\n  color: #fff;\n  background-color: rgba(255, 255, 255, 0.075);\n}\n\n.dapp-core-component__main__table-responsive {\n  display: block;\n  width: 100%;\n  overflow-x: auto;\n  -webkit-overflow-scrolling: touch;\n}\n\n.dapp-core-component__main__table-responsive > .dapp-core-component__main__table-bordered {\n  border: 0;\n}\n\n@media (max-width: 767.98px) {\n  .dapp-core-component__main__transactions.dapp-core-component__main__table .dapp-core-component__main__transaction-hash .dapp-core-component__main__trim {\n    max-width: 8rem;\n  }\n}\n.dapp-core-component__main__font-weight-light {\n  font-weight: 300;\n}\n\n.dapp-core-component__main__font-weight-lighter {\n  font-weight: lighter;\n}\n\n.dapp-core-component__main__font-weight-normal {\n  font-weight: 400;\n}\n\n.dapp-core-component__main__font-weight-medium {\n  font-weight: 500;\n}\n\n.dapp-core-component__main__font-weight-bold {\n  font-weight: 700;\n}\n\n.dapp-core-component__main__font-weight-bolder {\n  font-weight: bolder;\n}\n\n.dapp-core-component__main__font-italic {\n  font-style: italic;\n}\n\n.dapp-core-component__main__icon-state {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 6rem;\n  height: 6rem;\n  border-radius: 50%;\n}\n.dapp-core-component__main__icon-state.dapp-core-component__main__half {\n  width: 3rem;\n  height: 3rem;\n}\n\n.dapp-core-component__main__side-icon {\n  width: 1.5rem;\n  height: 1.5rem;\n  min-width: 1.5rem;\n  min-height: 1.5rem;\n  color: transparent;\n  border-radius: 50%;\n  overflow: hidden;\n  border: 1px solid #dee2e6;\n}\n.dapp-core-component__main__side-icon svg {\n  color: #cacbcc;\n}\n\ndiv.dapp-core-component__main__side-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\ndiv.dapp-core-component__main__side-icon img {\n  transform: scale(0.75);\n}\n\n.dapp-core-component__main__toast-messages {\n  position: fixed;\n  bottom: 1rem;\n  left: 1rem;\n  right: 1rem;\n  z-index: 9999;\n}\n.dapp-core-component__main__toast-messages .dapp-core-component__main__toast {\n  display: block;\n  flex-basis: 4rem;\n  width: 100%;\n  max-width: 28.875rem;\n  transition: transform 0.3s ease-in-out;\n  transform: translateX(120%);\n  background-color: #fff;\n  border-radius: 0.25rem;\n  border-color: #dee2e6;\n}\n.dapp-core-component__main__toast-messages .dapp-core-component__main__toast.dapp-core-component__main__clickable {\n  cursor: pointer;\n}\n.dapp-core-component__main__toast-messages .dapp-core-component__main__toast.dapp-core-component__main__toast-visible {\n  margin-bottom: 0.3rem;\n  transform: translateX(0);\n}\n.dapp-core-component__main__toast-messages .dapp-core-component__main__toast.dapp-core-component__main__toast-visible .dapp-core-component__main__progress {\n  background-color: rgba(0, 0, 0, 0);\n  height: inherit;\n  font-size: inherit;\n  line-height: inherit;\n}\n.dapp-core-component__main__toast-messages .dapp-core-component__main__toast.dapp-core-component__main__toast-visible .dapp-core-component__main__progress .dapp-core-component__main__progress-bar {\n  background-color: rgba(108, 117, 125, 0.2);\n}\n.dapp-core-component__main__toast-messages .dapp-core-component__main__toast.dapp-core-component__main__toast-visible .dapp-core-component__main__progress .dapp-core-component__main__progress-bar .dapp-core-component__main__content-height {\n  z-index: -1;\n  visibility: hidden;\n  width: 0;\n}\n.dapp-core-component__main__toast-messages .dapp-core-component__main__toast .dapp-core-component__main__tx-description {\n  margin-bottom: 0.2rem;\n}\n.dapp-core-component__main__toast-messages .dapp-core-component__main__close {\n  opacity: 1;\n}\n.dapp-core-component__main__toast-messages .dapp-core-component__main__close svg {\n  color: #6c757d;\n}\n\n.dapp-core-component__main__data-field .dapp-core-component__main__textarea {\n  -moz-appearance: textfield-multiline;\n  -webkit-appearance: textarea;\n  border: 1px solid #000;\n  background-color: #fff;\n  border-radius: 5px;\n  font: medium -moz-fixed;\n  font-size: 0.8125rem;\n  min-height: 5rem;\n  overflow: auto;\n  padding: 0.375rem 0.75rem;\n  resize: both;\n}\n.dapp-core-component__main__data-field .dapp-core-component__main__textarea:hover {\n  border: 1px solid #000;\n}\n.dapp-core-component__main__data-field .dapp-core-component__main__textarea .dapp-core-component__main__highlighted {\n  font-size: 1rem;\n}\n.dapp-core-component__main__data-field .dapp-core-component__main__textarea.dapp-core-component__main__sc-call {\n  min-height: 3rem;\n}\n.dapp-core-component__main__data-field .dapp-core-component__main__form-control:disabled,\n.dapp-core-component__main__data-field .dapp-core-component__main__form-control[readonly] {\n  background-color: #fafafa;\n}\n.dapp-core-component__main__data-field .dapp-core-component__main__small-font {\n  font-size: 0.8125rem;\n}\n\n.dapp-core-component__main__progress-steps {\n  display: flex;\n}\n.dapp-core-component__main__progress-steps .dapp-core-component__main__steps {\n  display: flex;\n}\n.dapp-core-component__main__progress-steps .dapp-core-component__main__steps hr {\n  background-color: #6c757d;\n  border-color: #dee2e6;\n  z-index: 2;\n}\n.dapp-core-component__main__progress-steps .dapp-core-component__main__steps .dapp-core-component__main__dot {\n  height: 0.625rem;\n  width: 0.625rem;\n  border-radius: 50%;\n  margin: 0 1rem;\n  z-index: 5;\n  background-color: #6c757d;\n}\n.dapp-core-component__main__progress-steps .dapp-core-component__main__steps .dapp-core-component__main__dot:first-of-type {\n  margin-left: 0;\n}\n.dapp-core-component__main__progress-steps .dapp-core-component__main__steps .dapp-core-component__main__dot:last-of-type {\n  margin-right: 0;\n}\n.dapp-core-component__main__progress-steps .dapp-core-component__main__steps .dapp-core-component__main__dot.dapp-core-component__main__bg-primary {\n  background-color: #1b46c2;\n}\n\na.dapp-core-component__main__side-link::after {\n  right: 0;\n  left: unset;\n  width: calc(100% - 1.85rem);\n}`;\ndocument.head\n    .appendChild(document.createElement(\"style\"))\n    .appendChild(document.createTextNode(css));\nexport {css};\nexport default {\n  \"link-style\": \"dapp-core-component__main__link-style\",\n  \"linkStyle\": \"dapp-core-component__main__link-style\",\n  \"link-second-style\": \"dapp-core-component__main__link-second-style\",\n  \"linkSecondStyle\": \"dapp-core-component__main__link-second-style\",\n  \"wrapper\": \"dapp-core-component__main__wrapper\",\n  \"opacity-6\": \"dapp-core-component__main__opacity-6\",\n  \"opacity6\": \"dapp-core-component__main__opacity-6\",\n  \"qr-code-svg-container\": \"dapp-core-component__main__qr-code-svg-container\",\n  \"qrCodeSvgContainer\": \"dapp-core-component__main__qr-code-svg-container\",\n  \"pair-list\": \"dapp-core-component__main__pair-list\",\n  \"pairList\": \"dapp-core-component__main__pair-list\",\n  \"pair-loader\": \"dapp-core-component__main__pair-loader\",\n  \"pairLoader\": \"dapp-core-component__main__pair-loader\",\n  \"pair-image\": \"dapp-core-component__main__pair-image\",\n  \"pairImage\": \"dapp-core-component__main__pair-image\",\n  \"pair-remove\": \"dapp-core-component__main__pair-remove\",\n  \"pairRemove\": \"dapp-core-component__main__pair-remove\",\n  \"dapp-icon\": \"dapp-core-component__main__dapp-icon\",\n  \"dappIcon\": \"dapp-core-component__main__dapp-icon\",\n  \"icon-medium\": \"dapp-core-component__main__icon-medium\",\n  \"iconMedium\": \"dapp-core-component__main__icon-medium\",\n  \"centering\": \"dapp-core-component__main__centering\",\n  \"border-n\": \"dapp-core-component__main__border-n\",\n  \"borderN\": \"dapp-core-component__main__border-n\",\n  \"t-shadow\": \"dapp-core-component__main__t-shadow\",\n  \"tShadow\": \"dapp-core-component__main__t-shadow\",\n  \"btn\": \"dapp-core-component__main__btn\",\n  \"media\": \"dapp-core-component__main__media\",\n  \"media-body\": \"dapp-core-component__main__media-body\",\n  \"mediaBody\": \"dapp-core-component__main__media-body\",\n  \"connect-btns\": \"dapp-core-component__main__connect-btns\",\n  \"connectBtns\": \"dapp-core-component__main__connect-btns\",\n  \"info\": \"dapp-core-component__main__info\",\n  \"trust-badge\": \"dapp-core-component__main__trust-badge\",\n  \"trustBadge\": \"dapp-core-component__main__trust-badge\",\n  \"navbar\": \"dapp-core-component__main__navbar\",\n  \"dapp-name\": \"dapp-core-component__main__dapp-name\",\n  \"dappName\": \"dapp-core-component__main__dapp-name\",\n  \"action-btn\": \"dapp-core-component__main__action-btn\",\n  \"actionBtn\": \"dapp-core-component__main__action-btn\",\n  \"transactions\": \"dapp-core-component__main__transactions\",\n  \"transaction-icon\": \"dapp-core-component__main__transaction-icon\",\n  \"transactionIcon\": \"dapp-core-component__main__transaction-icon\",\n  \"table\": \"dapp-core-component__main__table\",\n  \"page-state\": \"dapp-core-component__main__page-state\",\n  \"pageState\": \"dapp-core-component__main__page-state\",\n  \"lds-ellipsis\": \"dapp-core-component__main__lds-ellipsis\",\n  \"ldsEllipsis\": \"dapp-core-component__main__lds-ellipsis\",\n  \"bg-blue\": \"dapp-core-component__main__bg-blue\",\n  \"bgBlue\": \"dapp-core-component__main__bg-blue\",\n  \"lds-ellipsis1\": \"dapp-core-component__main__lds-ellipsis1\",\n  \"ldsEllipsis1\": \"dapp-core-component__main__lds-ellipsis1\",\n  \"lds-ellipsis2\": \"dapp-core-component__main__lds-ellipsis2\",\n  \"ldsEllipsis2\": \"dapp-core-component__main__lds-ellipsis2\",\n  \"lds-ellipsis3\": \"dapp-core-component__main__lds-ellipsis3\",\n  \"ldsEllipsis3\": \"dapp-core-component__main__lds-ellipsis3\",\n  \"focus\": \"dapp-core-component__main__focus\",\n  \"disabled\": \"dapp-core-component__main__disabled\",\n  \"btn-primary\": \"dapp-core-component__main__btn-primary\",\n  \"btnPrimary\": \"dapp-core-component__main__btn-primary\",\n  \"btn-secondary\": \"dapp-core-component__main__btn-secondary\",\n  \"btnSecondary\": \"dapp-core-component__main__btn-secondary\",\n  \"btn-warning\": \"dapp-core-component__main__btn-warning\",\n  \"btnWarning\": \"dapp-core-component__main__btn-warning\",\n  \"btn-dark\": \"dapp-core-component__main__btn-dark\",\n  \"btnDark\": \"dapp-core-component__main__btn-dark\",\n  \"btn-link\": \"dapp-core-component__main__btn-link\",\n  \"btnLink\": \"dapp-core-component__main__btn-link\",\n  \"btn-light\": \"dapp-core-component__main__btn-light\",\n  \"btnLight\": \"dapp-core-component__main__btn-light\",\n  \"badge\": \"dapp-core-component__main__badge\",\n  \"badge-pill\": \"dapp-core-component__main__badge-pill\",\n  \"badgePill\": \"dapp-core-component__main__badge-pill\",\n  \"badge-primary\": \"dapp-core-component__main__badge-primary\",\n  \"badgePrimary\": \"dapp-core-component__main__badge-primary\",\n  \"badge-secondary\": \"dapp-core-component__main__badge-secondary\",\n  \"badgeSecondary\": \"dapp-core-component__main__badge-secondary\",\n  \"badge-success\": \"dapp-core-component__main__badge-success\",\n  \"badgeSuccess\": \"dapp-core-component__main__badge-success\",\n  \"badge-info\": \"dapp-core-component__main__badge-info\",\n  \"badgeInfo\": \"dapp-core-component__main__badge-info\",\n  \"badge-warning\": \"dapp-core-component__main__badge-warning\",\n  \"badgeWarning\": \"dapp-core-component__main__badge-warning\",\n  \"badge-danger\": \"dapp-core-component__main__badge-danger\",\n  \"badgeDanger\": \"dapp-core-component__main__badge-danger\",\n  \"badge-light\": \"dapp-core-component__main__badge-light\",\n  \"badgeLight\": \"dapp-core-component__main__badge-light\",\n  \"badge-dark\": \"dapp-core-component__main__badge-dark\",\n  \"badgeDark\": \"dapp-core-component__main__badge-dark\",\n  \"card\": \"dapp-core-component__main__card\",\n  \"list-group\": \"dapp-core-component__main__list-group\",\n  \"listGroup\": \"dapp-core-component__main__list-group\",\n  \"card-header\": \"dapp-core-component__main__card-header\",\n  \"cardHeader\": \"dapp-core-component__main__card-header\",\n  \"card-footer\": \"dapp-core-component__main__card-footer\",\n  \"cardFooter\": \"dapp-core-component__main__card-footer\",\n  \"card-header-item\": \"dapp-core-component__main__card-header-item\",\n  \"cardHeaderItem\": \"dapp-core-component__main__card-header-item\",\n  \"h6\": \"dapp-core-component__main__h6\",\n  \"compact\": \"dapp-core-component__main__compact\",\n  \"card-body\": \"dapp-core-component__main__card-body\",\n  \"cardBody\": \"dapp-core-component__main__card-body\",\n  \"card-title\": \"dapp-core-component__main__card-title\",\n  \"cardTitle\": \"dapp-core-component__main__card-title\",\n  \"card-subtitle\": \"dapp-core-component__main__card-subtitle\",\n  \"cardSubtitle\": \"dapp-core-component__main__card-subtitle\",\n  \"card-text\": \"dapp-core-component__main__card-text\",\n  \"cardText\": \"dapp-core-component__main__card-text\",\n  \"card-link\": \"dapp-core-component__main__card-link\",\n  \"cardLink\": \"dapp-core-component__main__card-link\",\n  \"text\": \"dapp-core-component__main__text\",\n  \"text-white\": \"dapp-core-component__main__text-white\",\n  \"textWhite\": \"dapp-core-component__main__text-white\",\n  \"text-monospace\": \"dapp-core-component__main__text-monospace\",\n  \"textMonospace\": \"dapp-core-component__main__text-monospace\",\n  \"trim-size-xl\": \"dapp-core-component__main__trim-size-xl\",\n  \"trimSizeXl\": \"dapp-core-component__main__trim-size-xl\",\n  \"trim\": \"dapp-core-component__main__trim\",\n  \"trim-only-sm\": \"dapp-core-component__main__trim-only-sm\",\n  \"trimOnlySm\": \"dapp-core-component__main__trim-only-sm\",\n  \"text-justify\": \"dapp-core-component__main__text-justify\",\n  \"textJustify\": \"dapp-core-component__main__text-justify\",\n  \"text-wrap\": \"dapp-core-component__main__text-wrap\",\n  \"textWrap\": \"dapp-core-component__main__text-wrap\",\n  \"text-nowrap\": \"dapp-core-component__main__text-nowrap\",\n  \"textNowrap\": \"dapp-core-component__main__text-nowrap\",\n  \"text-truncate\": \"dapp-core-component__main__text-truncate\",\n  \"textTruncate\": \"dapp-core-component__main__text-truncate\",\n  \"text-left\": \"dapp-core-component__main__text-left\",\n  \"textLeft\": \"dapp-core-component__main__text-left\",\n  \"text-right\": \"dapp-core-component__main__text-right\",\n  \"textRight\": \"dapp-core-component__main__text-right\",\n  \"text-center\": \"dapp-core-component__main__text-center\",\n  \"textCenter\": \"dapp-core-component__main__text-center\",\n  \"text-primary\": \"dapp-core-component__main__text-primary\",\n  \"textPrimary\": \"dapp-core-component__main__text-primary\",\n  \"text-secondary\": \"dapp-core-component__main__text-secondary\",\n  \"textSecondary\": \"dapp-core-component__main__text-secondary\",\n  \"text-primary-highlight\": \"dapp-core-component__main__text-primary-highlight\",\n  \"textPrimaryHighlight\": \"dapp-core-component__main__text-primary-highlight\",\n  \"text-muted\": \"dapp-core-component__main__text-muted\",\n  \"textMuted\": \"dapp-core-component__main__text-muted\",\n  \"text-success\": \"dapp-core-component__main__text-success\",\n  \"textSuccess\": \"dapp-core-component__main__text-success\",\n  \"text-body\": \"dapp-core-component__main__text-body\",\n  \"textBody\": \"dapp-core-component__main__text-body\",\n  \"text-black-50\": \"dapp-core-component__main__text-black-50\",\n  \"textBlack50\": \"dapp-core-component__main__text-black-50\",\n  \"text-white-50\": \"dapp-core-component__main__text-white-50\",\n  \"textWhite50\": \"dapp-core-component__main__text-white-50\",\n  \"text-lg-right\": \"dapp-core-component__main__text-lg-right\",\n  \"textLgRight\": \"dapp-core-component__main__text-lg-right\",\n  \"text-hide\": \"dapp-core-component__main__text-hide\",\n  \"textHide\": \"dapp-core-component__main__text-hide\",\n  \"text-decoration-none\": \"dapp-core-component__main__text-decoration-none\",\n  \"textDecorationNone\": \"dapp-core-component__main__text-decoration-none\",\n  \"text-break\": \"dapp-core-component__main__text-break\",\n  \"textBreak\": \"dapp-core-component__main__text-break\",\n  \"text-reset\": \"dapp-core-component__main__text-reset\",\n  \"textReset\": \"dapp-core-component__main__text-reset\",\n  \"text-lowercase\": \"dapp-core-component__main__text-lowercase\",\n  \"textLowercase\": \"dapp-core-component__main__text-lowercase\",\n  \"text-uppercase\": \"dapp-core-component__main__text-uppercase\",\n  \"textUppercase\": \"dapp-core-component__main__text-uppercase\",\n  \"text-capitalize\": \"dapp-core-component__main__text-capitalize\",\n  \"textCapitalize\": \"dapp-core-component__main__text-capitalize\",\n  \"text-danger\": \"dapp-core-component__main__text-danger\",\n  \"textDanger\": \"dapp-core-component__main__text-danger\",\n  \"text-warning\": \"dapp-core-component__main__text-warning\",\n  \"textWarning\": \"dapp-core-component__main__text-warning\",\n  \"trim-fs-sm\": \"dapp-core-component__main__trim-fs-sm\",\n  \"trimFsSm\": \"dapp-core-component__main__trim-fs-sm\",\n  \"mx-auto\": \"dapp-core-component__main__mx-auto\",\n  \"mxAuto\": \"dapp-core-component__main__mx-auto\",\n  \"m-0\": \"dapp-core-component__main__m-0\",\n  \"m0\": \"dapp-core-component__main__m-0\",\n  \"mt-0\": \"dapp-core-component__main__mt-0\",\n  \"mt0\": \"dapp-core-component__main__mt-0\",\n  \"my-0\": \"dapp-core-component__main__my-0\",\n  \"my0\": \"dapp-core-component__main__my-0\",\n  \"mr-0\": \"dapp-core-component__main__mr-0\",\n  \"mr0\": \"dapp-core-component__main__mr-0\",\n  \"mx-0\": \"dapp-core-component__main__mx-0\",\n  \"mx0\": \"dapp-core-component__main__mx-0\",\n  \"mb-0\": \"dapp-core-component__main__mb-0\",\n  \"mb0\": \"dapp-core-component__main__mb-0\",\n  \"ml-0\": \"dapp-core-component__main__ml-0\",\n  \"ml0\": \"dapp-core-component__main__ml-0\",\n  \"m-1\": \"dapp-core-component__main__m-1\",\n  \"m1\": \"dapp-core-component__main__m-1\",\n  \"mt-1\": \"dapp-core-component__main__mt-1\",\n  \"mt1\": \"dapp-core-component__main__mt-1\",\n  \"my-1\": \"dapp-core-component__main__my-1\",\n  \"my1\": \"dapp-core-component__main__my-1\",\n  \"mr-1\": \"dapp-core-component__main__mr-1\",\n  \"mr1\": \"dapp-core-component__main__mr-1\",\n  \"mx-1\": \"dapp-core-component__main__mx-1\",\n  \"mx1\": \"dapp-core-component__main__mx-1\",\n  \"mb-1\": \"dapp-core-component__main__mb-1\",\n  \"mb1\": \"dapp-core-component__main__mb-1\",\n  \"ml-1\": \"dapp-core-component__main__ml-1\",\n  \"ml1\": \"dapp-core-component__main__ml-1\",\n  \"m-2\": \"dapp-core-component__main__m-2\",\n  \"m2\": \"dapp-core-component__main__m-2\",\n  \"mt-2\": \"dapp-core-component__main__mt-2\",\n  \"mt2\": \"dapp-core-component__main__mt-2\",\n  \"my-2\": \"dapp-core-component__main__my-2\",\n  \"my2\": \"dapp-core-component__main__my-2\",\n  \"mr-2\": \"dapp-core-component__main__mr-2\",\n  \"mr2\": \"dapp-core-component__main__mr-2\",\n  \"mx-2\": \"dapp-core-component__main__mx-2\",\n  \"mx2\": \"dapp-core-component__main__mx-2\",\n  \"mb-2\": \"dapp-core-component__main__mb-2\",\n  \"mb2\": \"dapp-core-component__main__mb-2\",\n  \"ml-2\": \"dapp-core-component__main__ml-2\",\n  \"ml2\": \"dapp-core-component__main__ml-2\",\n  \"m-3\": \"dapp-core-component__main__m-3\",\n  \"m3\": \"dapp-core-component__main__m-3\",\n  \"mt-3\": \"dapp-core-component__main__mt-3\",\n  \"mt3\": \"dapp-core-component__main__mt-3\",\n  \"my-3\": \"dapp-core-component__main__my-3\",\n  \"my3\": \"dapp-core-component__main__my-3\",\n  \"mr-3\": \"dapp-core-component__main__mr-3\",\n  \"mr3\": \"dapp-core-component__main__mr-3\",\n  \"mx-3\": \"dapp-core-component__main__mx-3\",\n  \"mx3\": \"dapp-core-component__main__mx-3\",\n  \"mb-3\": \"dapp-core-component__main__mb-3\",\n  \"mb3\": \"dapp-core-component__main__mb-3\",\n  \"ml-3\": \"dapp-core-component__main__ml-3\",\n  \"ml3\": \"dapp-core-component__main__ml-3\",\n  \"m-4\": \"dapp-core-component__main__m-4\",\n  \"m4\": \"dapp-core-component__main__m-4\",\n  \"mt-4\": \"dapp-core-component__main__mt-4\",\n  \"mt4\": \"dapp-core-component__main__mt-4\",\n  \"my-4\": \"dapp-core-component__main__my-4\",\n  \"my4\": \"dapp-core-component__main__my-4\",\n  \"mr-4\": \"dapp-core-component__main__mr-4\",\n  \"mr4\": \"dapp-core-component__main__mr-4\",\n  \"mx-4\": \"dapp-core-component__main__mx-4\",\n  \"mx4\": \"dapp-core-component__main__mx-4\",\n  \"mb-4\": \"dapp-core-component__main__mb-4\",\n  \"mb4\": \"dapp-core-component__main__mb-4\",\n  \"ml-4\": \"dapp-core-component__main__ml-4\",\n  \"ml4\": \"dapp-core-component__main__ml-4\",\n  \"m-5\": \"dapp-core-component__main__m-5\",\n  \"m5\": \"dapp-core-component__main__m-5\",\n  \"mt-5\": \"dapp-core-component__main__mt-5\",\n  \"mt5\": \"dapp-core-component__main__mt-5\",\n  \"my-5\": \"dapp-core-component__main__my-5\",\n  \"my5\": \"dapp-core-component__main__my-5\",\n  \"mr-5\": \"dapp-core-component__main__mr-5\",\n  \"mr5\": \"dapp-core-component__main__mr-5\",\n  \"mx-5\": \"dapp-core-component__main__mx-5\",\n  \"mx5\": \"dapp-core-component__main__mx-5\",\n  \"mb-5\": \"dapp-core-component__main__mb-5\",\n  \"mb5\": \"dapp-core-component__main__mb-5\",\n  \"ml-5\": \"dapp-core-component__main__ml-5\",\n  \"ml5\": \"dapp-core-component__main__ml-5\",\n  \"p-0\": \"dapp-core-component__main__p-0\",\n  \"p0\": \"dapp-core-component__main__p-0\",\n  \"pt-0\": \"dapp-core-component__main__pt-0\",\n  \"pt0\": \"dapp-core-component__main__pt-0\",\n  \"py-0\": \"dapp-core-component__main__py-0\",\n  \"py0\": \"dapp-core-component__main__py-0\",\n  \"pr-0\": \"dapp-core-component__main__pr-0\",\n  \"pr0\": \"dapp-core-component__main__pr-0\",\n  \"px-0\": \"dapp-core-component__main__px-0\",\n  \"px0\": \"dapp-core-component__main__px-0\",\n  \"pb-0\": \"dapp-core-component__main__pb-0\",\n  \"pb0\": \"dapp-core-component__main__pb-0\",\n  \"pl-0\": \"dapp-core-component__main__pl-0\",\n  \"pl0\": \"dapp-core-component__main__pl-0\",\n  \"p-1\": \"dapp-core-component__main__p-1\",\n  \"p1\": \"dapp-core-component__main__p-1\",\n  \"pt-1\": \"dapp-core-component__main__pt-1\",\n  \"pt1\": \"dapp-core-component__main__pt-1\",\n  \"py-1\": \"dapp-core-component__main__py-1\",\n  \"py1\": \"dapp-core-component__main__py-1\",\n  \"pr-1\": \"dapp-core-component__main__pr-1\",\n  \"pr1\": \"dapp-core-component__main__pr-1\",\n  \"px-1\": \"dapp-core-component__main__px-1\",\n  \"px1\": \"dapp-core-component__main__px-1\",\n  \"pb-1\": \"dapp-core-component__main__pb-1\",\n  \"pb1\": \"dapp-core-component__main__pb-1\",\n  \"pl-1\": \"dapp-core-component__main__pl-1\",\n  \"pl1\": \"dapp-core-component__main__pl-1\",\n  \"p-2\": \"dapp-core-component__main__p-2\",\n  \"p2\": \"dapp-core-component__main__p-2\",\n  \"pt-2\": \"dapp-core-component__main__pt-2\",\n  \"pt2\": \"dapp-core-component__main__pt-2\",\n  \"py-2\": \"dapp-core-component__main__py-2\",\n  \"py2\": \"dapp-core-component__main__py-2\",\n  \"pr-2\": \"dapp-core-component__main__pr-2\",\n  \"pr2\": \"dapp-core-component__main__pr-2\",\n  \"px-2\": \"dapp-core-component__main__px-2\",\n  \"px2\": \"dapp-core-component__main__px-2\",\n  \"pb-2\": \"dapp-core-component__main__pb-2\",\n  \"pb2\": \"dapp-core-component__main__pb-2\",\n  \"pl-2\": \"dapp-core-component__main__pl-2\",\n  \"pl2\": \"dapp-core-component__main__pl-2\",\n  \"p-3\": \"dapp-core-component__main__p-3\",\n  \"p3\": \"dapp-core-component__main__p-3\",\n  \"pt-3\": \"dapp-core-component__main__pt-3\",\n  \"pt3\": \"dapp-core-component__main__pt-3\",\n  \"py-3\": \"dapp-core-component__main__py-3\",\n  \"py3\": \"dapp-core-component__main__py-3\",\n  \"pr-3\": \"dapp-core-component__main__pr-3\",\n  \"pr3\": \"dapp-core-component__main__pr-3\",\n  \"px-3\": \"dapp-core-component__main__px-3\",\n  \"px3\": \"dapp-core-component__main__px-3\",\n  \"pb-3\": \"dapp-core-component__main__pb-3\",\n  \"pb3\": \"dapp-core-component__main__pb-3\",\n  \"pl-3\": \"dapp-core-component__main__pl-3\",\n  \"pl3\": \"dapp-core-component__main__pl-3\",\n  \"p-4\": \"dapp-core-component__main__p-4\",\n  \"p4\": \"dapp-core-component__main__p-4\",\n  \"pt-4\": \"dapp-core-component__main__pt-4\",\n  \"pt4\": \"dapp-core-component__main__pt-4\",\n  \"py-4\": \"dapp-core-component__main__py-4\",\n  \"py4\": \"dapp-core-component__main__py-4\",\n  \"pr-4\": \"dapp-core-component__main__pr-4\",\n  \"pr4\": \"dapp-core-component__main__pr-4\",\n  \"px-4\": \"dapp-core-component__main__px-4\",\n  \"px4\": \"dapp-core-component__main__px-4\",\n  \"pb-4\": \"dapp-core-component__main__pb-4\",\n  \"pb4\": \"dapp-core-component__main__pb-4\",\n  \"pl-4\": \"dapp-core-component__main__pl-4\",\n  \"pl4\": \"dapp-core-component__main__pl-4\",\n  \"p-5\": \"dapp-core-component__main__p-5\",\n  \"p5\": \"dapp-core-component__main__p-5\",\n  \"pt-5\": \"dapp-core-component__main__pt-5\",\n  \"pt5\": \"dapp-core-component__main__pt-5\",\n  \"py-5\": \"dapp-core-component__main__py-5\",\n  \"py5\": \"dapp-core-component__main__py-5\",\n  \"pr-5\": \"dapp-core-component__main__pr-5\",\n  \"pr5\": \"dapp-core-component__main__pr-5\",\n  \"px-5\": \"dapp-core-component__main__px-5\",\n  \"px5\": \"dapp-core-component__main__px-5\",\n  \"pb-5\": \"dapp-core-component__main__pb-5\",\n  \"pb5\": \"dapp-core-component__main__pb-5\",\n  \"pl-5\": \"dapp-core-component__main__pl-5\",\n  \"pl5\": \"dapp-core-component__main__pl-5\",\n  \"m-n1\": \"dapp-core-component__main__m-n1\",\n  \"mN1\": \"dapp-core-component__main__m-n1\",\n  \"mt-n1\": \"dapp-core-component__main__mt-n1\",\n  \"mtN1\": \"dapp-core-component__main__mt-n1\",\n  \"my-n1\": \"dapp-core-component__main__my-n1\",\n  \"myN1\": \"dapp-core-component__main__my-n1\",\n  \"mr-n1\": \"dapp-core-component__main__mr-n1\",\n  \"mrN1\": \"dapp-core-component__main__mr-n1\",\n  \"mx-n1\": \"dapp-core-component__main__mx-n1\",\n  \"mxN1\": \"dapp-core-component__main__mx-n1\",\n  \"mb-n1\": \"dapp-core-component__main__mb-n1\",\n  \"mbN1\": \"dapp-core-component__main__mb-n1\",\n  \"ml-n1\": \"dapp-core-component__main__ml-n1\",\n  \"mlN1\": \"dapp-core-component__main__ml-n1\",\n  \"m-n2\": \"dapp-core-component__main__m-n2\",\n  \"mN2\": \"dapp-core-component__main__m-n2\",\n  \"mt-n2\": \"dapp-core-component__main__mt-n2\",\n  \"mtN2\": \"dapp-core-component__main__mt-n2\",\n  \"my-n2\": \"dapp-core-component__main__my-n2\",\n  \"myN2\": \"dapp-core-component__main__my-n2\",\n  \"mr-n2\": \"dapp-core-component__main__mr-n2\",\n  \"mrN2\": \"dapp-core-component__main__mr-n2\",\n  \"mx-n2\": \"dapp-core-component__main__mx-n2\",\n  \"mxN2\": \"dapp-core-component__main__mx-n2\",\n  \"mb-n2\": \"dapp-core-component__main__mb-n2\",\n  \"mbN2\": \"dapp-core-component__main__mb-n2\",\n  \"ml-n2\": \"dapp-core-component__main__ml-n2\",\n  \"mlN2\": \"dapp-core-component__main__ml-n2\",\n  \"m-n3\": \"dapp-core-component__main__m-n3\",\n  \"mN3\": \"dapp-core-component__main__m-n3\",\n  \"mt-n3\": \"dapp-core-component__main__mt-n3\",\n  \"mtN3\": \"dapp-core-component__main__mt-n3\",\n  \"my-n3\": \"dapp-core-component__main__my-n3\",\n  \"myN3\": \"dapp-core-component__main__my-n3\",\n  \"mr-n3\": \"dapp-core-component__main__mr-n3\",\n  \"mrN3\": \"dapp-core-component__main__mr-n3\",\n  \"mx-n3\": \"dapp-core-component__main__mx-n3\",\n  \"mxN3\": \"dapp-core-component__main__mx-n3\",\n  \"mb-n3\": \"dapp-core-component__main__mb-n3\",\n  \"mbN3\": \"dapp-core-component__main__mb-n3\",\n  \"ml-n3\": \"dapp-core-component__main__ml-n3\",\n  \"mlN3\": \"dapp-core-component__main__ml-n3\",\n  \"m-n4\": \"dapp-core-component__main__m-n4\",\n  \"mN4\": \"dapp-core-component__main__m-n4\",\n  \"mt-n4\": \"dapp-core-component__main__mt-n4\",\n  \"mtN4\": \"dapp-core-component__main__mt-n4\",\n  \"my-n4\": \"dapp-core-component__main__my-n4\",\n  \"myN4\": \"dapp-core-component__main__my-n4\",\n  \"mr-n4\": \"dapp-core-component__main__mr-n4\",\n  \"mrN4\": \"dapp-core-component__main__mr-n4\",\n  \"mx-n4\": \"dapp-core-component__main__mx-n4\",\n  \"mxN4\": \"dapp-core-component__main__mx-n4\",\n  \"mb-n4\": \"dapp-core-component__main__mb-n4\",\n  \"mbN4\": \"dapp-core-component__main__mb-n4\",\n  \"ml-n4\": \"dapp-core-component__main__ml-n4\",\n  \"mlN4\": \"dapp-core-component__main__ml-n4\",\n  \"m-n5\": \"dapp-core-component__main__m-n5\",\n  \"mN5\": \"dapp-core-component__main__m-n5\",\n  \"mt-n5\": \"dapp-core-component__main__mt-n5\",\n  \"mtN5\": \"dapp-core-component__main__mt-n5\",\n  \"my-n5\": \"dapp-core-component__main__my-n5\",\n  \"myN5\": \"dapp-core-component__main__my-n5\",\n  \"mr-n5\": \"dapp-core-component__main__mr-n5\",\n  \"mrN5\": \"dapp-core-component__main__mr-n5\",\n  \"mx-n5\": \"dapp-core-component__main__mx-n5\",\n  \"mxN5\": \"dapp-core-component__main__mx-n5\",\n  \"mb-n5\": \"dapp-core-component__main__mb-n5\",\n  \"mbN5\": \"dapp-core-component__main__mb-n5\",\n  \"ml-n5\": \"dapp-core-component__main__ml-n5\",\n  \"mlN5\": \"dapp-core-component__main__ml-n5\",\n  \"m-auto\": \"dapp-core-component__main__m-auto\",\n  \"mAuto\": \"dapp-core-component__main__m-auto\",\n  \"mt-auto\": \"dapp-core-component__main__mt-auto\",\n  \"mtAuto\": \"dapp-core-component__main__mt-auto\",\n  \"my-auto\": \"dapp-core-component__main__my-auto\",\n  \"myAuto\": \"dapp-core-component__main__my-auto\",\n  \"mr-auto\": \"dapp-core-component__main__mr-auto\",\n  \"mrAuto\": \"dapp-core-component__main__mr-auto\",\n  \"mb-auto\": \"dapp-core-component__main__mb-auto\",\n  \"mbAuto\": \"dapp-core-component__main__mb-auto\",\n  \"ml-auto\": \"dapp-core-component__main__ml-auto\",\n  \"mlAuto\": \"dapp-core-component__main__ml-auto\",\n  \"mr-lg-1\": \"dapp-core-component__main__mr-lg-1\",\n  \"mrLg1\": \"dapp-core-component__main__mr-lg-1\",\n  \"mr-lg-4\": \"dapp-core-component__main__mr-lg-4\",\n  \"mrLg4\": \"dapp-core-component__main__mr-lg-4\",\n  \"mx-lg-4\": \"dapp-core-component__main__mx-lg-4\",\n  \"mxLg4\": \"dapp-core-component__main__mx-lg-4\",\n  \"mb-xl-2\": \"dapp-core-component__main__mb-xl-2\",\n  \"mbXl2\": \"dapp-core-component__main__mb-xl-2\",\n  \"pr-sm-2\": \"dapp-core-component__main__pr-sm-2\",\n  \"prSm2\": \"dapp-core-component__main__pr-sm-2\",\n  \"px-sm-2\": \"dapp-core-component__main__px-sm-2\",\n  \"pxSm2\": \"dapp-core-component__main__px-sm-2\",\n  \"pr-xl-0\": \"dapp-core-component__main__pr-xl-0\",\n  \"prXl0\": \"dapp-core-component__main__pr-xl-0\",\n  \"px-xl-0\": \"dapp-core-component__main__px-xl-0\",\n  \"pxXl0\": \"dapp-core-component__main__px-xl-0\",\n  \"col\": \"dapp-core-component__main__col\",\n  \"row\": \"dapp-core-component__main__row\",\n  \"col-xl\": \"dapp-core-component__main__col-xl\",\n  \"colXl\": \"dapp-core-component__main__col-xl\",\n  \"col-xl-auto\": \"dapp-core-component__main__col-xl-auto\",\n  \"colXlAuto\": \"dapp-core-component__main__col-xl-auto\",\n  \"col-xl-12\": \"dapp-core-component__main__col-xl-12\",\n  \"colXl12\": \"dapp-core-component__main__col-xl-12\",\n  \"col-xl-11\": \"dapp-core-component__main__col-xl-11\",\n  \"colXl11\": \"dapp-core-component__main__col-xl-11\",\n  \"col-xl-10\": \"dapp-core-component__main__col-xl-10\",\n  \"colXl10\": \"dapp-core-component__main__col-xl-10\",\n  \"col-xl-9\": \"dapp-core-component__main__col-xl-9\",\n  \"colXl9\": \"dapp-core-component__main__col-xl-9\",\n  \"col-xl-8\": \"dapp-core-component__main__col-xl-8\",\n  \"colXl8\": \"dapp-core-component__main__col-xl-8\",\n  \"col-xl-7\": \"dapp-core-component__main__col-xl-7\",\n  \"colXl7\": \"dapp-core-component__main__col-xl-7\",\n  \"col-xl-6\": \"dapp-core-component__main__col-xl-6\",\n  \"colXl6\": \"dapp-core-component__main__col-xl-6\",\n  \"col-xl-5\": \"dapp-core-component__main__col-xl-5\",\n  \"colXl5\": \"dapp-core-component__main__col-xl-5\",\n  \"col-xl-4\": \"dapp-core-component__main__col-xl-4\",\n  \"colXl4\": \"dapp-core-component__main__col-xl-4\",\n  \"col-xl-3\": \"dapp-core-component__main__col-xl-3\",\n  \"colXl3\": \"dapp-core-component__main__col-xl-3\",\n  \"col-xl-2\": \"dapp-core-component__main__col-xl-2\",\n  \"colXl2\": \"dapp-core-component__main__col-xl-2\",\n  \"col-xl-1\": \"dapp-core-component__main__col-xl-1\",\n  \"colXl1\": \"dapp-core-component__main__col-xl-1\",\n  \"col-lg\": \"dapp-core-component__main__col-lg\",\n  \"colLg\": \"dapp-core-component__main__col-lg\",\n  \"col-lg-auto\": \"dapp-core-component__main__col-lg-auto\",\n  \"colLgAuto\": \"dapp-core-component__main__col-lg-auto\",\n  \"col-lg-12\": \"dapp-core-component__main__col-lg-12\",\n  \"colLg12\": \"dapp-core-component__main__col-lg-12\",\n  \"col-lg-11\": \"dapp-core-component__main__col-lg-11\",\n  \"colLg11\": \"dapp-core-component__main__col-lg-11\",\n  \"col-lg-10\": \"dapp-core-component__main__col-lg-10\",\n  \"colLg10\": \"dapp-core-component__main__col-lg-10\",\n  \"col-lg-9\": \"dapp-core-component__main__col-lg-9\",\n  \"colLg9\": \"dapp-core-component__main__col-lg-9\",\n  \"col-lg-8\": \"dapp-core-component__main__col-lg-8\",\n  \"colLg8\": \"dapp-core-component__main__col-lg-8\",\n  \"col-lg-7\": \"dapp-core-component__main__col-lg-7\",\n  \"colLg7\": \"dapp-core-component__main__col-lg-7\",\n  \"col-lg-6\": \"dapp-core-component__main__col-lg-6\",\n  \"colLg6\": \"dapp-core-component__main__col-lg-6\",\n  \"col-lg-5\": \"dapp-core-component__main__col-lg-5\",\n  \"colLg5\": \"dapp-core-component__main__col-lg-5\",\n  \"col-lg-4\": \"dapp-core-component__main__col-lg-4\",\n  \"colLg4\": \"dapp-core-component__main__col-lg-4\",\n  \"col-lg-3\": \"dapp-core-component__main__col-lg-3\",\n  \"colLg3\": \"dapp-core-component__main__col-lg-3\",\n  \"col-lg-2\": \"dapp-core-component__main__col-lg-2\",\n  \"colLg2\": \"dapp-core-component__main__col-lg-2\",\n  \"col-lg-1\": \"dapp-core-component__main__col-lg-1\",\n  \"colLg1\": \"dapp-core-component__main__col-lg-1\",\n  \"col-md\": \"dapp-core-component__main__col-md\",\n  \"colMd\": \"dapp-core-component__main__col-md\",\n  \"col-md-auto\": \"dapp-core-component__main__col-md-auto\",\n  \"colMdAuto\": \"dapp-core-component__main__col-md-auto\",\n  \"col-md-12\": \"dapp-core-component__main__col-md-12\",\n  \"colMd12\": \"dapp-core-component__main__col-md-12\",\n  \"col-md-11\": \"dapp-core-component__main__col-md-11\",\n  \"colMd11\": \"dapp-core-component__main__col-md-11\",\n  \"col-md-10\": \"dapp-core-component__main__col-md-10\",\n  \"colMd10\": \"dapp-core-component__main__col-md-10\",\n  \"col-md-9\": \"dapp-core-component__main__col-md-9\",\n  \"colMd9\": \"dapp-core-component__main__col-md-9\",\n  \"col-md-8\": \"dapp-core-component__main__col-md-8\",\n  \"colMd8\": \"dapp-core-component__main__col-md-8\",\n  \"col-md-7\": \"dapp-core-component__main__col-md-7\",\n  \"colMd7\": \"dapp-core-component__main__col-md-7\",\n  \"col-md-6\": \"dapp-core-component__main__col-md-6\",\n  \"colMd6\": \"dapp-core-component__main__col-md-6\",\n  \"col-md-5\": \"dapp-core-component__main__col-md-5\",\n  \"colMd5\": \"dapp-core-component__main__col-md-5\",\n  \"col-md-4\": \"dapp-core-component__main__col-md-4\",\n  \"colMd4\": \"dapp-core-component__main__col-md-4\",\n  \"col-md-3\": \"dapp-core-component__main__col-md-3\",\n  \"colMd3\": \"dapp-core-component__main__col-md-3\",\n  \"col-md-2\": \"dapp-core-component__main__col-md-2\",\n  \"colMd2\": \"dapp-core-component__main__col-md-2\",\n  \"col-md-1\": \"dapp-core-component__main__col-md-1\",\n  \"colMd1\": \"dapp-core-component__main__col-md-1\",\n  \"col-sm\": \"dapp-core-component__main__col-sm\",\n  \"colSm\": \"dapp-core-component__main__col-sm\",\n  \"col-sm-auto\": \"dapp-core-component__main__col-sm-auto\",\n  \"colSmAuto\": \"dapp-core-component__main__col-sm-auto\",\n  \"col-sm-12\": \"dapp-core-component__main__col-sm-12\",\n  \"colSm12\": \"dapp-core-component__main__col-sm-12\",\n  \"col-sm-11\": \"dapp-core-component__main__col-sm-11\",\n  \"colSm11\": \"dapp-core-component__main__col-sm-11\",\n  \"col-sm-10\": \"dapp-core-component__main__col-sm-10\",\n  \"colSm10\": \"dapp-core-component__main__col-sm-10\",\n  \"col-sm-9\": \"dapp-core-component__main__col-sm-9\",\n  \"colSm9\": \"dapp-core-component__main__col-sm-9\",\n  \"col-sm-8\": \"dapp-core-component__main__col-sm-8\",\n  \"colSm8\": \"dapp-core-component__main__col-sm-8\",\n  \"col-sm-7\": \"dapp-core-component__main__col-sm-7\",\n  \"colSm7\": \"dapp-core-component__main__col-sm-7\",\n  \"col-sm-6\": \"dapp-core-component__main__col-sm-6\",\n  \"colSm6\": \"dapp-core-component__main__col-sm-6\",\n  \"col-sm-5\": \"dapp-core-component__main__col-sm-5\",\n  \"colSm5\": \"dapp-core-component__main__col-sm-5\",\n  \"col-sm-4\": \"dapp-core-component__main__col-sm-4\",\n  \"colSm4\": \"dapp-core-component__main__col-sm-4\",\n  \"col-sm-3\": \"dapp-core-component__main__col-sm-3\",\n  \"colSm3\": \"dapp-core-component__main__col-sm-3\",\n  \"col-sm-2\": \"dapp-core-component__main__col-sm-2\",\n  \"colSm2\": \"dapp-core-component__main__col-sm-2\",\n  \"col-sm-1\": \"dapp-core-component__main__col-sm-1\",\n  \"colSm1\": \"dapp-core-component__main__col-sm-1\",\n  \"col-auto\": \"dapp-core-component__main__col-auto\",\n  \"colAuto\": \"dapp-core-component__main__col-auto\",\n  \"col-12\": \"dapp-core-component__main__col-12\",\n  \"col12\": \"dapp-core-component__main__col-12\",\n  \"col-11\": \"dapp-core-component__main__col-11\",\n  \"col11\": \"dapp-core-component__main__col-11\",\n  \"col-10\": \"dapp-core-component__main__col-10\",\n  \"col10\": \"dapp-core-component__main__col-10\",\n  \"col-9\": \"dapp-core-component__main__col-9\",\n  \"col9\": \"dapp-core-component__main__col-9\",\n  \"col-8\": \"dapp-core-component__main__col-8\",\n  \"col8\": \"dapp-core-component__main__col-8\",\n  \"col-7\": \"dapp-core-component__main__col-7\",\n  \"col7\": \"dapp-core-component__main__col-7\",\n  \"col-6\": \"dapp-core-component__main__col-6\",\n  \"col6\": \"dapp-core-component__main__col-6\",\n  \"col-5\": \"dapp-core-component__main__col-5\",\n  \"col5\": \"dapp-core-component__main__col-5\",\n  \"col-4\": \"dapp-core-component__main__col-4\",\n  \"col4\": \"dapp-core-component__main__col-4\",\n  \"col-3\": \"dapp-core-component__main__col-3\",\n  \"col3\": \"dapp-core-component__main__col-3\",\n  \"col-2\": \"dapp-core-component__main__col-2\",\n  \"col2\": \"dapp-core-component__main__col-2\",\n  \"col-1\": \"dapp-core-component__main__col-1\",\n  \"col1\": \"dapp-core-component__main__col-1\",\n  \"flex-row\": \"dapp-core-component__main__flex-row\",\n  \"flexRow\": \"dapp-core-component__main__flex-row\",\n  \"flex-column\": \"dapp-core-component__main__flex-column\",\n  \"flexColumn\": \"dapp-core-component__main__flex-column\",\n  \"flex-row-reverse\": \"dapp-core-component__main__flex-row-reverse\",\n  \"flexRowReverse\": \"dapp-core-component__main__flex-row-reverse\",\n  \"flex-column-reverse\": \"dapp-core-component__main__flex-column-reverse\",\n  \"flexColumnReverse\": \"dapp-core-component__main__flex-column-reverse\",\n  \"flex-wrap\": \"dapp-core-component__main__flex-wrap\",\n  \"flexWrap\": \"dapp-core-component__main__flex-wrap\",\n  \"flex-nowrap\": \"dapp-core-component__main__flex-nowrap\",\n  \"flexNowrap\": \"dapp-core-component__main__flex-nowrap\",\n  \"flex-wrap-reverse\": \"dapp-core-component__main__flex-wrap-reverse\",\n  \"flexWrapReverse\": \"dapp-core-component__main__flex-wrap-reverse\",\n  \"flex-fill\": \"dapp-core-component__main__flex-fill\",\n  \"flexFill\": \"dapp-core-component__main__flex-fill\",\n  \"flex-grow-0\": \"dapp-core-component__main__flex-grow-0\",\n  \"flexGrow0\": \"dapp-core-component__main__flex-grow-0\",\n  \"flex-grow-1\": \"dapp-core-component__main__flex-grow-1\",\n  \"flexGrow1\": \"dapp-core-component__main__flex-grow-1\",\n  \"flex-shrink-0\": \"dapp-core-component__main__flex-shrink-0\",\n  \"flexShrink0\": \"dapp-core-component__main__flex-shrink-0\",\n  \"flex-shrink-1\": \"dapp-core-component__main__flex-shrink-1\",\n  \"flexShrink1\": \"dapp-core-component__main__flex-shrink-1\",\n  \"justify-content-start\": \"dapp-core-component__main__justify-content-start\",\n  \"justifyContentStart\": \"dapp-core-component__main__justify-content-start\",\n  \"justify-content-end\": \"dapp-core-component__main__justify-content-end\",\n  \"justifyContentEnd\": \"dapp-core-component__main__justify-content-end\",\n  \"justify-content-center\": \"dapp-core-component__main__justify-content-center\",\n  \"justifyContentCenter\": \"dapp-core-component__main__justify-content-center\",\n  \"justify-content-between\": \"dapp-core-component__main__justify-content-between\",\n  \"justifyContentBetween\": \"dapp-core-component__main__justify-content-between\",\n  \"justify-content-around\": \"dapp-core-component__main__justify-content-around\",\n  \"justifyContentAround\": \"dapp-core-component__main__justify-content-around\",\n  \"align-items-start\": \"dapp-core-component__main__align-items-start\",\n  \"alignItemsStart\": \"dapp-core-component__main__align-items-start\",\n  \"align-items-end\": \"dapp-core-component__main__align-items-end\",\n  \"alignItemsEnd\": \"dapp-core-component__main__align-items-end\",\n  \"align-items-center\": \"dapp-core-component__main__align-items-center\",\n  \"alignItemsCenter\": \"dapp-core-component__main__align-items-center\",\n  \"align-items-baseline\": \"dapp-core-component__main__align-items-baseline\",\n  \"alignItemsBaseline\": \"dapp-core-component__main__align-items-baseline\",\n  \"align-items-stretch\": \"dapp-core-component__main__align-items-stretch\",\n  \"alignItemsStretch\": \"dapp-core-component__main__align-items-stretch\",\n  \"align-content-start\": \"dapp-core-component__main__align-content-start\",\n  \"alignContentStart\": \"dapp-core-component__main__align-content-start\",\n  \"align-content-end\": \"dapp-core-component__main__align-content-end\",\n  \"alignContentEnd\": \"dapp-core-component__main__align-content-end\",\n  \"align-content-center\": \"dapp-core-component__main__align-content-center\",\n  \"alignContentCenter\": \"dapp-core-component__main__align-content-center\",\n  \"align-content-between\": \"dapp-core-component__main__align-content-between\",\n  \"alignContentBetween\": \"dapp-core-component__main__align-content-between\",\n  \"align-content-around\": \"dapp-core-component__main__align-content-around\",\n  \"alignContentAround\": \"dapp-core-component__main__align-content-around\",\n  \"align-content-stretch\": \"dapp-core-component__main__align-content-stretch\",\n  \"alignContentStretch\": \"dapp-core-component__main__align-content-stretch\",\n  \"align-self-auto\": \"dapp-core-component__main__align-self-auto\",\n  \"alignSelfAuto\": \"dapp-core-component__main__align-self-auto\",\n  \"align-self-start\": \"dapp-core-component__main__align-self-start\",\n  \"alignSelfStart\": \"dapp-core-component__main__align-self-start\",\n  \"align-self-end\": \"dapp-core-component__main__align-self-end\",\n  \"alignSelfEnd\": \"dapp-core-component__main__align-self-end\",\n  \"align-self-center\": \"dapp-core-component__main__align-self-center\",\n  \"alignSelfCenter\": \"dapp-core-component__main__align-self-center\",\n  \"align-self-baseline\": \"dapp-core-component__main__align-self-baseline\",\n  \"alignSelfBaseline\": \"dapp-core-component__main__align-self-baseline\",\n  \"align-self-stretch\": \"dapp-core-component__main__align-self-stretch\",\n  \"alignSelfStretch\": \"dapp-core-component__main__align-self-stretch\",\n  \"flex-sm-row\": \"dapp-core-component__main__flex-sm-row\",\n  \"flexSmRow\": \"dapp-core-component__main__flex-sm-row\",\n  \"flex-lg-row\": \"dapp-core-component__main__flex-lg-row\",\n  \"flexLgRow\": \"dapp-core-component__main__flex-lg-row\",\n  \"flex-lg-wrap\": \"dapp-core-component__main__flex-lg-wrap\",\n  \"flexLgWrap\": \"dapp-core-component__main__flex-lg-wrap\",\n  \"form-check\": \"dapp-core-component__main__form-check\",\n  \"formCheck\": \"dapp-core-component__main__form-check\",\n  \"form-check-label\": \"dapp-core-component__main__form-check-label\",\n  \"formCheckLabel\": \"dapp-core-component__main__form-check-label\",\n  \"form-check-input\": \"dapp-core-component__main__form-check-input\",\n  \"formCheckInput\": \"dapp-core-component__main__form-check-input\",\n  \"form-group\": \"dapp-core-component__main__form-group\",\n  \"formGroup\": \"dapp-core-component__main__form-group\",\n  \"form-control\": \"dapp-core-component__main__form-control\",\n  \"formControl\": \"dapp-core-component__main__form-control\",\n  \"form-label\": \"dapp-core-component__main__form-label\",\n  \"formLabel\": \"dapp-core-component__main__form-label\",\n  \"form-text\": \"dapp-core-component__main__form-text\",\n  \"formText\": \"dapp-core-component__main__form-text\",\n  \"border\": \"dapp-core-component__main__border\",\n  \"border-top\": \"dapp-core-component__main__border-top\",\n  \"borderTop\": \"dapp-core-component__main__border-top\",\n  \"border-right\": \"dapp-core-component__main__border-right\",\n  \"borderRight\": \"dapp-core-component__main__border-right\",\n  \"border-bottom\": \"dapp-core-component__main__border-bottom\",\n  \"borderBottom\": \"dapp-core-component__main__border-bottom\",\n  \"border-left\": \"dapp-core-component__main__border-left\",\n  \"borderLeft\": \"dapp-core-component__main__border-left\",\n  \"border-0\": \"dapp-core-component__main__border-0\",\n  \"border0\": \"dapp-core-component__main__border-0\",\n  \"border-top-0\": \"dapp-core-component__main__border-top-0\",\n  \"borderTop0\": \"dapp-core-component__main__border-top-0\",\n  \"border-right-0\": \"dapp-core-component__main__border-right-0\",\n  \"borderRight0\": \"dapp-core-component__main__border-right-0\",\n  \"border-bottom-0\": \"dapp-core-component__main__border-bottom-0\",\n  \"borderBottom0\": \"dapp-core-component__main__border-bottom-0\",\n  \"border-left-0\": \"dapp-core-component__main__border-left-0\",\n  \"borderLeft0\": \"dapp-core-component__main__border-left-0\",\n  \"rounded-sm\": \"dapp-core-component__main__rounded-sm\",\n  \"roundedSm\": \"dapp-core-component__main__rounded-sm\",\n  \"rounded\": \"dapp-core-component__main__rounded\",\n  \"rounded-top\": \"dapp-core-component__main__rounded-top\",\n  \"roundedTop\": \"dapp-core-component__main__rounded-top\",\n  \"rounded-right\": \"dapp-core-component__main__rounded-right\",\n  \"roundedRight\": \"dapp-core-component__main__rounded-right\",\n  \"rounded-bottom\": \"dapp-core-component__main__rounded-bottom\",\n  \"roundedBottom\": \"dapp-core-component__main__rounded-bottom\",\n  \"rounded-left\": \"dapp-core-component__main__rounded-left\",\n  \"roundedLeft\": \"dapp-core-component__main__rounded-left\",\n  \"rounded-lg\": \"dapp-core-component__main__rounded-lg\",\n  \"roundedLg\": \"dapp-core-component__main__rounded-lg\",\n  \"rounded-circle\": \"dapp-core-component__main__rounded-circle\",\n  \"roundedCircle\": \"dapp-core-component__main__rounded-circle\",\n  \"rounded-pill\": \"dapp-core-component__main__rounded-pill\",\n  \"roundedPill\": \"dapp-core-component__main__rounded-pill\",\n  \"rounded-0\": \"dapp-core-component__main__rounded-0\",\n  \"rounded0\": \"dapp-core-component__main__rounded-0\",\n  \"h1\": \"dapp-core-component__main__h1\",\n  \"h2\": \"dapp-core-component__main__h2\",\n  \"h3\": \"dapp-core-component__main__h3\",\n  \"h4\": \"dapp-core-component__main__h4\",\n  \"h5\": \"dapp-core-component__main__h5\",\n  \"lead\": \"dapp-core-component__main__lead\",\n  \"bg-primary\": \"dapp-core-component__main__bg-primary\",\n  \"bgPrimary\": \"dapp-core-component__main__bg-primary\",\n  \"bg-warning\": \"dapp-core-component__main__bg-warning\",\n  \"bgWarning\": \"dapp-core-component__main__bg-warning\",\n  \"warning\": \"dapp-core-component__main__warning\",\n  \"bg-danger\": \"dapp-core-component__main__bg-danger\",\n  \"bgDanger\": \"dapp-core-component__main__bg-danger\",\n  \"danger\": \"dapp-core-component__main__danger\",\n  \"bg-success\": \"dapp-core-component__main__bg-success\",\n  \"bgSuccess\": \"dapp-core-component__main__bg-success\",\n  \"success\": \"dapp-core-component__main__success\",\n  \"position-relative\": \"dapp-core-component__main__position-relative\",\n  \"positionRelative\": \"dapp-core-component__main__position-relative\",\n  \"position-absolute\": \"dapp-core-component__main__position-absolute\",\n  \"positionAbsolute\": \"dapp-core-component__main__position-absolute\",\n  \"w-25\": \"dapp-core-component__main__w-25\",\n  \"w25\": \"dapp-core-component__main__w-25\",\n  \"w-50\": \"dapp-core-component__main__w-50\",\n  \"w50\": \"dapp-core-component__main__w-50\",\n  \"w-75\": \"dapp-core-component__main__w-75\",\n  \"w75\": \"dapp-core-component__main__w-75\",\n  \"w-100\": \"dapp-core-component__main__w-100\",\n  \"w100\": \"dapp-core-component__main__w-100\",\n  \"w-auto\": \"dapp-core-component__main__w-auto\",\n  \"wAuto\": \"dapp-core-component__main__w-auto\",\n  \"h-25\": \"dapp-core-component__main__h-25\",\n  \"h25\": \"dapp-core-component__main__h-25\",\n  \"h-50\": \"dapp-core-component__main__h-50\",\n  \"h50\": \"dapp-core-component__main__h-50\",\n  \"h-75\": \"dapp-core-component__main__h-75\",\n  \"h75\": \"dapp-core-component__main__h-75\",\n  \"h-100\": \"dapp-core-component__main__h-100\",\n  \"h100\": \"dapp-core-component__main__h-100\",\n  \"h-auto\": \"dapp-core-component__main__h-auto\",\n  \"hAuto\": \"dapp-core-component__main__h-auto\",\n  \"mw-100\": \"dapp-core-component__main__mw-100\",\n  \"mw100\": \"dapp-core-component__main__mw-100\",\n  \"mh-100\": \"dapp-core-component__main__mh-100\",\n  \"mh100\": \"dapp-core-component__main__mh-100\",\n  \"min-vw-100\": \"dapp-core-component__main__min-vw-100\",\n  \"minVw100\": \"dapp-core-component__main__min-vw-100\",\n  \"min-vh-100\": \"dapp-core-component__main__min-vh-100\",\n  \"minVh100\": \"dapp-core-component__main__min-vh-100\",\n  \"vw-100\": \"dapp-core-component__main__vw-100\",\n  \"vw100\": \"dapp-core-component__main__vw-100\",\n  \"vh-100\": \"dapp-core-component__main__vh-100\",\n  \"vh100\": \"dapp-core-component__main__vh-100\",\n  \"w-md-auto\": \"dapp-core-component__main__w-md-auto\",\n  \"wMdAuto\": \"dapp-core-component__main__w-md-auto\",\n  \"locked-icon\": \"dapp-core-component__main__locked-icon\",\n  \"lockedIcon\": \"dapp-core-component__main__locked-icon\",\n  \"shadow-sm\": \"dapp-core-component__main__shadow-sm\",\n  \"shadowSm\": \"dapp-core-component__main__shadow-sm\",\n  \"shadow\": \"dapp-core-component__main__shadow\",\n  \"shadow-lg\": \"dapp-core-component__main__shadow-lg\",\n  \"shadowLg\": \"dapp-core-component__main__shadow-lg\",\n  \"shadow-none\": \"dapp-core-component__main__shadow-none\",\n  \"shadowNone\": \"dapp-core-component__main__shadow-none\",\n  \"d-none\": \"dapp-core-component__main__d-none\",\n  \"dNone\": \"dapp-core-component__main__d-none\",\n  \"d-inline\": \"dapp-core-component__main__d-inline\",\n  \"dInline\": \"dapp-core-component__main__d-inline\",\n  \"d-inline-block\": \"dapp-core-component__main__d-inline-block\",\n  \"dInlineBlock\": \"dapp-core-component__main__d-inline-block\",\n  \"d-block\": \"dapp-core-component__main__d-block\",\n  \"dBlock\": \"dapp-core-component__main__d-block\",\n  \"d-table\": \"dapp-core-component__main__d-table\",\n  \"dTable\": \"dapp-core-component__main__d-table\",\n  \"d-table-row\": \"dapp-core-component__main__d-table-row\",\n  \"dTableRow\": \"dapp-core-component__main__d-table-row\",\n  \"d-table-cell\": \"dapp-core-component__main__d-table-cell\",\n  \"dTableCell\": \"dapp-core-component__main__d-table-cell\",\n  \"d-flex\": \"dapp-core-component__main__d-flex\",\n  \"dFlex\": \"dapp-core-component__main__d-flex\",\n  \"d-inline-flex\": \"dapp-core-component__main__d-inline-flex\",\n  \"dInlineFlex\": \"dapp-core-component__main__d-inline-flex\",\n  \"d-sm-flex\": \"dapp-core-component__main__d-sm-flex\",\n  \"dSmFlex\": \"dapp-core-component__main__d-sm-flex\",\n  \"table-sm\": \"dapp-core-component__main__table-sm\",\n  \"tableSm\": \"dapp-core-component__main__table-sm\",\n  \"table-bordered\": \"dapp-core-component__main__table-bordered\",\n  \"tableBordered\": \"dapp-core-component__main__table-bordered\",\n  \"table-borderless\": \"dapp-core-component__main__table-borderless\",\n  \"tableBorderless\": \"dapp-core-component__main__table-borderless\",\n  \"table-striped\": \"dapp-core-component__main__table-striped\",\n  \"tableStriped\": \"dapp-core-component__main__table-striped\",\n  \"thead-dark\": \"dapp-core-component__main__thead-dark\",\n  \"theadDark\": \"dapp-core-component__main__thead-dark\",\n  \"thead-light\": \"dapp-core-component__main__thead-light\",\n  \"theadLight\": \"dapp-core-component__main__thead-light\",\n  \"table-dark\": \"dapp-core-component__main__table-dark\",\n  \"tableDark\": \"dapp-core-component__main__table-dark\",\n  \"table-hover\": \"dapp-core-component__main__table-hover\",\n  \"tableHover\": \"dapp-core-component__main__table-hover\",\n  \"table-responsive\": \"dapp-core-component__main__table-responsive\",\n  \"tableResponsive\": \"dapp-core-component__main__table-responsive\",\n  \"transaction-hash\": \"dapp-core-component__main__transaction-hash\",\n  \"transactionHash\": \"dapp-core-component__main__transaction-hash\",\n  \"font-weight-light\": \"dapp-core-component__main__font-weight-light\",\n  \"fontWeightLight\": \"dapp-core-component__main__font-weight-light\",\n  \"font-weight-lighter\": \"dapp-core-component__main__font-weight-lighter\",\n  \"fontWeightLighter\": \"dapp-core-component__main__font-weight-lighter\",\n  \"font-weight-normal\": \"dapp-core-component__main__font-weight-normal\",\n  \"fontWeightNormal\": \"dapp-core-component__main__font-weight-normal\",\n  \"font-weight-medium\": \"dapp-core-component__main__font-weight-medium\",\n  \"fontWeightMedium\": \"dapp-core-component__main__font-weight-medium\",\n  \"font-weight-bold\": \"dapp-core-component__main__font-weight-bold\",\n  \"fontWeightBold\": \"dapp-core-component__main__font-weight-bold\",\n  \"font-weight-bolder\": \"dapp-core-component__main__font-weight-bolder\",\n  \"fontWeightBolder\": \"dapp-core-component__main__font-weight-bolder\",\n  \"font-italic\": \"dapp-core-component__main__font-italic\",\n  \"fontItalic\": \"dapp-core-component__main__font-italic\",\n  \"icon-state\": \"dapp-core-component__main__icon-state\",\n  \"iconState\": \"dapp-core-component__main__icon-state\",\n  \"half\": \"dapp-core-component__main__half\",\n  \"side-icon\": \"dapp-core-component__main__side-icon\",\n  \"sideIcon\": \"dapp-core-component__main__side-icon\",\n  \"toast-messages\": \"dapp-core-component__main__toast-messages\",\n  \"toastMessages\": \"dapp-core-component__main__toast-messages\",\n  \"toast\": \"dapp-core-component__main__toast\",\n  \"clickable\": \"dapp-core-component__main__clickable\",\n  \"toast-visible\": \"dapp-core-component__main__toast-visible\",\n  \"toastVisible\": \"dapp-core-component__main__toast-visible\",\n  \"progress\": \"dapp-core-component__main__progress\",\n  \"progress-bar\": \"dapp-core-component__main__progress-bar\",\n  \"progressBar\": \"dapp-core-component__main__progress-bar\",\n  \"content-height\": \"dapp-core-component__main__content-height\",\n  \"contentHeight\": \"dapp-core-component__main__content-height\",\n  \"tx-description\": \"dapp-core-component__main__tx-description\",\n  \"txDescription\": \"dapp-core-component__main__tx-description\",\n  \"close\": \"dapp-core-component__main__close\",\n  \"data-field\": \"dapp-core-component__main__data-field\",\n  \"dataField\": \"dapp-core-component__main__data-field\",\n  \"textarea\": \"dapp-core-component__main__textarea\",\n  \"highlighted\": \"dapp-core-component__main__highlighted\",\n  \"sc-call\": \"dapp-core-component__main__sc-call\",\n  \"scCall\": \"dapp-core-component__main__sc-call\",\n  \"small-font\": \"dapp-core-component__main__small-font\",\n  \"smallFont\": \"dapp-core-component__main__small-font\",\n  \"progress-steps\": \"dapp-core-component__main__progress-steps\",\n  \"progressSteps\": \"dapp-core-component__main__progress-steps\",\n  \"steps\": \"dapp-core-component__main__steps\",\n  \"dot\": \"dapp-core-component__main__dot\",\n  \"side-link\": \"dapp-core-component__main__side-link\",\n  \"sideLink\": \"dapp-core-component__main__side-link\"\n};", "const css = `.dapp-core-component__dappModalStyles__dappModal {\n  position: fixed;\n  z-index: 999;\n  padding-top: 100px;\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: rgba(0, 0, 0, 0.4);\n  display: flex;\n  align-items: center;\n}\n\n.dapp-core-component__dappModalStyles__dappModalContent {\n  background: #fff;\n  border: 2px solid #aaa;\n  border-radius: 5px;\n  z-index: 999;\n  max-width: 500px;\n  margin: auto;\n  padding: 0;\n  position: relative;\n  width: 100%;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.dapp-core-component__dappModalStyles__dappModalHeader {\n  padding: 2px 16px;\n  background-color: #fff;\n  font-size: 1.25rem;\n}\n\n.dapp-core-component__dappModalStyles__dappModalHeaderText {\n  padding: 0 1rem;\n}\n\n.dapp-core-component__dappModalStyles__dappModalBody {\n  padding: 16px 0;\n}\n\n.dapp-core-component__dappModalStyles__dappModalFooter {\n  background-color: #fff;\n  padding: 1rem 0.5rem;\n}\n\n.dapp-core-component__dappModalStyles__dappModalCloseButton {\n  position: absolute;\n  top: 0;\n  right: 0;\n  float: right;\n  font-weight: bold;\n  border-radius: 5px;\n  font-size: 1rem;\n  padding: 0.5rem 1rem;\n  border: 0;\n}\n\n.dapp-core-component__dappModalStyles__dappModalCloseButton:hover,\n.dapp-core-component__dappModalStyles__dappModalCloseButton:focus {\n  text-decoration: none;\n  cursor: pointer;\n  color: #212529;\n  background-color: #dee2e6;\n  border-color: #e9ecef;\n}`;\ndocument.head\n    .appendChild(document.createElement(\"style\"))\n    .appendChild(document.createTextNode(css));\nexport {css};\nexport default {\n  \"dappModal\": \"dapp-core-component__dappModalStyles__dappModal\",\n  \"dappModalContent\": \"dapp-core-component__dappModalStyles__dappModalContent\",\n  \"dappModalHeader\": \"dapp-core-component__dappModalStyles__dappModalHeader\",\n  \"dappModalHeaderText\": \"dapp-core-component__dappModalStyles__dappModalHeaderText\",\n  \"dappModalBody\": \"dapp-core-component__dappModalStyles__dappModalBody\",\n  \"dappModalFooter\": \"dapp-core-component__dappModalStyles__dappModalFooter\",\n  \"dappModalCloseButton\": \"dapp-core-component__dappModalStyles__dappModalCloseButton\"\n};", "const css = `.dapp-core-component__transactionStatusToastStyles__transactions-status-toast {\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n  z-index: 9999;\n}\n\n.dapp-core-component__transactionStatusToastStyles__transactions-status-toast-content {\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n  justify-content: left;\n  align-items: center;\n  padding-left: 0.5rem;\n  padding-right: 0.75rem;\n}\n\n.dapp-core-component__transactionStatusToastStyles__transactions-status-toast-icon {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  width: 4.5rem;\n  height: 4.5rem;\n  border-radius: 50%;\n}\n.dapp-core-component__transactionStatusToastStyles__transactions-status-toast-icon .dapp-core-component__transactionStatusToastStyles__svg {\n  height: auto;\n  width: 40px;\n}\n.dapp-core-component__transactionStatusToastStyles__transactions-status-toast-icon .dapp-core-component__transactionStatusToastStyles__svg path {\n  fill: #fff;\n}\n\n.dapp-core-component__transactionStatusToastStyles__toasts {\n  position: fixed;\n  bottom: 1rem;\n  left: 1rem;\n  right: 1rem;\n  z-index: 9999;\n  font-family: \"Helvetica\", sans-serif;\n}\n.dapp-core-component__transactionStatusToastStyles__toasts.dapp-core-component__transactionStatusToastStyles__toastWrapper {\n  border-radius: 0.25rem;\n  box-shadow: 0 0.25rem 0.75rem rgba(0, 0, 0, 0.1);\n  margin-bottom: 0.7rem;\n  padding: 0.5rem;\n  background-color: #fff;\n  position: relative;\n}\n@media (min-width: 768px) {\n  .dapp-core-component__transactionStatusToastStyles__toasts {\n    right: 2rem;\n    bottom: 2rem;\n    width: 22.5rem;\n    left: auto;\n  }\n}`;\ndocument.head\n    .appendChild(document.createElement(\"style\"))\n    .appendChild(document.createTextNode(css));\nexport {css};\nexport default {\n  \"transactions-status-toast\": \"dapp-core-component__transactionStatusToastStyles__transactions-status-toast\",\n  \"transactionsStatusToast\": \"dapp-core-component__transactionStatusToastStyles__transactions-status-toast\",\n  \"transactions-status-toast-content\": \"dapp-core-component__transactionStatusToastStyles__transactions-status-toast-content\",\n  \"transactionsStatusToastContent\": \"dapp-core-component__transactionStatusToastStyles__transactions-status-toast-content\",\n  \"transactions-status-toast-icon\": \"dapp-core-component__transactionStatusToastStyles__transactions-status-toast-icon\",\n  \"transactionsStatusToastIcon\": \"dapp-core-component__transactionStatusToastStyles__transactions-status-toast-icon\",\n  \"svg\": \"dapp-core-component__transactionStatusToastStyles__svg\",\n  \"toasts\": \"dapp-core-component__transactionStatusToastStyles__toasts\",\n  \"toastWrapper\": \"dapp-core-component__transactionStatusToastStyles__toastWrapper\"\n};", "const css = `.dapp-core-component__pageState-styles__wrapper {\n  color: inherit;\n}\n\n.dapp-core-component__pageState-styles__state {\n  color: inherit;\n}`;\ndocument.head\n    .appendChild(document.createElement(\"style\"))\n    .appendChild(document.createTextNode(css));\nexport {css};\nexport default {\n  \"wrapper\": \"dapp-core-component__pageState-styles__wrapper\",\n  \"state\": \"dapp-core-component__pageState-styles__state\"\n};", "const css = `.dapp-core-component__signWaitingScreenModal-styles__extension-modal {\n  color: inherit;\n}\n\n.dapp-core-component__signWaitingScreenModal-styles__modal-container {\n  color: inherit;\n}\n\n.dapp-core-component__signWaitingScreenModal-styles__extension {\n  color: inherit;\n}`;\ndocument.head\n    .appendChild(document.createElement(\"style\"))\n    .appendChild(document.createTextNode(css));\nexport {css};\nexport default {\n  \"extension-modal\": \"dapp-core-component__signWaitingScreenModal-styles__extension-modal\",\n  \"extensionModal\": \"dapp-core-component__signWaitingScreenModal-styles__extension-modal\",\n  \"modal-container\": \"dapp-core-component__signWaitingScreenModal-styles__modal-container\",\n  \"modalContainer\": \"dapp-core-component__signWaitingScreenModal-styles__modal-container\",\n  \"extension\": \"dapp-core-component__signWaitingScreenModal-styles__extension\"\n};", "export * from './SignWithCrossWindowWalletModal';\n", "import React from 'react';\n\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport { networkSelector } from 'reduxStore/selectors';\nimport { SignModalPropsType } from 'types';\nimport {\n  SignWaitingScreenModal,\n  SignWaitingScreenModalPropsType\n} from '../components';\n\nexport const SignWithCrossWindowWalletModal = (props: SignModalPropsType) => {\n  const { walletAddress } = useSelector(networkSelector);\n\n  const description = props.error\n    ? props.error\n    : props.transactions?.length > 1\n    ? 'Check your MultiversX Wallet to sign the transactions'\n    : 'Check your MultiversX Wallet to sign the transaction';\n\n  const waitingScreenProps: SignWaitingScreenModalPropsType = {\n    ...props,\n    description,\n    title: `Confirm on ${walletAddress}`\n  };\n\n  return <SignWaitingScreenModal {...waitingScreenProps} />;\n};\n", "import { createContext } from 'react';\nimport {\n  createDispatchHook,\n  createSelectorHook,\n  createStoreHook,\n  ReactReduxContextValue\n} from 'react-redux';\nimport { store, subscription } from './store';\n\nconst defaultContextValue: ReactReduxContextValue = {\n  store,\n  subscription\n};\n\nexport const DappCoreContext = createContext(defaultContextValue);\n\nexport const useStore = createStoreHook(DappCoreContext);\nexport const useDispatch = createDispatchHook(DappCoreContext);\nexport const useSelector = createSelectorHook(DappCoreContext);\n", "import { configureStore } from '@reduxjs/toolkit';\nimport { createSubscription } from 'react-redux/lib/utils/Subscription';\nimport { setAccount, setAccountNonce } from 'reduxStore/slices';\nimport { loginSessionMiddleware } from './middlewares/loginSessionMiddleware';\nimport { persistIgnoredActions, persistStore, reducers } from './persistConfig';\nimport rootReducer from './reducers';\n\nexport const store = configureStore({\n  reducer: reducers,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [\n          ...persistIgnoredActions,\n          setAccountNonce.type,\n          setAccount.type\n        ],\n        ignoredPaths: [\n          'payload.nonce',\n          // TODO: check regex for: account.accounts[erd1regex].nonce\n          'account.account.nonce',\n          'providers.accountProvider'\n        ]\n      }\n    }).concat(loginSessionMiddleware)\n});\n\nexport const subscription = createSubscription(store);\n\nexport const persistor = persistStore(store);\n\n// Used only to infer the store type\nconst fakeStore = configureStore({ reducer: rootReducer });\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type StoreType = typeof fakeStore;\nexport type RootState = ReturnType<ReturnType<typeof fakeStore.getState>>;\nexport type AppDispatch = typeof store.dispatch;\n", "import { PayloadAction } from '@reduxjs/toolkit';\nimport throttle from 'lodash.throttle';\nimport { LOGOUT_ACTION_NAME } from 'constants/index';\nimport { invalidateLoginSession } from 'reduxStore/slices';\nimport { RootState } from 'reduxStore/store';\nimport { getNewLoginExpiresTimestamp, setLoginExpiresAt } from 'storage/local';\nimport { storage } from 'utils/storage';\nimport { localStorageKeys } from 'utils/storage/local';\n\nconst whitelistedActions = [LOGOUT_ACTION_NAME];\nlet invalidatedSession = false;\n\nconst throttledSetNewExpires = throttle(() => {\n  setLoginExpiresAt(getNewLoginExpiresTimestamp());\n}, 5000);\n\nexport const loginSessionMiddleware: any =\n  (store: any) =>\n  (next: (action: PayloadAction) => void) =>\n  (action: PayloadAction) => {\n    if (whitelistedActions.includes(action.type)) {\n      return next(action);\n    }\n\n    const appState: RootState = store.getState();\n    const loginTimestamp = storage.local.getItem(\n      localStorageKeys.loginExpiresAt\n    );\n\n    const isLoggedIn = Boolean(appState?.account.address);\n\n    if (!isLoggedIn) {\n      return next(action);\n    }\n\n    if (loginTimestamp == null) {\n      return setLoginExpiresAt(getNewLoginExpiresTimestamp());\n    }\n\n    // create a unique key for this account and it's allowed session\n    const now = Date.now();\n    const isExpired = loginTimestamp - now < 0;\n\n    if (isExpired && !invalidatedSession) {\n      setTimeout(() => {\n        invalidatedSession = true;\n        store.dispatch(invalidateLoginSession());\n      }, 1000);\n    } else {\n      if (invalidatedSession) {\n        invalidatedSession = false;\n      }\n\n      throttledSetNewExpires();\n    }\n\n    return next(action);\n  };\n", "import { isWebEnvironment } from 'utils/environment/isWebEnvironment';\n\n//this will make sure that when importing store in the app,\n// in non-browser or mobile envs there will be no warnings/errors caused by redux-persist\n\nexport const reducers = isWebEnvironment()\n  ? require('./persistedRootReducer').default\n  : require('./rootReducer').default;\n\nexport const persistIgnoredActions = isWebEnvironment()\n  ? require('./reduxPersistIgnoredActions').default\n  : [];\n\nexport const persistStore = isWebEnvironment()\n  ? require('./persistReduxStore').default\n  : (store: any) => store;\n", "export function isWebEnvironment() {\n  return typeof sessionStorage !== 'undefined';\n}\n", "export * from './accountInfoSelectors';\nexport * from './dappConfigSelector';\nexport * from './loginInfoSelectors';\nexport * from './modalsSelectors';\nexport * from './networkConfigSelectors';\nexport * from './signedMessageInfoSelectors';\nexport * from './toastsSelectors';\nexport * from './transactionsInfoSelectors';\nexport * from './transactionsSelectors';\n", "import { emptyAccount } from 'reduxStore/slices';\nimport { RootState } from 'reduxStore/store';\nimport { createDeepEqualSelector } from './helpers';\n\nconst privateAccountInfoSelector = (state: RootState) => state.account;\n\nexport const addressSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.address\n);\n\nexport const accountSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  addressSelector,\n  (state, address) =>\n    address in state.accounts ? state.accounts[address] : emptyAccount\n);\n\n// accounts object will not be public\nexport const accountInfoSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  accountSelector,\n  (state, account) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { accounts, ...info } = state;\n\n    return { ...info, address: account.address, account };\n  }\n);\n\nexport const accountBalanceSelector = createDeepEqualSelector(\n  accountSelector,\n  (account) => account.balance\n);\n\nexport const accountNonceSelector = createDeepEqualSelector(\n  accountSelector,\n  (state) => state?.nonce?.valueOf() || 0\n);\n\nexport const shardSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.shard\n);\n\nexport const ledgerAccountSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.ledgerAccount\n);\n\nexport const walletConnectAccountSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.walletConnectAccount\n);\n\nexport const isAccountLoadingSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.isAccountLoading\n);\n\nexport const isAccountLoadingErrorSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.accountLoadingError\n);\n\nexport const websocketEventSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.websocketEvent\n);\n\nexport const websocketBatchEventSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.websocketBatchEvent\n);\n", "import isEqual from 'lodash.isequal';\nimport { createSelectorCreator, defaultMemoize } from 'reselect';\n\nexport const createDeepEqualSelector = createSelectorCreator(\n  defaultMemoize,\n  isEqual\n);\n", "import { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const dappConfigSelector = (state: RootState) => state.dappConfig;\n\nexport const shouldUseWebViewProviderSelector = createDeepEqualSelector(\n  dappConfigSelector,\n  (state) => state.shouldUseWebViewProvider\n);\n", "import { RootState } from 'reduxStore/store';\nimport { addressSelector } from './accountInfoSelectors';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const loginInfoSelector = (state: RootState) => state.loginInfo;\n\nexport const loginMethodSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.loginMethod\n);\n\nexport const isLoggedInSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  addressSelector,\n  (_, address) => Boolean(address)\n);\n\nexport const walletConnectLoginSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.walletConnectLogin\n);\n\nexport const ledgerLoginSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.ledgerLogin\n);\n\nexport const walletLoginSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.walletLogin\n);\n\nexport const isLoginSessionInvalidSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.isLoginSessionInvalid\n);\n\nexport const tokenLoginSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.tokenLogin\n);\n\nexport const logoutRouteSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.logoutRoute\n);\n\nexport const isWalletConnectV2InitializedSelector = createDeepEqualSelector(\n  loginInfoSelector,\n  (state) => state.isWalletConnectV2Initialized\n);\n", "import { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const modalsSliceSelector = (state: RootState) => state.modals;\n\nexport const txSubmittedModalSelector = createDeepEqualSelector(\n  modalsSliceSelector,\n  (state) => state.txSubmittedModal\n);\n\nexport const notificationModalSelector = createDeepEqualSelector(\n  modalsSliceSelector,\n  (state) => state.notificationModal\n);\n", "import { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const networkConfigSelector = (state: RootState) => state.networkConfig;\n\nexport const chainIDSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.chainId\n);\n\nexport const roundDurationSelectorSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.roundDuration\n);\n\nexport const walletConnectBridgeAddressSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectBridgeAddress\n);\n\nexport const walletConnectV2RelaySelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectV2RelayAddress\n);\n\nexport const walletConnectV2ProjectIdSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectV2ProjectId\n);\n\nexport const walletConnectV2OptionsSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectV2Options\n);\n\nexport const walletConnectDeepLinkSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectDeepLink\n);\n\nexport const networkSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network\n);\n\nexport const apiAddressSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.apiAddress\n);\n\nexport const explorerAddressSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.explorerAddress\n);\n\nexport const walletAddressSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.customWalletAddress ?? state.walletAddress\n);\n\nexport const xAliasAddressSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.xAliasAddress\n);\n\nexport const egldLabelSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.egldLabel\n);\n", "import { SignedMessageInfoStateType } from 'reduxStore/slices';\nimport { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const signedMessageInfoSliceSelector = (state: RootState) =>\n  state.signedMessageInfo;\n\nexport const signedMessageIsSigningSelector = createDeepEqualSelector(\n  signedMessageInfoSliceSelector,\n  (state: SignedMessageInfoStateType) => state.isSigning\n);\n\nexport const signedMessageErrorSelector = createDeepEqualSelector(\n  signedMessageInfoSliceSelector,\n  (state: SignedMessageInfoStateType) => state.errorMessage\n);\n\nexport const lastSignedSessionSelector = createDeepEqualSelector(\n  signedMessageInfoSliceSelector,\n  (state: SignedMessageInfoStateType) => {\n    const sessionIds = Object.keys(state.signedSessions);\n    const sessionIdsLength = sessionIds.length;\n\n    return state.signedSessions[sessionIds[sessionIdsLength - 1]];\n  }\n);\n\nexport const lastSignedSessionId = createDeepEqualSelector(\n  signedMessageInfoSliceSelector,\n  (state: SignedMessageInfoStateType) => {\n    const sessionIds = Object.keys(state.signedSessions);\n    const sessionIdsLength = sessionIds.length;\n    return sessionIds.length > 0 ? sessionIds[sessionIdsLength - 1] : '';\n  }\n);\n", "import { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const toastsSliceSelector = (state: RootState) => state.toasts;\n\nexport const customToastsSelector = createDeepEqualSelector(\n  toastsSliceSelector,\n  (state) => state.customToasts\n);\n\nexport const transactionToastsSelector = createDeepEqualSelector(\n  toastsSliceSelector,\n  (state) => state.transactionToasts\n);\n", "import { createDeepEqualSelector } from 'reduxStore/selectors/helpers';\nimport {\n  defaultTransactionErrorMessage,\n  defaultTransactionProcessingMessage,\n  defaultTransactionSuccessMessage\n} from 'reduxStore/slices';\nimport { RootState } from 'reduxStore/store';\nimport { TransactionsDisplayInfoType } from 'types';\n\nconst defaultTransactionInfo: TransactionsDisplayInfoType = {\n  errorMessage: defaultTransactionErrorMessage,\n  successMessage: defaultTransactionSuccessMessage,\n  processingMessage: defaultTransactionProcessingMessage\n};\n\nexport const transactionsInfoSelectors = (state: RootState) =>\n  state.transactionsInfo;\n\nexport const transactionDisplayInfoSelector = createDeepEqualSelector(\n  transactionsInfoSelectors,\n  (_: RootState, transactionSessionId: string | null) => transactionSessionId,\n  (\n    transactionsDisplayInfo: TransactionsDisplayInfoType,\n    transactionSessionId: string | null\n  ) =>\n    transactionSessionId != null\n      ? transactionsDisplayInfo?.[Number(transactionSessionId)] ||\n        defaultTransactionInfo\n      : defaultTransactionInfo\n);\n", "import { Transaction } from '@multiversx/sdk-core';\nimport { newTransaction } from 'models/newTransaction';\nimport {\n  getIsTransactionFailed,\n  getIsTransactionPending,\n  getIsTransactionSuccessful,\n  getIsTransactionTimedOut\n} from 'utils/transactions';\nimport {\n  CustomTransactionInformation,\n  RawTransactionType,\n  SignedTransactionsType\n} from '../../types';\nimport { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport interface TransactionsToSignReturnType {\n  callbackRoute?: string;\n  sessionId: string;\n  transactions: Transaction[];\n  customTransactionInformation: CustomTransactionInformation;\n}\n\nexport const transactionsSelectors = (state: RootState) => state.transactions;\n\nexport const signedTransactionsSelector = createDeepEqualSelector(\n  transactionsSelectors,\n  (state) => state.signedTransactions as SignedTransactionsType\n);\n\nexport const signTransactionsErrorSelector = createDeepEqualSelector(\n  transactionsSelectors,\n  (state) => state.signTransactionsError\n);\n\nexport const signTransactionsCancelMessageSelector = createDeepEqualSelector(\n  transactionsSelectors,\n  (state) => state.signTransactionsCancelMessage\n);\n\nconst selectTxByStatus =\n  (txStatusVerifier: typeof getIsTransactionPending) =>\n  (signedTransactions: SignedTransactionsType) =>\n    Object.entries(signedTransactions).reduce((acc, [sessionId, txBody]) => {\n      if (txStatusVerifier(txBody.status)) {\n        acc[sessionId] = txBody;\n      }\n      return acc;\n    }, {} as SignedTransactionsType);\n\nexport const pendingSignedTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionPending)\n);\n\nexport const successfulTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionSuccessful)\n);\n\nexport const failedTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionFailed)\n);\n\nexport const timedOutTransactionsSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  selectTxByStatus(getIsTransactionTimedOut)\n);\n\nexport const transactionsToSignSelector = createDeepEqualSelector(\n  transactionsSelectors,\n  (state): TransactionsToSignReturnType | null => {\n    if (state?.transactionsToSign == null) {\n      return null;\n    }\n    return {\n      ...state.transactionsToSign,\n      transactions:\n        state?.transactionsToSign?.transactions.map((tx: RawTransactionType) =>\n          newTransaction(tx)\n        ) || []\n    };\n  }\n);\n\nexport const transactionStatusSelector = createDeepEqualSelector(\n  signedTransactionsSelector,\n  (_: RootState, transactionSessionId: string | null) => transactionSessionId,\n  (\n    signedTransactions: SignedTransactionsType,\n    transactionSessionId: string | null\n  ) =>\n    transactionSessionId != null\n      ? signedTransactions?.[transactionSessionId] || {}\n      : {}\n);\n", "import {\n  Address,\n  Transaction,\n  TransactionOptions,\n  TransactionVersion\n} from '@multiversx/sdk-core';\nimport { GAS_LIMIT, GAS_PRICE, VERSION } from 'constants/index';\nimport { RawTransactionType } from 'types';\nimport { getDataPayloadForTransaction } from 'utils/transactions/getDataPayloadForTransaction';\nimport { isGuardianTx } from 'utils/transactions/isGuardianTx';\n\nexport function newTransaction(rawTransaction: RawTransactionType) {\n  const rawTx = { ...rawTransaction };\n\n  // TODO: Remove when the protocol supports usernames for guardian transactions\n  if (isGuardianTx({ data: rawTx.data, onlySetGuardian: true })) {\n    delete rawTx.senderUsername;\n    delete rawTx.receiverUsername;\n  }\n\n  const transaction = new Transaction({\n    value: rawTx.value.valueOf(),\n    data: getDataPayloadForTransaction(rawTx.data),\n    nonce: rawTx.nonce.valueOf(),\n    receiver: new Address(rawTx.receiver),\n    ...(rawTx.receiverUsername\n      ? { receiverUsername: rawTx.receiverUsername }\n      : {}),\n    sender: new Address(rawTx.sender),\n    ...(rawTx.senderUsername ? { senderUsername: rawTx.senderUsername } : {}),\n    gasLimit: rawTx.gasLimit.valueOf() ?? GAS_LIMIT,\n    gasPrice: rawTx.gasPrice.valueOf() ?? GAS_PRICE,\n    chainID: rawTx.chainID.valueOf(),\n    version: new TransactionVersion(rawTx.version ?? VERSION),\n    ...(rawTx.options\n      ? { options: new TransactionOptions(rawTx.options) }\n      : {}),\n    ...(rawTx.guardian ? { guardian: new Address(rawTx.guardian) } : {})\n  });\n\n  if (rawTx.guardianSignature) {\n    transaction.applyGuardianSignature(\n      Buffer.from(rawTx.guardianSignature, 'hex')\n    );\n  }\n\n  if (rawTx.signature) {\n    transaction.applySignature(Buffer.from(rawTx.signature, 'hex'));\n  }\n\n  return transaction;\n}\n", "import { TransactionPayload } from '@multiversx/sdk-core/out';\nimport { isStringBase64 } from '../decoders';\n\n/**\n * @description We need to check if the data field was already encoded and to prevent additional encoding\n * The TransactionPayload is used in the context of the Transaction class\n * which must always have a non-encoded data field\n *\n * @see The tests for this function are in src/utils/transactions/tests/getDataPayloadForTransaction.test.ts\n * @param data - data field from transaction\n */\nexport const getDataPayloadForTransaction = (\n  data?: string\n): TransactionPayload => {\n  const defaultData = data ?? '';\n\n  return isStringBase64(defaultData)\n    ? TransactionPayload.fromEncoded(defaultData)\n    : new TransactionPayload(defaultData);\n};\n", "export * from './base64Utils';\nexport * from './decodePart';\nexport * from './isAscii';\nexport * from './isUtf8';\nexport * from './stringContainsNumbers';\n", "/**\n * @description Checks if a string is base64 encoded\n * The detection difficulty stands in the format of an encoded string that initially had non-ASCII characters\n *\n * Usually, when decoding a base64 string, if the result has non-ASCII characters,\n * it means that the string was encoded, however, this is not always the case\n *\n * @example If we encode a string with non-ASCII characters like \"\uD83D\uDC4Bwxyz{|}~\uFFFD\uFFFD\uFFFD\" to base64\n * the decoded result will also contain non-ASCII characters, but the strings is valid\n * For the scenarios above, the Buffer.from() conversion is not equal to the atob() conversion\n * and, the encoded string format is also different from a regular base64 string (e.g. \"GamRHHZiaUR3bjVtQQ==\")\n *\n * Solution:\n * - if any conversion fails (atob(), btoa() or Buffer.from()), it is definitely not an encoded string\n * - if the string is equal\n *\n * @see The tests for this function are in src/utils/decoders/tests/base64Utils.test.ts\n * @param str\n */\nexport function isStringBase64(str: string) {\n  try {\n    // Try to decode the string and encode it back using base64 functions\n    const atobDecoded = atob(str);\n    const btoaEncoded = btoa(atobDecoded);\n    const bufferFromDecoded = Buffer.from(str, 'base64').toString();\n    const bufferFromEncoded = Buffer.from(bufferFromDecoded).toString('base64');\n\n    // If the result is equal to the initial string\n    const isBtoaEqual = str === btoaEncoded || btoaEncoded.startsWith(str);\n    const isBufferFromBase64Equal =\n      str === bufferFromEncoded || bufferFromEncoded.startsWith(str);\n    const isEqualToInitialString = isBtoaEqual && isBufferFromBase64Equal;\n\n    if (isEqualToInitialString) {\n      // it is a regular base64 string\n      return true;\n    }\n  } catch (e) {\n    return false;\n  }\n\n  return false;\n}\n\nexport function encodeToBase64(string: string) {\n  return btoa(string);\n}\n\nexport function decodeBase64(string: string) {\n  if (!isStringBase64(string)) {\n    return string;\n  }\n\n  return atob(string);\n}\n", "import { isUtf8 } from './isUtf8';\n\nexport function decodePart(part: string) {\n  let decodedPart = part;\n\n  try {\n    const hexPart = Buffer.from(part, 'hex').toString();\n\n    if (isUtf8(hexPart) && hexPart.length > 1) {\n      decodedPart = hexPart;\n    }\n  } catch (error) {}\n\n  return decodedPart;\n}\n", "export function isUtf8(str: string) {\n  for (let i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) > 127) return false;\n  }\n  return true;\n}\n", "export const isAscii = (str: string) => !/[^\\x00-\\x7F]/gm.test(str);\n", "export const stringContainsNumbers = (str: string) => /\\d/.test(str);\n", "import { GuardianActionsEnum } from 'constants/index';\n\nexport const isGuardianTx = ({\n  data,\n  onlySetGuardian\n}: {\n  data?: string;\n  onlySetGuardian?: boolean;\n}) => {\n  if (!data) {\n    return false;\n  }\n\n  if (onlySetGuardian) {\n    return data.startsWith(GuardianActionsEnum.SetGuardian);\n  }\n\n  return Object.values(GuardianActionsEnum).some((action) =>\n    data.startsWith(action)\n  );\n};\n", "export * from './builtCallbackUrl';\nexport * from './getAllTransactionsLink';\nexport * from './getAreTransactionsOnSameShard';\nexport * from './getInterpretedTransaction';\nexport * from './getTokenFromData';\nexport * from './getTransactionLink';\nexport * from './getUnHighlightedDataFieldParts';\nexport * from './isGuardianTx';\nexport * from './isTokenTransfer';\nexport * from './parseMultiEsdtTransferData';\nexport * from './parseTransactionAfterSigning';\nexport * from './removeTransactionParamsFromUrl';\nexport * from './transactionInfoHelpers';\nexport * from './transactionStateByStatus';\nexport * from './getOperationsDetails';\n", "import { SDK_DAPP_VERSION } from 'constants/index';\n\nfunction buildUrlParams(\n  search: string,\n  urlParams: {\n    [key: string]: string;\n  }\n) {\n  const urlSearchParams = new URLSearchParams(search);\n  const params = Object.fromEntries(urlSearchParams as any);\n\n  const nextUrlParams = new URLSearchParams({\n    ...params,\n    ...urlParams\n  }).toString();\n\n  return { nextUrlParams, params };\n}\n\nconst version = '3.1.0'; // will be replaced at build time\n\nexport interface ReplyUrlType {\n  callbackUrl: string;\n  urlParams?: { [key: string]: string };\n}\n\nexport function builtCallbackUrl({\n  callbackUrl,\n  urlParams = {}\n}: ReplyUrlType) {\n  let url = callbackUrl;\n\n  if (Object.entries(urlParams).length > 0) {\n    try {\n      const { search, origin, pathname, hash } = new URL(callbackUrl);\n      const urlParamsWithVersion = {\n        ...urlParams,\n        [SDK_DAPP_VERSION]: version\n      };\n      const { nextUrlParams } = buildUrlParams(search, urlParamsWithVersion);\n      url = `${origin}${pathname}?${nextUrlParams}${hash}`;\n    } catch (err) {\n      console.error('Unable to construct URL from: ', callbackUrl, err);\n      return url;\n    }\n  }\n\n  return url;\n}\n", "import { explorerAddressSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport function getAllTransactionsLink(\n  address: string,\n  explorerAddress: string = explorerAddressSelector(store.getState())\n) {\n  return `${explorerAddress}/address/${address}`;\n}\n", "import { isCrossShardTransaction } from 'services/transactions/isCrossShardTransaction';\nimport { SignedTransactionType } from 'types';\nimport { getAddressFromDataField } from 'utils/smartContracts';\n\nexport const getAreTransactionsOnSameShard = (\n  transactions?: SignedTransactionType[],\n  accountShard = 1\n): boolean => {\n  if (!transactions?.length) {\n    return true;\n  }\n\n  return transactions.reduce(\n    (prevTxIsSameShard: boolean, { receiver, data }: SignedTransactionType) => {\n      const receiverAddress = getAddressFromDataField({\n        receiver,\n        data: data ?? ''\n      });\n      if (receiverAddress == null) {\n        return prevTxIsSameShard;\n      }\n      return (\n        prevTxIsSameShard &&\n        isCrossShardTransaction({\n          receiverAddress,\n          senderShard: accountShard\n        })\n      );\n    },\n    true\n  );\n};\n", "import { Address } from '@multiversx/sdk-core/out';\n\nimport { getShardOfAddress } from 'utils/account/getShardOfAddress';\n\nexport interface IsCrossShardTransactionPropsType {\n  receiverAddress: string;\n  senderShard?: number;\n  senderAddress?: string;\n}\nexport function isCrossShardTransaction({\n  receiverAddress,\n  senderShard,\n  senderAddress\n}: IsCrossShardTransactionPropsType) {\n  try {\n    const receiver = new Address(receiverAddress);\n    const receiverShard = getShardOfAddress(receiver.pubkey());\n    if (senderShard == null && senderAddress != null) {\n      const sender = new Address(senderAddress);\n      return getShardOfAddress(sender) === receiverShard;\n    }\n    return receiverShard === senderShard;\n  } catch (err) {\n    return false;\n  }\n}\n", "import { METACHAIN_SHARD_ID } from 'constants/index';\n\nconst isAddressOfMetachain = (pubKey: Buffer) => {\n  // prettier-ignore\n  const metachainPrefix = Buffer.from([\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n  ]);\n  const pubKeyPrefix = pubKey.slice(0, metachainPrefix.length);\n  if (pubKeyPrefix.equals(metachainPrefix)) {\n    return true;\n  }\n  const zeroAddress = Buffer.alloc(32).fill(0);\n  return pubKey.equals(zeroAddress);\n};\nexport const getShardOfAddress = (hexPubKey: any) => {\n  try {\n    const numShards = 3;\n    const maskHigh = parseInt('11', 2);\n    const maskLow = parseInt('01', 2);\n    const pubKey = Buffer.from(hexPubKey, 'hex');\n    const lastByteOfPubKey = pubKey[31];\n    if (isAddressOfMetachain(pubKey)) {\n      return METACHAIN_SHARD_ID;\n    }\n    let shard = lastByteOfPubKey & maskHigh;\n    if (shard > numShards - 1) {\n      shard = lastByteOfPubKey & maskLow;\n    }\n    return shard;\n  } catch (err) {\n    return -1;\n  }\n};\n", "import { Address, TransactionPayload } from '@multiversx/sdk-core';\nimport { TypesOfSmartContractCallsEnum } from 'types';\nimport { addressIsValid } from './account/addressIsValid';\nimport { isStringBase64 } from './decoders/base64Utils';\n\nexport const ESDTTransferTypes = [\n  'ESDTNFTTransfer',\n  'ESDTNFTBurn',\n  'ESDTNFTAddQuantity',\n  'ESDTNFTCreate',\n  'MultiESDTNFTTransfer',\n  'ESDTTransfer',\n  'ESDTBurn',\n  'ESDTLocalMint',\n  'ESDTLocalBurn',\n  'ESDTWipe',\n  'ESDTFreeze'\n];\n\nexport function isContract(\n  receiver: string,\n  sender?: string,\n  data = ''\n): boolean {\n  const isValid = addressIsValid(receiver);\n\n  if (!isValid) {\n    return false;\n  }\n\n  const isContract = new Address(receiver).isContractAddress();\n\n  if (isContract) {\n    return true;\n  }\n\n  const extractedAddress = getAddressFromDataField({ receiver, data });\n\n  if (!extractedAddress) {\n    return false;\n  }\n\n  const isExtractedAddressContractCall = new Address(\n    extractedAddress\n  ).isContractAddress();\n\n  return (\n    isExtractedAddressContractCall || isSelfESDTContract(receiver, sender, data)\n  );\n}\n\nconst isHexValidCharacters = (str: string) => {\n  return str.toLowerCase().match(/[0-9a-f]/g);\n};\nconst isHexValidLength = (str: string) => {\n  return str.length % 2 === 0;\n};\n\nexport function isSelfESDTContract(\n  receiver: string,\n  sender?: string,\n  data?: string\n) {\n  const parts = data?.split('@');\n  if (parts == null) {\n    return false;\n  }\n  const [type, ...restParts] = parts;\n  const isSelfTransaction =\n    sender != null && receiver != null && receiver === sender;\n  const isCorrectESDTType = ESDTTransferTypes.includes(type);\n  const areDataPartsValid = restParts.every(\n    (part) => isHexValidCharacters(part) && isHexValidLength(part)\n  );\n  return isSelfTransaction && isCorrectESDTType && areDataPartsValid;\n}\n\nexport function getAddressFromDataField({\n  receiver,\n  data\n}: {\n  receiver: string;\n  data: string;\n}) {\n  try {\n    if (!data) {\n      return receiver;\n    }\n    const parsedData = isStringBase64(data)\n      ? TransactionPayload.fromEncoded(data).toString()\n      : data;\n\n    const addressIndex = getAddressIndex(parsedData);\n\n    const parts = parsedData.split('@');\n    return addressIndex > -1 ? parts[addressIndex] : receiver;\n  } catch (err) {\n    console.log(err);\n    return;\n  }\n}\n\nfunction getAddressIndex(data: string) {\n  if (data.includes(TypesOfSmartContractCallsEnum.MultiESDTNFTTransfer)) {\n    return 1;\n  }\n  if (data.includes(TypesOfSmartContractCallsEnum.ESDTNFTTransfer)) {\n    return 4;\n  }\n  return -1;\n}\n", "import { Address } from '@multiversx/sdk-core';\n\nfunction canTransformToPublicKey(address: string) {\n  try {\n    const checkAddress = new Address(address);\n    return Boolean(checkAddress.bech32());\n  } catch {\n    return false;\n  }\n}\n\nexport function addressIsValid(destinationAddress: string) {\n  const isValidBach =\n    destinationAddress?.length === 62 && /^\\w+$/.test(destinationAddress);\n\n  return isValidBach && canTransformToPublicKey(destinationAddress);\n}\n", "export * from './getInterpretedTransaction';\nexport * from './constants';\nexport * from './helpers';\n", "import {\n  InterpretedTransactionType,\n  ServerTransactionType\n} from 'types/serverTransactions.types';\nimport { TokenArgumentType } from 'types/serverTransactions.types';\nimport { isContract } from 'utils/smartContracts';\nimport { getTokenFromData } from 'utils/transactions/getTokenFromData';\nimport {\n  getExplorerLink,\n  getTransactionMethod,\n  getTransactionReceiver,\n  getTransactionReceiverAssets,\n  getTransactionTokens,\n  getTransactionTransferType,\n  explorerUrlBuilder\n} from './helpers';\n\nexport interface GetInterpretedTransactionType {\n  address: string;\n  explorerAddress: string;\n  transaction: ServerTransactionType;\n}\n\nexport function getInterpretedTransaction({\n  transaction,\n  address,\n  explorerAddress\n}: GetInterpretedTransactionType): InterpretedTransactionType {\n  const tokenIdentifier =\n    transaction.tokenIdentifier ?? getTokenFromData(transaction.data).tokenId;\n\n  const receiver = getTransactionReceiver(transaction);\n  const receiverAssets = getTransactionReceiverAssets(transaction);\n\n  const direction = getTransactionTransferType(address, transaction, receiver);\n  const method = getTransactionMethod(transaction);\n  const transactionTokens: TokenArgumentType[] =\n    getTransactionTokens(transaction);\n\n  const senderLink = getExplorerLink({\n    explorerAddress,\n    to: explorerUrlBuilder.accountDetails(transaction.sender)\n  });\n  const receiverLink = getExplorerLink({\n    explorerAddress,\n    to: explorerUrlBuilder.accountDetails(receiver)\n  });\n  const senderShardLink = getExplorerLink({\n    explorerAddress,\n    to: explorerUrlBuilder.senderShard(transaction.senderShard)\n  });\n  const receiverShardLink = getExplorerLink({\n    explorerAddress,\n    to: explorerUrlBuilder.receiverShard(transaction.receiverShard)\n  });\n\n  const transactionHash = transaction.originalTxHash\n    ? `${transaction.originalTxHash}#${transaction.txHash}`\n    : transaction.txHash;\n\n  const transactionLink = getExplorerLink({\n    explorerAddress,\n    to: explorerUrlBuilder.transactionDetails(transactionHash)\n  });\n\n  return {\n    ...transaction,\n    tokenIdentifier,\n    receiver,\n    receiverAssets,\n    transactionDetails: {\n      direction,\n      method,\n      transactionTokens,\n      isContract: isContract(transaction.sender)\n    },\n    links: {\n      senderLink,\n      receiverLink,\n      senderShardLink,\n      receiverShardLink,\n      transactionLink\n    }\n  };\n}\n", "import { Address } from '@multiversx/sdk-core';\nimport BigNumber from 'bignumber.js';\nimport { TransactionTypesEnum } from 'types/enums.types';\nimport { addressIsValid } from 'utils/account/addressIsValid';\nimport { decodePart } from 'utils/decoders/decodePart';\n\nconst noData = {\n  tokenId: '',\n  amount: ''\n};\n\nexport const decodeData = (data: string) => {\n  const nonceIndex = 2;\n  const amountIndex = 3;\n  const parts = data.split('@');\n  const decodedParts = parts.map((part, i) =>\n    [nonceIndex, amountIndex].includes(i) ? part : decodePart(part)\n  );\n  return decodedParts;\n};\n\nexport function getTokenFromData(data?: string): {\n  tokenId: string;\n  amount: string;\n  collection?: string;\n  nonce?: string;\n  receiver?: string;\n} {\n  if (!data) {\n    return noData;\n  }\n\n  const isTokenTransfer = data.startsWith(TransactionTypesEnum.ESDTTransfer);\n  const isNftTransfer =\n    data.startsWith(TransactionTypesEnum.ESDTNFTTransfer) && data.includes('@');\n  const isNftBurn =\n    data.startsWith(TransactionTypesEnum.ESDTNFTBurn) && data.includes('@');\n\n  if (isTokenTransfer) {\n    const [, encodedToken, encodedAmount] = data.split('@');\n    try {\n      const tokenId = Buffer.from(encodedToken, 'hex').toString('ascii');\n\n      if (!tokenId) {\n        return noData;\n      }\n\n      const amount = new BigNumber(\n        '0x' + encodedAmount.replace('0x', '')\n      ).toString(10);\n\n      return {\n        tokenId,\n        amount\n      };\n    } catch (e) {\n      console.error('Error getting token from transaction data', e);\n    }\n  }\n\n  if (isNftTransfer) {\n    try {\n      const [, /*ESDTNFTTransfer*/ collection, nonce, quantity, receiver] =\n        decodeData(data);\n      if (\n        [collection, nonce, quantity, receiver].every((el) => Boolean(el)) &&\n        addressIsValid(new Address(receiver).bech32())\n      ) {\n        return {\n          tokenId: `${collection}-${nonce}`,\n          amount: new BigNumber(quantity, 16).toString(10),\n          collection,\n          nonce,\n          receiver: new Address(receiver).bech32()\n        };\n      }\n    } catch (err) {}\n  }\n\n  if (isNftBurn) {\n    try {\n      const [, /*ESDTNFTBurn*/ collection, nonce, quantity] = decodeData(data);\n      if ([collection, nonce, quantity].every((el) => Boolean(el))) {\n        return {\n          tokenId: `${collection}-${nonce}`,\n          amount: new BigNumber(quantity, 16).toString(10),\n          collection,\n          nonce\n        };\n      }\n    } catch (err) {}\n  }\n\n  return noData;\n}\n", "export * from './explorerUrlBuilder';\nexport * from './getTransactionTokens';\nexport * from './getTransactionReceiverAssets';\nexport * from './getTransactionReceiver';\nexport * from './getTransactionMethod';\nexport * from './getExplorerLink';\nexport * from './getTransactionTransferType';\nexport * from './explorerUrlBuilder';\nexport * from './getHumanReadableTimeFormat';\nexport * from './getExplorerLink';\nexport * from './getOperationsMessages';\nexport * from './getReceiptMessage';\nexport * from './getScResultsMessages';\nexport * from './getExplorerLink';\nexport * from './getTransactionValue';\n", "import {\n  ACCOUNTS_ENDPOINT,\n  BLOCKS_ENDPOINT,\n  CODE_ENDPOINT,\n  COLLECTIONS_ENDPOINT,\n  CONTRACTS_ENDPOINT,\n  IDENTITIES_ENDPOINT,\n  LOCKED_ACCOUNTS_ENDPOINT,\n  LOGS_ENDPOINT,\n  MINIBLOCKS_ENDPOINT,\n  NFTS_ENDPOINT,\n  NODES_ENDPOINT,\n  PROVIDERS_ENDPOINT,\n  ROLES_ENDPOINT,\n  SC_RESULTS_ENDPOINT,\n  TOKENS_ENDPOINT,\n  TRANSACTIONS_ENDPOINT\n} from 'apiCalls/endpoints';\n\nexport const explorerUrlBuilder = {\n  shard: (shard: number | string) => `/${BLOCKS_ENDPOINT}?shard=${shard}`,\n  receiverShard: (shard: number | string) =>\n    `/${TRANSACTIONS_ENDPOINT}?receivershard=${shard}`,\n  senderShard: (shard: number | string) =>\n    `/${TRANSACTIONS_ENDPOINT}?sendershard=${shard}`,\n  transactionDetails: (hash: number | string) =>\n    `/${TRANSACTIONS_ENDPOINT}/${hash}`,\n  transactionDetailsScResults: (hash: string) =>\n    `/${TRANSACTIONS_ENDPOINT}/${hash}/${SC_RESULTS_ENDPOINT}`,\n  transactionDetailsLogs: (hash: string) =>\n    `/${TRANSACTIONS_ENDPOINT}/${hash}/${LOGS_ENDPOINT}`,\n  nodeDetails: (publicKey: string) => `/${NODES_ENDPOINT}/${publicKey}`,\n  accountDetails: (address: string) => `/${ACCOUNTS_ENDPOINT}/${address}`,\n  accountDetailsContractCode: (address: string) =>\n    `/${ACCOUNTS_ENDPOINT}/${address}/${CODE_ENDPOINT}`,\n  accountDetailsTokens: (address: string) =>\n    `/${ACCOUNTS_ENDPOINT}/${address}/${TOKENS_ENDPOINT}`,\n  accountDetailsNfts: (address: string) =>\n    `/${ACCOUNTS_ENDPOINT}/${address}/${NFTS_ENDPOINT}`,\n  accountDetailsScResults: (address: string) =>\n    `/${ACCOUNTS_ENDPOINT}/${address}/${SC_RESULTS_ENDPOINT}`,\n  accountDetailsContracts: (address: string) =>\n    `/${ACCOUNTS_ENDPOINT}/${address}/${CONTRACTS_ENDPOINT}`,\n  identityDetails: (id: string) => `/${IDENTITIES_ENDPOINT}/${id}`,\n  tokenDetails: (tokenId: string) => `/${TOKENS_ENDPOINT}/${tokenId}`,\n  tokenDetailsAccounts: (tokenId: string) =>\n    `/${TOKENS_ENDPOINT}/${tokenId}/${ACCOUNTS_ENDPOINT}`,\n  tokenDetailsLockedAccounts: (tokenId: string) =>\n    `/${TOKENS_ENDPOINT}/${tokenId}/${LOCKED_ACCOUNTS_ENDPOINT}`,\n  tokenDetailsRoles: (tokenId: string) =>\n    `/${TOKENS_ENDPOINT}/${tokenId}/${ROLES_ENDPOINT}`,\n  collectionDetails: (identifier: string) =>\n    `/${COLLECTIONS_ENDPOINT}/${identifier}`,\n  nftDetails: (identifier: string) => `/${NFTS_ENDPOINT}/${identifier}`,\n  providerDetails: (address: string) => `/${PROVIDERS_ENDPOINT}/${address}`,\n  providerDetailsTransactions: (address: string) =>\n    `/${PROVIDERS_ENDPOINT}/${address}/${TRANSACTIONS_ENDPOINT}`,\n  miniblockDetails: (hash: string) => `/${MINIBLOCKS_ENDPOINT}/${hash}`\n};\n", "export const ACCOUNTS_ENDPOINT = 'accounts';\nexport const ADDRESS_ENDPOINT = 'address';\nexport const BLOCKS_ENDPOINT = 'blocks';\nexport const CODE_ENDPOINT = 'code';\nexport const COLLECTIONS_ENDPOINT = 'collections';\nexport const CONFIG_ENDPOINT = 'dapp/config';\nexport const CONTRACTS_ENDPOINT = 'contracts';\nexport const ECONOMICS_ENDPOINT = 'economics';\nexport const IDENTITIES_ENDPOINT = 'identities';\nexport const KEYS_ENDPOINT = 'keys';\nexport const LOCKED_ACCOUNTS_ENDPOINT = 'locked-accounts';\nexport const LOGS_ENDPOINT = 'logs';\nexport const MINIBLOCKS_ENDPOINT = 'miniblocks';\nexport const NETWORK_CONFIG_ENDPOINT = 'network/config';\nexport const NFTS_ENDPOINT = 'nfts';\nexport const NODES_ENDPOINT = 'nodes';\nexport const PROVIDERS_ENDPOINT = 'providers';\nexport const ROLES_ENDPOINT = 'roles';\nexport const SC_RESULTS_ENDPOINT = 'sc-results';\nexport const STAKE_ENDPOINT = 'stake';\nexport const TOKENS_ENDPOINT = 'tokens';\nexport const TRANSACTIONS_COUNT_ENDPOINT = 'transactions/count';\nexport const TRANSACTIONS_BATCH = 'batch';\nexport const TRANSACTIONS_ENDPOINT = 'transactions';\nexport const TRANSFERS_ENDPOINT = 'transfers';\n", "import {\n  ServerTransactionType,\n  TokenArgumentType\n} from 'types/serverTransactions.types';\n\nexport const getTransactionTokens = (\n  transaction: ServerTransactionType\n): TokenArgumentType[] => {\n  if (transaction.action) {\n    const merged = [\n      transaction.action.arguments?.token,\n      transaction.action.arguments?.token1,\n      transaction.action.arguments?.token2,\n      transaction.action.arguments?.transfers // array of tokens\n    ].filter((x) => x != null);\n    const flattenTransfers = [].concat(...merged);\n    return flattenTransfers;\n  }\n\n  return [];\n};\n", "import { ServerTransactionType } from 'types/serverTransactions.types';\nimport { getTransactionReceiver } from './getTransactionReceiver';\n\n/**\n * The information about an account like name, icon, etc...\n * */\nexport function getTransactionReceiverAssets(\n  transaction: ServerTransactionType\n) {\n  const receiver = getTransactionReceiver(transaction);\n\n  return transaction.receiver === receiver\n    ? transaction.receiverAssets\n    : undefined;\n}\n", "import { ServerTransactionType } from 'types/serverTransactions.types';\n\nexport function getTransactionReceiver(transaction: ServerTransactionType) {\n  let receiver = transaction.receiver;\n  if (transaction.action?.arguments?.receiver) {\n    receiver = transaction.action.arguments.receiver;\n  }\n\n  return receiver;\n}\n", "import {\n  TransactionActionCategoryEnum,\n  TransactionActionsEnum,\n  ServerTransactionType\n} from 'types/serverTransactions.types';\n\nexport const getTransactionMethod = (transaction: ServerTransactionType) => {\n  let transactionAction = 'Transaction';\n  const transactionHasAction =\n    transaction.action?.name && transaction.action?.category;\n\n  if (transactionHasAction) {\n    if (\n      transaction.action?.category === TransactionActionCategoryEnum.esdtNft &&\n      transaction.action?.name === TransactionActionsEnum.transfer\n    ) {\n      transactionAction = 'Transaction';\n    } else if (transaction.action) {\n      transactionAction = transaction.action.name;\n    }\n\n    if (transaction.action?.arguments?.functionName) {\n      transactionAction = transaction.action.arguments.functionName;\n    }\n  }\n\n  return transactionAction;\n};\n", "let errorMessageDisplayed = false;\n\nfunction logError(error: string) {\n  if (!errorMessageDisplayed) {\n    console.error(error);\n    errorMessageDisplayed = true;\n  }\n}\n\nexport function getExplorerLink({\n  explorerAddress,\n  to\n}: {\n  explorerAddress: string;\n  to: string;\n}) {\n  try {\n    // if a valid url is sent, return the original url\n    const url = new URL(to);\n    return url.href;\n  } catch {\n    if (!to.startsWith('/')) {\n      logError(`Link not prepended by / : ${to}`);\n      to = `/${to}`;\n    }\n    return explorerAddress ? `${explorerAddress}${to}` : to;\n  }\n}\n", "import {\n  ServerTransactionType,\n  TransferTypeEnum,\n  TransactionDirectionEnum\n} from 'types/serverTransactions.types';\n\nexport function getTransactionTransferType(\n  address: string,\n  transaction: ServerTransactionType,\n  receiver: string\n): TransactionDirectionEnum {\n  const directionOut = address === transaction.sender;\n  const directionIn = address === receiver;\n  const directionSelf = directionOut && directionIn;\n  const isScResult = transaction?.type === TransferTypeEnum.SmartContractResult;\n\n  switch (true) {\n    case isScResult:\n      return TransactionDirectionEnum.INTERNAL;\n    case directionSelf:\n      return TransactionDirectionEnum.SELF;\n    case directionIn:\n      return TransactionDirectionEnum.IN;\n    case directionOut:\n    default:\n      return TransactionDirectionEnum.OUT;\n  }\n}\n", "export interface GetHumanReadableTimeFormatType {\n  value: number;\n  noSeconds?: boolean;\n  utc?: boolean;\n  meridiem?: boolean;\n}\n\n/**\n * @param value - UNIX timestamp\n * */\nexport function getHumanReadableTimeFormat({\n  value,\n  noSeconds,\n  utc,\n  meridiem = true\n}: GetHumanReadableTimeFormatType) {\n  const utcDate = new Date(value * 1000);\n  const [, AmPm] = utcDate\n    .toLocaleString('en-US', { hour: 'numeric', hour12: meridiem })\n    .split(' ');\n  const formatted = utcDate.toUTCString();\n  const [, date] = formatted.split(',');\n  const [day, month, year, time] = date.trim().split(' ');\n  const [hours, minutes, sec] = time.split(':');\n  const seconds = `:${sec}`;\n  const timeFormatted = `${hours}:${minutes}${noSeconds ? '' : seconds}`;\n  const utcSuffix = utc ? 'UTC' : '';\n  const meridiemSuffix = meridiem ? AmPm : '';\n  const suffix = `${meridiemSuffix} ${utcSuffix}`.trim();\n\n  return `${month} ${day}, ${year} ${timeFormatted} ${suffix}`.trim();\n}\n", "import { ServerTransactionType } from 'types/serverTransactions.types';\n\nexport function getOperationsMessages(transaction: ServerTransactionType) {\n  return (\n    transaction?.operations\n      ?.map((operation) => operation.message)\n      .filter((messages): messages is string => Boolean(messages)) ?? []\n  );\n}\n", "import BigNumber from 'bignumber.js';\nimport { DECIMALS, DIGITS, REFUNDED_GAS } from 'constants/index';\nimport { ServerTransactionType } from 'types/serverTransactions.types';\nimport { formatAmount } from 'utils/operations/formatAmount';\n\nconst getReceiptValue = (transaction: ServerTransactionType) => {\n  if (!transaction.receipt?.value) {\n    return '';\n  }\n\n  if (transaction.receipt?.data === REFUNDED_GAS) {\n    const formattedGas = formatAmount({\n      input: transaction.receipt.value,\n      decimals: DECIMALS,\n      digits: DIGITS,\n      showLastNonZeroDecimal: true\n    });\n    const gasRefunded = new BigNumber(formattedGas)\n      .times(transaction.gasPrice)\n      .times(100);\n\n    return gasRefunded.toFixed();\n  }\n\n  return transaction.receipt.value;\n};\n\nexport function getReceiptMessage(transaction: ServerTransactionType) {\n  const message = transaction.receipt?.data;\n\n  if (!message) {\n    return '';\n  }\n\n  const receiptValue = getReceiptValue(transaction);\n  const value = receiptValue ? `: ${receiptValue}` : '';\n\n  return `${message}${value}`;\n}\n", "import { TokenTransfer } from '@multiversx/sdk-core';\nimport BigNumber from 'bignumber.js';\nimport { DECIMALS, DIGITS, ZERO } from 'constants/index';\nimport { stringIsInteger } from 'utils/validation/stringIsInteger';\nimport { pipe } from './pipe';\n\nBigNumber.config({ ROUNDING_MODE: BigNumber.ROUND_FLOOR });\n\nexport interface FormatAmountType {\n  input: string;\n  decimals?: number;\n  digits?: number;\n  showIsLessThanDecimalsLabel?: boolean;\n  showLastNonZeroDecimal?: boolean;\n  addCommas?: boolean;\n}\n\nexport function formatAmount({\n  input,\n  decimals = DECIMALS,\n  digits = DIGITS,\n  showLastNonZeroDecimal = true,\n  showIsLessThanDecimalsLabel = false,\n  addCommas = false\n}: FormatAmountType) {\n  if (!stringIsInteger(input, false)) {\n    throw new Error('Invalid input');\n  }\n\n  const isNegative = new BigNumber(input).isNegative();\n  let modInput = input;\n\n  if (isNegative) {\n    // remove - at start of input\n    modInput = input.substring(1);\n  }\n\n  return (\n    pipe(modInput as string)\n      // format\n      .then(() =>\n        TokenTransfer.fungibleFromBigInteger('', modInput as string, decimals)\n          .amountAsBigInteger.shiftedBy(-decimals)\n          .toFixed(decimals)\n      )\n\n      // format\n      .then((current) => {\n        const bnBalance = new BigNumber(current);\n\n        if (bnBalance.isZero()) {\n          return ZERO;\n        }\n        const balance = bnBalance.toString(10);\n        const [integerPart, decimalPart] = balance.split('.');\n        const bNdecimalPart = new BigNumber(decimalPart || 0);\n\n        const decimalPlaces = pipe(0)\n          .if(Boolean(decimalPart && showLastNonZeroDecimal))\n          .then(() => Math.max(decimalPart.length, digits))\n\n          .if(bNdecimalPart.isZero() && !showLastNonZeroDecimal)\n          .then(0)\n\n          .if(Boolean(decimalPart && !showLastNonZeroDecimal))\n          .then(() => Math.min(decimalPart.length, digits))\n\n          .valueOf();\n\n        const shownDecimalsAreZero =\n          decimalPart &&\n          digits >= 1 &&\n          digits <= decimalPart.length &&\n          bNdecimalPart.isGreaterThan(0) &&\n          new BigNumber(decimalPart.substring(0, digits)).isZero();\n\n        const formatted = bnBalance.toFormat(decimalPlaces);\n\n        const formattedBalance = pipe(balance)\n          .if(addCommas)\n          .then(formatted)\n\n          .if(Boolean(shownDecimalsAreZero))\n          .then((current) => {\n            const integerPartZero = new BigNumber(integerPart).isZero();\n            const [numericPart, decimalSide] = current.split('.');\n\n            const zeroPlaceholders = new Array(digits - 1).fill(0);\n            const zeros = [...zeroPlaceholders, 0].join('');\n            const minAmount = [...zeroPlaceholders, 1].join(''); // 00..1\n\n            if (!integerPartZero) {\n              return `${numericPart}.${zeros}`;\n            }\n\n            if (showIsLessThanDecimalsLabel) {\n              return `<${numericPart}.${minAmount}`;\n            }\n\n            if (!showLastNonZeroDecimal) {\n              return numericPart;\n            }\n\n            return `${numericPart}.${decimalSide}`;\n          })\n\n          .if(Boolean(!shownDecimalsAreZero && decimalPart))\n          .then((current) => {\n            const [numericPart] = current.split('.');\n            let decimalSide = decimalPart.substring(0, decimalPlaces);\n\n            if (showLastNonZeroDecimal) {\n              const noOfZerosAtEnd = digits - decimalSide.length;\n\n              if (noOfZerosAtEnd > 0) {\n                const zeroPadding = Array(noOfZerosAtEnd).fill(0).join('');\n                decimalSide = `${decimalSide}${zeroPadding}`;\n                return `${numericPart}.${decimalSide}`;\n              }\n\n              return current;\n            }\n\n            if (!decimalSide) {\n              return numericPart;\n            }\n\n            return `${numericPart}.${decimalSide}`;\n          })\n\n          .valueOf();\n\n        return formattedBalance;\n      })\n      .if(isNegative)\n      .then((current) => `-${current}`)\n\n      .valueOf()\n  );\n}\n", "import BigNumber from 'bignumber.js';\n\nexport const stringIsInteger = (\n  integer: string,\n  positiveNumbersOnly = true\n) => {\n  const stringInteger = String(integer);\n  if (!stringInteger.match(/^[-]?\\d+$/)) {\n    return false;\n  }\n  const bNparsed = new BigNumber(stringInteger);\n  const limit = positiveNumbersOnly ? 0 : -1;\n  return (\n    bNparsed.toString(10) === stringInteger && bNparsed.comparedTo(0) >= limit\n  );\n};\n", "export function pipe<ValueType>(previous: ValueType) {\n  return {\n    if: function (condition: boolean) {\n      if (condition) {\n        return {\n          then: (newValue: ValueType | ((prop: ValueType) => ValueType)) =>\n            // if a callback is passed, callback is executed with previous value\n            newValue instanceof Function\n              ? pipe(newValue(previous))\n              : pipe(newValue)\n        };\n      } else {\n        return {\n          then: () => pipe(previous)\n        };\n      }\n    },\n\n    then: (newValue: ValueType | ((prop: ValueType) => ValueType)) =>\n      newValue instanceof Function ? pipe(newValue(previous)) : pipe(newValue),\n\n    valueOf: function () {\n      return previous;\n    }\n  };\n}\n", "import { ServerTransactionType } from 'types/serverTransactions.types';\n\nexport default function getScResultsMessages(\n  transaction: ServerTransactionType\n) {\n  return (\n    transaction?.results\n      ?.map((result) => result.returnMessage)\n      .filter((messages): messages is string => Boolean(messages)) ?? []\n  );\n}\n", "export * from './getTransactionValue';\n", "import { DECIMALS } from 'constants/index';\nimport { NftEnumType } from 'types/tokens.types';\n\nimport { getTransactionTokens } from 'utils/transactions/getInterpretedTransaction/helpers/getTransactionTokens';\nimport {\n  EgldValueDataType,\n  NFTValueDataType,\n  TokenValueDataType\n} from 'utils/transactions/getInterpretedTransaction/helpers/types';\nimport { getTransactionActionNftText } from 'utils/transactions/transactionInfoHelpers/getTransactionActionNftText';\nimport { getTransactionActionTokenText } from 'utils/transactions/transactionInfoHelpers/getTransactionActionTokenText';\n\nimport { WithTransactionType } from '../../../../../UI/types';\nimport {\n  ACTIONS_WITH_EGLD_VALUE,\n  ACTIONS_WITH_MANDATORY_OPERATIONS,\n  ACTIONS_WITH_VALUE_IN_ACTION_FIELD,\n  ACTIONS_WITH_VALUE_IN_DATA_FIELD\n} from '../../constants';\n\nimport {\n  getValueFromActions,\n  getValueFromDataField,\n  getValueFromOperations\n} from './helpers';\nimport { getEgldValueData } from './helpers/getEgldValueData';\nimport { getTitleText } from './helpers/getTitleText';\n\nexport interface GetTransactionValueReturnType {\n  egldValueData?: EgldValueDataType;\n  tokenValueData?: TokenValueDataType;\n  nftValueData?: NFTValueDataType;\n}\n\nexport interface GetTransactionValueType extends WithTransactionType {\n  hideMultipleBadge?: boolean;\n}\n\nexport const getTransactionValue = ({\n  transaction,\n  hideMultipleBadge\n}: GetTransactionValueType): GetTransactionValueReturnType => {\n  if (transaction.action) {\n    if (ACTIONS_WITH_EGLD_VALUE.includes(transaction.action.name)) {\n      return getEgldValueData(transaction.value);\n    }\n\n    if (ACTIONS_WITH_VALUE_IN_DATA_FIELD.includes(transaction.action.name)) {\n      return getValueFromDataField(transaction);\n    }\n\n    if (ACTIONS_WITH_MANDATORY_OPERATIONS.includes(transaction.action.name)) {\n      return getValueFromOperations(transaction);\n    }\n\n    if (ACTIONS_WITH_VALUE_IN_ACTION_FIELD.includes(transaction.action.name)) {\n      return getValueFromActions(transaction);\n    }\n\n    const transactionTokens = getTransactionTokens(transaction);\n\n    if (transactionTokens.length) {\n      const txToken = transactionTokens[0];\n      const isNft = Object.values(NftEnumType).includes(\n        txToken.type as NftEnumType\n      );\n\n      const hasTitleText = !hideMultipleBadge && transactionTokens.length > 1;\n      const titleText = hasTitleText ? getTitleText(transactionTokens) : '';\n\n      if (isNft) {\n        const {\n          badgeText,\n          tokenFormattedAmount,\n          tokenExplorerLink,\n          tokenLinkText\n        } = getTransactionActionNftText({ token: txToken });\n\n        return {\n          nftValueData: {\n            badgeText,\n            tokenFormattedAmount,\n            tokenExplorerLink,\n            tokenLinkText,\n            transactionTokens,\n            token: txToken,\n            value: tokenFormattedAmount != null ? txToken.value : null,\n            decimals: tokenFormattedAmount != null ? txToken.decimals : null,\n            titleText\n          }\n        };\n      }\n\n      const {\n        tokenExplorerLink,\n        showFormattedAmount,\n        tokenFormattedAmount,\n        tokenLinkText,\n        token\n      } = getTransactionActionTokenText({\n        token: txToken\n      });\n\n      return {\n        tokenValueData: {\n          tokenExplorerLink,\n          showFormattedAmount,\n          tokenFormattedAmount,\n          tokenLinkText,\n          transactionTokens,\n          token,\n          value: txToken.value,\n          decimals: txToken.decimals ?? DECIMALS,\n          titleText\n        }\n      };\n    }\n  }\n\n  return getEgldValueData(transaction.value);\n};\n", "import { ScamInfoType } from './account.types';\n\nexport interface TokenRolesType {\n  address: string;\n  roles: string[];\n}\n\nexport interface TokenLockedAccountType {\n  address: string;\n  name: string;\n  balance: string;\n}\nexport interface TokenSupplyType {\n  supply: number;\n  circulatingSupply: number;\n  minted: number;\n  burnt: number;\n  initialMinted: number;\n  lockedAccounts?: TokenLockedAccountType[];\n}\n\nexport interface TokenType {\n  identifier: string;\n  ticker?: string;\n  name: string;\n  balance?: string;\n  decimals?: number;\n  owner: string;\n  minted: string;\n  burnt: string;\n  supply: string | number;\n  circulatingSupply: string | number;\n  canBurn: boolean;\n  canChangeOwner: boolean;\n  canFreeze: boolean;\n  canMint: boolean;\n  canPause: boolean;\n  canUpgrade: boolean;\n  canWipe: boolean;\n  isPaused: boolean;\n  transactions: number;\n  accounts: number;\n  price?: number;\n  marketCap?: number;\n  valueUsd?: number;\n  assets?: {\n    website?: string;\n    description?: string;\n    status?: string;\n    pngUrl?: string;\n    svgUrl?: string;\n    social?: any;\n    extraTokens?: string[];\n    lockedAccounts?: { [key: string]: string };\n    ledgerSignature?: string;\n  };\n}\n\nexport interface CollectionType {\n  collection: string;\n  type: NftEnumType;\n  name: string;\n  ticker: string;\n  timestamp: number;\n  canFreeze: boolean;\n  canWipe: boolean;\n  canPause: boolean;\n  canTransferRole: boolean;\n  owner: string;\n  decimals?: number;\n  assets?: {\n    website?: string;\n    description?: string;\n    status?: string;\n    pngUrl?: string;\n    svgUrl?: string;\n  };\n  scamInfo?: ScamInfoType;\n}\n\nexport enum EsdtEnumType {\n  FungibleESDT = 'FungibleESDT'\n}\n\nexport enum NftEnumType {\n  NonFungibleESDT = 'NonFungibleESDT',\n  SemiFungibleESDT = 'SemiFungibleESDT',\n  MetaESDT = 'MetaESDT'\n}\n\nexport interface NftType {\n  identifier: string;\n  collection: string;\n  ticker?: string;\n  timestamp: number;\n  attributes: string;\n  nonce: number;\n  type: NftEnumType;\n  name: string;\n  creator: string;\n  royalties: number;\n  balance: string;\n  uris?: string[];\n  url?: string;\n  thumbnailUrl?: string;\n  tags?: string[];\n  decimals?: number;\n  owner?: string;\n  supply?: string;\n  isWhitelistedStorage?: boolean;\n  owners?: {\n    address: string;\n    balance: string;\n  }[];\n  assets?: {\n    website?: string;\n    description?: string;\n    status?: string;\n    pngUrl?: string;\n    svgUrl?: string;\n  };\n  metadata?: {\n    description?: string;\n    fileType?: string;\n    fileUri?: string;\n    fileName?: string;\n  };\n  media?: {\n    url: string;\n    originalUrl: string;\n    thumbnailUrl: string;\n    fileType: string;\n    fileSize: number;\n  }[];\n  scamInfo?: ScamInfoType;\n}\n", "import { TokenArgumentType } from 'types/serverTransactions.types';\nimport { NftEnumType } from 'types/tokens.types';\nimport { formatAmount } from 'utils/operations';\nimport { explorerUrlBuilder } from '../getInterpretedTransaction/helpers/explorerUrlBuilder';\n\nexport interface TransactionActionNftType {\n  token: TokenArgumentType;\n  noValue?: boolean;\n  showLastNonZeroDecimal?: boolean;\n}\nexport interface TransactionActionNftReturnType {\n  badgeText: string | null;\n  tokenFormattedAmount: string | null;\n  tokenExplorerLink: string;\n  tokenLinkText: string;\n  token: TokenArgumentType;\n  showLastNonZeroDecimal?: boolean;\n  noValue?: boolean;\n}\n\nexport function getTransactionActionNftText({\n  token,\n  noValue,\n  showLastNonZeroDecimal\n}: TransactionActionNftType): TransactionActionNftReturnType {\n  const isTokenAmountVisible =\n    !noValue && token.value && token.type !== NftEnumType.NonFungibleESDT;\n  const canShowFormattedAmount = token.decimals != null;\n\n  let badgeText = '';\n  if (token.type === NftEnumType.NonFungibleESDT) {\n    badgeText = 'NFT';\n  }\n  if (token.type === NftEnumType.SemiFungibleESDT) {\n    badgeText = 'SFT';\n  }\n  if (token.type === NftEnumType.MetaESDT) {\n    badgeText = 'Meta-ESDT';\n  }\n\n  let tokenFormattedAmount = '';\n  if (isTokenAmountVisible && canShowFormattedAmount) {\n    tokenFormattedAmount = canShowFormattedAmount\n      ? formatAmount({\n          input: token.value,\n          decimals: token.decimals,\n          digits: 2,\n          showLastNonZeroDecimal\n        })\n      : Number(token.value).toLocaleString('en');\n  }\n\n  const tokenExplorerLink = explorerUrlBuilder.nftDetails(\n    String(token.identifier)\n  );\n\n  const tokenLinkText =\n    token.ticker === token.collection\n      ? token.identifier ?? token.ticker\n      : token.ticker;\n\n  return {\n    badgeText,\n    tokenFormattedAmount: isTokenAmountVisible ? tokenFormattedAmount : null,\n    tokenExplorerLink,\n    tokenLinkText,\n    token,\n    noValue,\n    showLastNonZeroDecimal\n  };\n}\n", "export * from './denominate';\nexport * from './formatAmount';\nexport * from './nominate';\nexport * from './parseAmount';\nexport * from './calculateFeeLimit';\nexport * from './getUsdValue';\nexport * from './pipe';\nexport * from './timeRemaining';\nexport * from './truncate';\nexport * from './ledger';\nexport * from './calculateFeeInFiat';\n", "import { DECIMALS, DIGITS } from 'constants/index';\nimport { formatAmount } from './formatAmount';\n\nlet deprecationMessageDisplayed = false;\n\nexport interface DenominateType {\n  input: string;\n  denomination?: number;\n  decimals?: number;\n  showIsLessThanDecimalsLabel?: boolean;\n  showLastNonZeroDecimal?: boolean;\n  addCommas?: boolean;\n}\n\n/**\n * !!! This function is deprecated. Please use formatAmount instead.\n * */\nexport function denominate({\n  input,\n  denomination = DECIMALS,\n  decimals = DIGITS,\n  showLastNonZeroDecimal = true,\n  showIsLessThanDecimalsLabel = false,\n  addCommas = false\n}: DenominateType) {\n  if (!deprecationMessageDisplayed) {\n    console.warn(\n      '!!! Be aware !!! The \"denominate\" function is deprecated. Please use \"formatAmount\" instead.'\n    );\n\n    deprecationMessageDisplayed = true;\n  }\n\n  return formatAmount({\n    input,\n    decimals: denomination,\n    addCommas,\n    digits: decimals,\n    showIsLessThanDecimalsLabel,\n    showLastNonZeroDecimal\n  });\n}\n", "import { DECIMALS } from 'constants/index';\nimport { parseAmount } from './parseAmount';\n\nlet deprecationMessageDisplayed = false;\n\n/**\n * !!! This function is deprecated. Please use parseAmount instead.\n * */\nexport function nominate(amount: string, numDecimals: number = DECIMALS) {\n  if (!deprecationMessageDisplayed) {\n    console.warn(\n      '!!! Be aware !!! The \"nominate\" function is deprecated. Please use \"parseAmount\" instead.'\n    );\n    deprecationMessageDisplayed = true;\n  }\n\n  return parseAmount(amount, numDecimals);\n}\n", "import { TokenPayment } from '@multiversx/sdk-core';\nimport { DECIMALS } from 'constants/index';\n\nexport function parseAmount(amount: string, numDecimals: number = DECIMALS) {\n  return TokenPayment.fungibleFromAmount('', amount, numDecimals).toString();\n}\n", "import {\n  Transaction,\n  TransactionPayload,\n  TransactionVersion,\n  Address,\n  TokenPayment\n} from '@multiversx/sdk-core';\nimport BigNumber from 'bignumber.js';\nimport {\n  EXTRA_GAS_LIMIT_GUARDED_TX,\n  GAS_LIMIT,\n  GAS_PRICE,\n  ZERO\n} from 'constants/index';\nimport { isGuardianTx } from 'utils/transactions/isGuardianTx';\nimport { stringIsFloat, stringIsInteger } from 'utils/validation';\n\nexport interface CalculateFeeLimitType {\n  gasLimit: string;\n  gasPrice: string;\n  data: string;\n  gasPerDataByte: string;\n  gasPriceModifier: string;\n  chainId: string;\n  minGasLimit?: string;\n  defaultGasPrice?: string;\n}\nconst placeholderData = {\n  from: 'erd12dnfhej64s6c56ka369gkyj3hwv5ms0y5rxgsk2k7hkd2vuk7rvqxkalsa',\n  to: 'erd12dnfhej64s6c56ka369gkyj3hwv5ms0y5rxgsk2k7hkd2vuk7rvqxkalsa'\n};\nexport function calculateFeeLimit({\n  minGasLimit = String(GAS_LIMIT),\n  gasLimit,\n  gasPrice,\n  data: inputData,\n  gasPerDataByte,\n  gasPriceModifier,\n  defaultGasPrice = String(GAS_PRICE),\n  chainId\n}: CalculateFeeLimitType) {\n  const data = inputData || '';\n  const validGasLimit = stringIsInteger(gasLimit) ? gasLimit : minGasLimit;\n\n  // We need to add extra gas fee for guardian transactions\n  const extraGasLimit = isGuardianTx({ data }) ? EXTRA_GAS_LIMIT_GUARDED_TX : 0;\n  const usedGasLimit = new BigNumber(validGasLimit)\n    .plus(extraGasLimit)\n    .toNumber();\n\n  const validGasPrice = stringIsFloat(gasPrice) ? gasPrice : defaultGasPrice;\n  const transaction = new Transaction({\n    nonce: 0,\n    value: TokenPayment.egldFromAmount('0'),\n    receiver: new Address(placeholderData.to),\n    sender: new Address(placeholderData.to),\n    gasPrice: parseInt(validGasPrice),\n    gasLimit: usedGasLimit,\n    data: new TransactionPayload(data.trim()),\n    chainID: chainId,\n    version: new TransactionVersion(1)\n  });\n\n  try {\n    const bNfee = transaction.computeFee({\n      GasPerDataByte: parseInt(gasPerDataByte),\n      MinGasLimit: parseInt(minGasLimit),\n      GasPriceModifier: parseFloat(gasPriceModifier),\n      ChainID: chainId\n    });\n    return bNfee.toString(10);\n  } catch (err) {\n    console.error(err);\n    return ZERO;\n  }\n}\n", "export * from './stringIsInteger';\nexport * from './stringIsFloat';\nexport * from './maxDecimals';\nexport * from './getIdentifierType';\n", "import BigNumber from 'bignumber.js';\nimport { ZERO } from 'constants/index';\n\nexport const stringIsFloat = (amount: string) => {\n  if (isNaN(amount as any)) {\n    return false;\n  }\n  if (amount == null) {\n    return false;\n  }\n  if (String(amount).includes('Infinity')) {\n    return false;\n  }\n\n  // eslint-disable-next-line\n  let [wholes, decimals] = amount.split('.');\n  const LocalBigNumber = BigNumber.clone();\n\n  if (decimals) {\n    const areAllNumbers = decimals\n      .split('')\n      .every((digit) => !isNaN(parseInt(digit)));\n\n    LocalBigNumber.set({\n      DECIMAL_PLACES: areAllNumbers\n        ? decimals.length\n        : BigNumber.config().DECIMAL_PLACES\n    });\n\n    while (decimals.charAt(decimals.length - 1) === ZERO) {\n      decimals = decimals.slice(0, -1);\n    }\n  }\n  const number = decimals ? [wholes, decimals].join('.') : wholes;\n  const bNparsed = LocalBigNumber(number);\n\n  const output =\n    bNparsed.toString(10) === number && bNparsed.comparedTo(0) >= 0;\n\n  return output;\n};\n", "import { DECIMALS } from 'constants/index';\n\nexport const maxDecimals = (amount: string, customDecimals?: number) => {\n  const decimals = customDecimals === undefined ? DECIMALS : customDecimals;\n  if (\n    amount != null &&\n    amount.toString().indexOf('.') >= 0 &&\n    (amount as any).toString().split('.').pop().length > decimals\n  ) {\n    return false;\n  }\n  return true;\n};\n", "const esdtParts = 2;\nconst nftParts = 3;\n\nconst defaultResult = {\n  isEsdt: false,\n  isNft: false,\n  isEgld: false\n};\n\nexport function getIdentifierType(identifier?: string): {\n  isEsdt: boolean;\n  isNft: boolean;\n  isEgld: boolean;\n} {\n  const parts = identifier?.split('-').length;\n\n  if (parts === esdtParts) {\n    return {\n      ...defaultResult,\n      isEsdt: true\n    };\n  }\n  if (parts === nftParts) {\n    return {\n      ...defaultResult,\n      isNft: true\n    };\n  }\n  return {\n    ...defaultResult,\n    isEgld: true\n  };\n}\n", "export const getUsdValue = ({\n  amount,\n  usd,\n  decimals = 2,\n  addEqualSign\n}: {\n  amount: string;\n  usd: number;\n  decimals?: number;\n  addEqualSign?: boolean;\n}) => {\n  const sum = (parseFloat(amount) * usd).toFixed(decimals);\n  const formattedValue = parseFloat(sum).toLocaleString('en', {\n    maximumFractionDigits: decimals,\n    minimumFractionDigits: decimals\n  });\n  const equalSign = parseFloat(amount) > 0 ? '\u2248' : '=';\n  const equalSignPrefix = addEqualSign ? `${equalSign} ` : '';\n  return `${equalSignPrefix}$${formattedValue}`;\n};\n", "export function getRemainingTime(ms: number) {\n  const days = Math.floor(ms / (24 * 60 * 60 * 1000));\n  const daysms = ms % (24 * 60 * 60 * 1000);\n  const hrs = Math.floor(daysms / (60 * 60 * 1000));\n  const hrsms = daysms % (60 * 60 * 1000);\n  const mins = Math.floor(hrsms / (60 * 1000));\n  const minsms = hrsms % (60 * 1000);\n  const secs = Math.floor(minsms / 1000);\n\n  let secsString = secs + ' sec';\n  let minsString = mins + ' min';\n  let hrsString = hrs + ' hr';\n  let daysString = days + ' day';\n\n  if (secs > 1) {\n    secsString = secs + ' sec';\n  }\n  if (mins > 1) {\n    minsString = mins + ' min';\n  }\n  if (hrs > 1) {\n    hrsString = hrs + ' hrs';\n  }\n  if (days > 1) {\n    daysString = days + ' days';\n  }\n\n  if (days >= 1) {\n    return daysString + ' ' + hrsString;\n  }\n  if (hrs >= 1) {\n    const minutesString = mins === 0 ? '' : ' ' + minsString;\n    return hrsString + minutesString;\n  }\n  if (mins >= 1) {\n    const secString = secs === 0 ? '' : ' ' + secsString;\n    return minsString + secString;\n  }\n\n  return secsString;\n}\n\nfunction getShortDateTimeFormat(datetime: string) {\n  const parts = datetime.split(' ');\n  if (parts.length > 1) {\n    return `${parts[0]} ${parts[1]}`;\n  }\n  return datetime;\n}\n\nconst getUTCDateNow = (date = new Date(), extendedSeconds = 0) =>\n  Date.UTC(\n    date.getUTCFullYear(),\n    date.getUTCMonth(),\n    date.getUTCDate(),\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds() + extendedSeconds,\n    date.getUTCMilliseconds()\n  );\n\nfunction getUTCdiffInMs(duration: number) {\n  const date = new Date();\n  const startDate = getUTCDateNow(date);\n  const endDate = getUTCDateNow(date, duration);\n  const diffInMs = Math.max(endDate - startDate, 0);\n  return diffInMs;\n}\n\nexport function timeRemaining(duration: number, short = true) {\n  const diffInMs = getUTCdiffInMs(duration);\n  const remaining = getRemainingTime(diffInMs);\n  return short ? getShortDateTimeFormat(remaining) : remaining;\n}\n\nfunction getDifferenceInMs(timestamp: number) {\n  const dateNow = new Date().getTime();\n  const difference = dateNow - timestamp;\n  const diffInMs = Math.max(difference, 0);\n  return diffInMs;\n}\n\nexport function timeAgo(timestamp: number, short = true) {\n  const diffInMs = getDifferenceInMs(timestamp);\n  const remaining = getRemainingTime(diffInMs);\n\n  return short ? getShortDateTimeFormat(remaining) : remaining;\n}\n", "export function truncate(\n  text: string | undefined,\n  length: number,\n  end: string | undefined = '...'\n) {\n  if (isNaN(length)) {\n    length = 10;\n  }\n\n  if (!end) {\n    end = '...';\n  }\n\n  const showWholeText =\n    text != null &&\n    (text.length <= length || text.length - end.length <= length);\n\n  if (showWholeText) {\n    return text;\n  }\n\n  return String(text).substring(0, length - end.length) + end;\n}\n", "export * from './getLedgerVersionOptions';\n", "import {\n  LEDGER_HASH_SIGN_MINIMUM_VERSION,\n  LEDGER_MULTI_ACCOUNT_MINIMUM_VERSION,\n  LEDGER_SIGN_AUTH_TOKEN_MINIMUM_VERSION,\n  LEDGER_WITH_WHITELISTED_TOKENS_MINIMUM_VERSION,\n  LEDGER_WITH_GUARDIANS_MINIMUM_VERSION,\n  LEDGER_WITH_USERNAMES_MINIMUM_VERSION\n} from 'constants/index';\n\nfunction compareVersions(a: string, b: string) {\n  let i, diff;\n  const regExStrip0 = /(\\.0+)+$/;\n  const segmentsA = a.replace(regExStrip0, '').split('.');\n  const segmentsB = b.replace(regExStrip0, '').split('.');\n  const l = Math.min(segmentsA.length, segmentsB.length);\n\n  for (i = 0; i < l; i++) {\n    diff = parseInt(segmentsA[i], 10) - parseInt(segmentsB[i], 10);\n    if (diff) {\n      return diff;\n    }\n  }\n  return segmentsA.length - segmentsB.length;\n}\n\nexport function getLedgerVersionOptions(version: string) {\n  const sortedVersions = [\n    LEDGER_MULTI_ACCOUNT_MINIMUM_VERSION,\n    LEDGER_HASH_SIGN_MINIMUM_VERSION,\n    LEDGER_SIGN_AUTH_TOKEN_MINIMUM_VERSION,\n    LEDGER_WITH_WHITELISTED_TOKENS_MINIMUM_VERSION,\n    LEDGER_WITH_GUARDIANS_MINIMUM_VERSION,\n    LEDGER_WITH_USERNAMES_MINIMUM_VERSION,\n    version\n  ].sort((a, b) => compareVersions(a, b));\n\n  const indexOfMultiAccount = sortedVersions.indexOf(\n    LEDGER_MULTI_ACCOUNT_MINIMUM_VERSION\n  );\n  const indexOfHashSign = sortedVersions.indexOf(\n    LEDGER_HASH_SIGN_MINIMUM_VERSION\n  );\n  const indexOfSignAuthToken = sortedVersions.indexOf(\n    LEDGER_SIGN_AUTH_TOKEN_MINIMUM_VERSION\n  );\n  const indexOfWhitelistedTokens = sortedVersions.indexOf(\n    LEDGER_WITH_WHITELISTED_TOKENS_MINIMUM_VERSION\n  );\n  const indexOfGuardians = sortedVersions.indexOf(\n    LEDGER_WITH_GUARDIANS_MINIMUM_VERSION\n  );\n  const indexOfUsernames = sortedVersions.indexOf(\n    LEDGER_WITH_USERNAMES_MINIMUM_VERSION\n  );\n  const indexOfVersion = sortedVersions.indexOf(version);\n\n  return {\n    ledgerWithMultiAccount: indexOfVersion >= indexOfMultiAccount,\n    ledgerWithHashSign: indexOfVersion >= indexOfHashSign,\n    ledgerWithSignAuthToken: indexOfVersion >= indexOfSignAuthToken,\n    ledgerWithWhitelistedTokens: indexOfVersion >= indexOfWhitelistedTokens,\n    ledgerWithGuardians: indexOfVersion >= indexOfGuardians,\n    ledgerWithUsernames: indexOfVersion >= indexOfUsernames\n  };\n}\n\nexport default getLedgerVersionOptions;\n", "import { DIGITS, DECIMALS } from 'constants/index';\n\nimport { formatAmount } from './formatAmount';\nimport { getUsdValue } from './getUsdValue';\n\nexport interface CalculateFeeInFiatType {\n  feeLimit: string;\n  egldPriceInUsd: number;\n  hideEqualSign?: boolean;\n}\n\nexport const calculateFeeInFiat = ({\n  feeLimit,\n  egldPriceInUsd,\n  hideEqualSign\n}: CalculateFeeInFiatType) => {\n  const amount = formatAmount({\n    input: feeLimit,\n    decimals: DECIMALS,\n    digits: DIGITS,\n    showLastNonZeroDecimal: true\n  });\n\n  const feeAsUsdValue = getUsdValue({\n    amount,\n    usd: egldPriceInUsd,\n    decimals: DIGITS\n  });\n\n  if (hideEqualSign) {\n    return feeAsUsdValue;\n  }\n\n  return `\u2248 ${feeAsUsdValue}`;\n};\n", "import { DECIMALS } from 'constants/index';\nimport { TokenArgumentType } from 'types/serverTransactions.types';\nimport { formatAmount } from 'utils/operations';\nimport { explorerUrlBuilder } from '../getInterpretedTransaction/helpers/explorerUrlBuilder';\n\nexport interface TransactionActionTokenType {\n  token: TokenArgumentType;\n  noValue?: boolean;\n  showLastNonZeroDecimal?: boolean;\n}\nexport interface TransactionActionTokenReturnType {\n  tokenExplorerLink: string;\n  tokenFormattedAmount: string | null;\n  showFormattedAmount: boolean;\n  tokenLinkText: string;\n  token: TokenArgumentType;\n  showLastNonZeroDecimal?: boolean;\n}\n\nexport function getTransactionActionTokenText({\n  token,\n  noValue,\n  showLastNonZeroDecimal\n}: TransactionActionTokenType): TransactionActionTokenReturnType {\n  const showFormattedAmount = Boolean(!noValue && token.value);\n\n  const tokenFormattedAmount = showFormattedAmount\n    ? formatAmount({\n        input: token.value,\n        decimals: token.decimals ?? DECIMALS,\n        digits: 2,\n        showLastNonZeroDecimal,\n        addCommas: true\n      })\n    : null;\n\n  const tokenExplorerLink = explorerUrlBuilder.tokenDetails(\n    String(token.token)\n  );\n\n  const tokenLinkText = token.ticker;\n\n  return {\n    tokenExplorerLink,\n    tokenFormattedAmount,\n    showFormattedAmount,\n    tokenLinkText,\n    token,\n    showLastNonZeroDecimal\n  };\n}\n", "import { TransactionActionsEnum } from 'types/serverTransactions.types';\n\n/**\n * If `action.name` or `function` is in `ACTIONS_WITH_MANDATORY_OPERATIONS[]`, transaction value will be computed based `operations` field\n */\nexport const ACTIONS_WITH_MANDATORY_OPERATIONS = [\n  TransactionActionsEnum.reDelegateRewards,\n  TransactionActionsEnum.claimRewards,\n  TransactionActionsEnum.unBond\n];\n\n/**\n * If `action.name` is in `ACTIONS_WITH_EGLD_VALUE[]`, transaction value will be returned directly\n */\nexport const ACTIONS_WITH_EGLD_VALUE = [\n  TransactionActionsEnum.wrapEgld,\n  TransactionActionsEnum.unwrapEgld\n];\n\n/**\n * If `action.name` is in `ACTIONS_WITH_VALUE_IN_DATA_FIELD[]`, transaction value will be computed based `data` field\n */\nexport const ACTIONS_WITH_VALUE_IN_DATA_FIELD = [\n  TransactionActionsEnum.unStake\n];\n\n/**\n * If `action.name` is in `ACTIONS_WITH_VALUE_IN_ACTION_FIELD[]`, transaction value will be computed based `action` field\n */\nexport const ACTIONS_WITH_VALUE_IN_ACTION_FIELD = [\n  TransactionActionsEnum.unDelegate\n];\n", "export * from './getTitleText';\nexport * from './getEgldValueData';\nexport * from './getValueFromDataField';\nexport * from './getValueFromOperations';\nexport * from './getValueFromActions';\n", "import { TokenArgumentType } from 'types/serverTransactions.types';\nimport {\n  EgldValueDataType,\n  NFTValueDataType,\n  TokenValueDataType\n} from 'utils/transactions/getInterpretedTransaction/helpers/types';\nimport { getTransactionActionNftText } from 'utils/transactions/transactionInfoHelpers/getTransactionActionNftText';\nimport { getTransactionActionTokenText } from 'utils/transactions/transactionInfoHelpers/getTransactionActionTokenText';\nimport { getIdentifierType } from 'utils/validation/getIdentifierType';\n\nexport interface GetTransactionValueReturnType {\n  egldValueData?: EgldValueDataType;\n  tokenValueData?: TokenValueDataType;\n  nftValueData?: NFTValueDataType;\n}\n\nexport const getTitleText = (\n  transactionTokens: TokenArgumentType[]\n): string => {\n  const tokensArray = transactionTokens.map((transactionToken) => {\n    const { isNft } = getIdentifierType(transactionToken.type);\n    if (isNft) {\n      const { badgeText, tokenFormattedAmount, tokenLinkText } =\n        getTransactionActionNftText({\n          token: transactionToken\n        });\n\n      const badge = badgeText != null ? `(${badgeText}) ` : '';\n\n      const value = `${badge}${tokenFormattedAmount} ${tokenLinkText}`;\n      return value;\n    }\n    const { tokenFormattedAmount, tokenLinkText, token } =\n      getTransactionActionTokenText({\n        token: transactionToken as TokenArgumentType\n      });\n\n    const identifier = token.collection ? token.identifier : token.token;\n\n    const value = `${tokenFormattedAmount} ${tokenLinkText} (${identifier})`;\n    return value;\n  });\n\n  const joinedTokensWithLineBreak = decodeURI(tokensArray.join('%0A'));\n  return joinedTokensWithLineBreak;\n};\n", "import { DECIMALS } from 'constants/index';\nimport { formatAmount } from 'utils/operations/formatAmount';\n\nexport const getEgldValueData = (value: string) => ({\n  egldValueData: {\n    value,\n    formattedValue: formatAmount({ input: value }),\n    decimals: DECIMALS\n  }\n});\n", "import BigNumber from 'bignumber.js';\nimport { InterpretedTransactionType } from 'types/serverTransactions.types';\nimport { decodeBase64 } from 'utils/decoders';\nimport { getEgldValueData } from './getEgldValueData';\n\nlet warningLogged = false;\n\nexport function getValueFromDataField(transaction: InterpretedTransactionType) {\n  try {\n    const data = decodeBase64(transaction.data);\n    const encodedValue = data.replace(`${transaction.action?.name}@`, '');\n    const value = new BigNumber(encodedValue, 16);\n    if (!value.isNaN()) {\n      return getEgldValueData(value.toString(10));\n    }\n  } catch (err) {\n    if (!warningLogged) {\n      console.error(\n        `Unable to extract value for txHash: ${transaction.txHash}`\n      );\n      warningLogged = true;\n    }\n  }\n\n  // fallback on transaction value\n  return getEgldValueData(transaction.value);\n}\n", "import { InterpretedTransactionType } from 'types/serverTransactions.types';\nimport { getVisibleOperations } from 'utils/transactions/transactionInfoHelpers/getVisibleOperations';\nimport { getEgldValueData } from './getEgldValueData';\n\nlet warningLogged = false;\n\nconst logError = (hash: string) => {\n  if (!warningLogged) {\n    console.error(\n      `Operations field missing for txHash: ${hash}.\n        Unable to compute value field.`\n    );\n    warningLogged = true;\n  }\n};\n\nexport function getValueFromOperations(\n  transaction: InterpretedTransactionType\n) {\n  try {\n    if (transaction.operations) {\n      const [operation] = getVisibleOperations(transaction);\n      return getEgldValueData(operation?.value);\n    } else {\n      logError(transaction.txHash);\n    }\n  } catch (err) {\n    logError(transaction.txHash);\n  }\n  return getEgldValueData(transaction.value);\n}\n", "import {\n  InterpretedTransactionType,\n  VisibleTransactionOperationType\n} from 'types/serverTransactions.types';\n\nexport const getVisibleOperations = (\n  transaction: InterpretedTransactionType\n) => {\n  const operations =\n    transaction?.operations?.filter((operation) =>\n      Object.values<string>(VisibleTransactionOperationType).includes(\n        operation.type\n      )\n    ) ?? [];\n\n  return operations;\n};\n", "import BigNumber from 'bignumber.js';\nimport { InterpretedTransactionType } from 'types/serverTransactions.types';\nimport { getEgldValueData } from './getEgldValueData';\n\nlet warningLogged = false;\n\nexport function getValueFromActions(transaction: InterpretedTransactionType) {\n  const value = new BigNumber(transaction.action?.arguments?.value);\n\n  if (!value.isNaN()) {\n    return getEgldValueData(transaction.action?.arguments?.value);\n  }\n\n  if (!warningLogged) {\n    console.error(\n      `Unable to interpret ${transaction.action?.name} data for txHash: ${transaction.txHash}`\n    );\n    warningLogged = true;\n  }\n\n  // fallback on transaction value\n  return getEgldValueData(transaction.value);\n}\n", "import { explorerAddressSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport function getTransactionLink(\n  transactionHash: string,\n  explorerAddress: string = explorerAddressSelector(store.getState())\n) {\n  return `${explorerAddress}/transactions/${transactionHash}`;\n}\n", "export const getUnHighlightedDataFieldParts = ({\n  data,\n  highlight,\n  occurrences,\n  transactionIndex\n}: {\n  data: string;\n  highlight: string;\n  occurrences: number[];\n  transactionIndex: number;\n}) => {\n  const highlightIndex =\n    occurrences[transactionIndex] || data.indexOf(highlight);\n  const highlightLength = highlight.length;\n  const start = data.slice(0, highlightIndex);\n  const end = data.slice(highlightIndex + highlightLength);\n\n  return {\n    start,\n    end\n  };\n};\n", "export function isTokenTransfer({\n  tokenId,\n  erdLabel\n}: {\n  tokenId: string | undefined;\n  erdLabel: string;\n}) {\n  return Boolean(tokenId && tokenId !== erdLabel);\n}\n", "import BigNumber from 'bignumber.js';\nimport { MultiEsdtTransactionType, TransactionTypesEnum } from 'types';\nimport { decodePart } from 'utils/decoders/decodePart';\nimport { getAllStringOccurrences } from '../getAllStringOccurrences';\n\nexport function parseMultiEsdtTransferData(data?: string) {\n  const transactions: MultiEsdtTransactionType[] = [];\n  let contractCallDataIndex = 0;\n  try {\n    if (\n      data?.startsWith(TransactionTypesEnum.MultiESDTNFTTransfer) &&\n      data?.includes('@')\n    ) {\n      const [, receiver, encodedTxCount, ...rest] = data?.split('@');\n\n      if (receiver) {\n        const txCount = new BigNumber(encodedTxCount, 16).toNumber();\n\n        if (txCount >= Number.MAX_SAFE_INTEGER) {\n          return [];\n        }\n\n        let itemIndex = 0;\n\n        for (let txIndex = 0; txIndex < txCount; txIndex++) {\n          const transaction: MultiEsdtTransactionType = {\n            type: TransactionTypesEnum.nftTransaction,\n            data: '',\n            receiver\n          };\n\n          for (let index = 0; index < 3; index++) {\n            switch (index) {\n              case 0:\n                transaction.token = decodePart(rest[itemIndex]);\n                transaction.data = rest[itemIndex];\n                break;\n              case 1: {\n                const encodedNonce =\n                  rest[itemIndex] && rest[itemIndex].length\n                    ? rest[itemIndex]\n                    : '';\n                if (encodedNonce && encodedNonce !== '00') {\n                  transaction.nonce = encodedNonce;\n                } else {\n                  transaction.type = TransactionTypesEnum.esdtTransaction;\n                }\n                transaction.data = `${transaction.data}@${rest[itemIndex]}`;\n                break;\n              }\n              case 2:\n                transaction.amount = new BigNumber(\n                  rest[itemIndex],\n                  16\n                ).toString(10);\n                transaction.data = `${transaction.data}@${rest[itemIndex]}`;\n                break;\n              default:\n                break;\n            }\n            contractCallDataIndex = itemIndex + 1;\n            itemIndex++;\n          }\n          transactions[txIndex] = transaction;\n        }\n\n        const isDifferentFromTxCount = transactions.length !== txCount;\n        const hasInvalidNoOfAdSigns = transactions.some((tx) => {\n          const adSignOccurences = getAllStringOccurrences(tx.data, '@').length;\n          return adSignOccurences !== 2;\n        });\n\n        const hasAdStart = transactions.some((tx) => tx.data.startsWith('@'));\n        if (isDifferentFromTxCount || hasInvalidNoOfAdSigns || hasAdStart) {\n          return [];\n        }\n\n        if (rest[contractCallDataIndex]) {\n          let scCallData = rest[contractCallDataIndex];\n          for (let i = contractCallDataIndex + 1; i < rest.length; i++) {\n            scCallData += '@' + rest[i];\n          }\n          transactions[txCount] = {\n            type: TransactionTypesEnum.scCall,\n            data: scCallData,\n            receiver\n          };\n        }\n      }\n    }\n  } catch (err) {\n    console.error('failed parsing tx', err);\n    return transactions;\n  }\n  return transactions;\n}\n", "export const getAllStringOccurrences = (\n  sourceStr: string,\n  searchStr: string\n) => {\n  const startingIndices = [];\n\n  let indexOccurence = sourceStr.indexOf(searchStr, 0);\n\n  while (indexOccurence >= 0) {\n    startingIndices.push(indexOccurence);\n    indexOccurence = sourceStr.indexOf(searchStr, indexOccurence + 1);\n  }\n\n  return startingIndices;\n};\n", "import { Transaction } from '@multiversx/sdk-core/out';\nimport { PlainSignedTransaction } from '@multiversx/sdk-web-wallet-provider/out/plainSignedTransaction';\nimport { newTransaction } from 'models';\nimport { SignedTransactionType } from 'types';\nimport { TransactionServerStatusesEnum } from 'types/enums.types';\nimport { isGuardianTx } from './isGuardianTx';\n\nexport function parseTransactionAfterSigning(\n  signedTransaction: Transaction | PlainSignedTransaction\n) {\n  const isComplexTransaction =\n    Object.getPrototypeOf(signedTransaction).toPlainObject != null;\n\n  const transaction = isComplexTransaction\n    ? (signedTransaction as Transaction)\n    : newTransaction(signedTransaction as PlainSignedTransaction);\n\n  const parsedTransaction: SignedTransactionType = {\n    ...transaction.toPlainObject(),\n    hash: transaction.getHash().hex(),\n    senderUsername: transaction.getSenderUsername().valueOf(),\n    receiverUsername: transaction.getReceiverUsername().valueOf(),\n    status: TransactionServerStatusesEnum.pending\n  };\n\n  // TODO: Remove when the protocol supports usernames for guardian transactions\n  if (isGuardianTx({ data: parsedTransaction.data, onlySetGuardian: true })) {\n    delete parsedTransaction.senderUsername;\n    delete parsedTransaction.receiverUsername;\n  }\n\n  return parsedTransaction;\n}\n", "export * from './TransactionParameter';\nexport * from './newTransaction';\n", "import { Address } from '@multiversx/sdk-core';\n\nexport class TransactionParameter {\n  sender: Address;\n  receiver: Address;\n  functionName: string;\n  inputParameters: string[];\n  outputParameters: string[];\n\n  constructor(\n    sender: Address,\n    receiver: Address,\n    functionName: string,\n    inputParameters: string[],\n    outputParameters: string[]\n  ) {\n    this.sender = sender;\n    this.receiver = receiver;\n    this.functionName = functionName;\n    this.inputParameters = inputParameters;\n    this.outputParameters = outputParameters;\n  }\n}\n", "import { WALLET_PROVIDER_CALLBACK_PARAM } from '@multiversx/sdk-web-wallet-provider';\nimport { SDK_DAPP_VERSION, WALLET_SIGN_SESSION } from 'constants/index';\nimport { removeSearchParamsFromUrl } from '../removeSearchParamsFromUrl';\n\ninterface RemoveTransactionParamsFromUrlParamsType {\n  transaction: any;\n  search?: string;\n}\n\nexport const removeTransactionParamsFromUrl = ({\n  transaction,\n  search\n}: RemoveTransactionParamsFromUrlParamsType) => {\n  return removeSearchParamsFromUrl({\n    removeParams: [\n      ...Object.keys(transaction),\n      WALLET_PROVIDER_CALLBACK_PARAM,\n      WALLET_SIGN_SESSION,\n      SDK_DAPP_VERSION\n    ],\n    search\n  });\n};\n", "import qs from 'qs';\nimport { clearNavigationHistory } from 'utils/clearNavigationHistory';\nimport { isWindowAvailable } from 'utils/isWindowAvailable';\nimport { parseNavigationParams } from 'utils/parseNavigationParams';\n\ninterface RemoveSearchParamsFromUrlParamsType {\n  removeParams: string[];\n  search?: string;\n}\n\nexport const removeSearchParamsFromUrl = ({\n  removeParams,\n  search\n}: RemoveSearchParamsFromUrlParamsType) => {\n  const windowSearch = isWindowAvailable() ? window.location.search : '';\n  const defaultSearch = search ?? windowSearch;\n\n  if (!defaultSearch) {\n    return {};\n  }\n\n  const searchData = qs.parse(defaultSearch.replace('?', ''));\n\n  const preserveParams = Object.keys(searchData).filter(\n    (key) => !removeParams.includes(key)\n  );\n\n  const { remainingParams } = parseNavigationParams(preserveParams, {\n    search,\n    removeParams\n  });\n\n  clearNavigationHistory(remainingParams);\n\n  return remainingParams;\n};\n", "import { getWindowLocation } from './window';\n\nexport const clearNavigationHistory = (remainingParams: any) => {\n  const newUrlParams = new URLSearchParams(remainingParams).toString();\n  const { pathname, hash } = getWindowLocation();\n  const newSearch = newUrlParams ? `?${newUrlParams}` : '';\n  const fullPath = pathname ? `${pathname}${newSearch}${hash}` : './';\n\n  setTimeout(() => {\n    window?.history.replaceState({}, document?.title, fullPath);\n  });\n};\n", "import { clearNavigationHistory } from './clearNavigationHistory';\nimport { isWindowAvailable } from './isWindowAvailable';\n\ninterface ParseNavigationParamsOptionsType {\n  search?: string;\n  removeParams?: string[];\n}\n\nconst defaultOptions: ParseNavigationParamsOptionsType = {\n  search: isWindowAvailable() ? window.location.search : '',\n  removeParams: []\n};\n\n/**\n * @param preserveParams allows extracting params from URL search object\n * @param options.removeParams allows removing params from URL search object\n * @returns the selected params, search object with removed params, and the `clearNavigationHistory` helper\n */\nexport const parseNavigationParams = (\n  preserveParams: string[],\n  options = defaultOptions\n) => {\n  let params: Record<string, string> = {};\n  const defaultSearch = isWindowAvailable() ? window.location.search : '';\n  const search = options.search ?? defaultSearch;\n\n  if (search) {\n    const urlSearchParams = search ? new URLSearchParams(search) : [];\n    params = Object.fromEntries(urlSearchParams);\n  }\n\n  const remainingParams: Record<string, string> = {};\n\n  preserveParams.forEach((key) => {\n    remainingParams[key] = params[key];\n    delete params[key];\n  });\n\n  if (options.removeParams != null) {\n    Object.keys(params).forEach((entry) => {\n      // param is of type a=1 or a[1]=1\n      const [arrayEntry] = entry.split('[');\n      if (\n        options.removeParams?.includes(entry) ||\n        options.removeParams?.includes(arrayEntry)\n      ) {\n        delete params[entry];\n      }\n    });\n  }\n\n  return {\n    remainingParams,\n    params,\n    clearNavigationHistory: () => clearNavigationHistory(params)\n  };\n};\n", "export * from './getEventListDataHexValue';\nexport * from './getEventListHighlight';\nexport * from './getOperationDirection';\nexport * from './getScResultsDecodedData';\nexport * from './getScResultsHighlight';\nexport * from './getScamFlag';\nexport * from './getShardText';\nexport * from './getTransactionActionNftText';\nexport * from './getTransactionActionTokenText';\nexport * from './getTransactionFee';\nexport * from './getTransactionLinkWithLabel';\nexport * from './getTransactionMessages';\nexport * from './getTransactionStatus';\nexport * from './getTransactionStatusText';\nexport * from './getTrimmedHash';\nexport * from './getVisibleOperations';\nexport * from './transactionActionUnwrapper';\nexport * from './useDataDecode';\nexport * from './useDataDecodeMethod';\nexport * from './useGetOperationList';\n", "import { EventType } from 'types/serverTransactions.types';\n\nexport const getEventListDataHexValue = (event: EventType) => {\n  const dataBase64Buffer = Buffer.from(String(event?.data), 'base64');\n  const dataHexValue = dataBase64Buffer.toString('hex');\n  return dataHexValue;\n};\n", "import { EventType } from 'types/serverTransactions.types';\nimport { getWindowLocation } from 'utils/window/getWindowLocation';\n\nexport const getEventListHighlight = (event: EventType, id?: string) => {\n  const { hash } = getWindowLocation();\n  const hashValues = hash.split('/');\n  const formattedHash = hashValues[0] ? hashValues[0].replace('#', '') : '';\n  const eventOrder = hashValues[1] ?? 0;\n\n  const highlight = formattedHash === id && event.order === Number(eventOrder);\n\n  return highlight;\n};\n", "import { TransactionDirectionEnum } from 'types/serverTransactions.types';\n\nimport { WithOperationType } from '../../../UI/types';\n\nexport const getOperationDirection = ({\n  operation,\n  address\n}: { address: string } & WithOperationType) => {\n  const directionOut = address === operation.sender;\n  const directionIn = address === operation.receiver;\n  const directionSelf = directionOut && directionIn;\n  const directionInternal = !directionSelf;\n\n  let direction = '';\n  switch (true) {\n    case directionOut:\n      direction = TransactionDirectionEnum.OUT;\n      break;\n    case directionIn:\n      direction = TransactionDirectionEnum.IN;\n      break;\n    case directionSelf:\n      direction = TransactionDirectionEnum.SELF;\n      break;\n    case directionInternal:\n      direction = TransactionDirectionEnum.INTERNAL;\n      break;\n  }\n\n  return {\n    direction\n  };\n};\n", "import { decodePart } from 'utils/decoders/decodePart';\n\nexport const getScResultsDecodedData = (data: string) => {\n  const parts = Buffer.from(data, 'base64').toString().split('@');\n\n  if (parts.length >= 2) {\n    if (parts[0].length > 0) {\n      parts[0] = decodePart(parts[0]);\n    } else {\n      parts[1] = decodePart(parts[1]);\n    }\n  }\n\n  return parts.join('@');\n};\n", "import { getWindowLocation } from 'utils/window/getWindowLocation';\n\nexport const getScResultsHighlight = (resultHash: string) => {\n  const { hash } = getWindowLocation();\n  const formattedHash = hash\n    .substring(0, hash.indexOf('/') > 0 ? hash.indexOf('/') : hash.length)\n    .replace('#', '');\n  const highlight = formattedHash === resultHash;\n  return highlight;\n};\n", "import * as linkify from 'linkifyjs';\nimport {\n  SuspiciousLinkType,\n  SuspiciousLinkPropsType,\n  TextWithLinksType\n} from 'types';\n\nexport const getTextWithLinks = (text: string): TextWithLinksType => {\n  const links = linkify.find(text);\n\n  // If no links are present in the text, return the text unmodified\n  if (!links.length) {\n    return {\n      textWithLinks: text,\n      hasLinks: false\n    };\n  }\n\n  let textWithLinks = text;\n\n  // Replace the previous links in text with normalized links\n  for (const link of links) {\n    const previousLink = text.substring(link.start, link.end);\n    textWithLinks = textWithLinks.replace(previousLink, link.value);\n  }\n\n  return {\n    textWithLinks,\n    hasLinks: true\n  };\n};\n\n/**\n * @description It checks if an asset contains suspicious info\n * If it contains text with links inside, it contains scam info, or it is marked as NSFW,\n * then it has suspicious info and may be a scam\n */\nexport const getScamFlag = ({\n  message,\n  scamInfo,\n  isNsfw,\n  verified,\n  messagePrefix = 'Message hidden due to suspicious content - '\n}: SuspiciousLinkPropsType): SuspiciousLinkType => {\n  if (verified) {\n    return {\n      message: '',\n      textWithLinks: '',\n      isSuspicious: false\n    };\n  }\n\n  const outputMessage = `${messagePrefix}${\n    scamInfo?.info ?? 'suspicious content'\n  }`;\n  const { textWithLinks, hasLinks } = getTextWithLinks(message);\n\n  if (hasLinks || isNsfw || scamInfo) {\n    return {\n      message: outputMessage,\n      textWithLinks,\n      isSuspicious: true\n    };\n  }\n\n  return {\n    message: '',\n    textWithLinks,\n    isSuspicious: false\n  };\n};\n", "import { ALL_SHARDS_SHARD_ID, METACHAIN_SHARD_ID } from 'constants/index';\n\nexport const getShardText = (shard: number | string) => {\n  let shardText = shard;\n\n  if (typeof shardText === 'string' && shardText.includes('Shard')) {\n    shardText = shardText.replace('Shard', '').replace(' ', '');\n  }\n\n  const isMetachain =\n    METACHAIN_SHARD_ID.toString() === String(shardText).toString() ||\n    String(shardText) === 'metachain';\n\n  const isAllShards =\n    ALL_SHARDS_SHARD_ID.toString() === String(shardText).toString();\n\n  if (isMetachain) {\n    return 'Metachain';\n  }\n  if (isAllShards) {\n    return 'All Shards';\n  }\n  return `Shard ${shardText}`;\n};\n", "import BigNumber from 'bignumber.js';\nimport { InterpretedTransactionType } from 'types';\n\nconst getFee = (transaction: InterpretedTransactionType) => {\n  const bNgasPrice = new BigNumber(transaction.gasPrice);\n  const bNgasUsed = new BigNumber(transaction.gasUsed);\n  const output = bNgasPrice.times(bNgasUsed).toString();\n\n  return output;\n};\n\nexport function getTransactionFee(transaction: InterpretedTransactionType) {\n  if (transaction.fee) {\n    return transaction.fee;\n  }\n\n  if (transaction.gasUsed === undefined) {\n    return null;\n  }\n\n  return getFee(transaction);\n}\n", "import {\n  InterpretedTransactionType,\n  TransactionDirectionEnum,\n  TransactionLinkType\n} from 'types';\n\nexport interface GetTransactionLinkWithLabelParamsType {\n  transaction: InterpretedTransactionType;\n  direction: TransactionDirectionEnum;\n}\n\nexport const getTransactionLinkWithLabel = ({\n  transaction,\n  direction\n}: GetTransactionLinkWithLabelParamsType): TransactionLinkType => {\n  const isSmartContract = direction === TransactionDirectionEnum.INTERNAL;\n  let address = transaction.sender;\n\n  if (isSmartContract) {\n    return {\n      link: transaction.links.senderLink ?? '',\n      label: 'Smart Contract transaction',\n      address\n    };\n  }\n\n  const isOut = direction === TransactionDirectionEnum.OUT;\n\n  const link = isOut\n    ? transaction.links.receiverLink\n    : transaction.links.senderLink;\n\n  let label = '';\n\n  const isSelf = direction === TransactionDirectionEnum.SELF;\n\n  if (isSelf && transaction.receiverAssets) {\n    label = transaction.receiverAssets.name;\n  } else {\n    address = isOut ? transaction.receiver : transaction.sender;\n    label = isOut ? 'To:' : 'From:';\n  }\n\n  return {\n    label,\n    address,\n    link: link ?? ''\n  };\n};\n", "import { InterpretedTransactionType } from 'types';\nimport { getOperationsMessages } from '../getInterpretedTransaction/helpers/getOperationsMessages';\nimport { getReceiptMessage } from '../getInterpretedTransaction/helpers/getReceiptMessage';\nimport getScResultsMessages from '../getInterpretedTransaction/helpers/getScResultsMessages';\n\nexport function getTransactionMessages(\n  transaction: InterpretedTransactionType\n) {\n  const transactionMessages = Array.from(\n    new Set([\n      ...getScResultsMessages(transaction),\n      ...getOperationsMessages(transaction),\n      getReceiptMessage(transaction)\n    ])\n  ).filter((el) => Boolean(el));\n  return transactionMessages;\n}\n", "import { TransactionServerStatusesEnum } from 'types/enums.types';\nimport { InterpretedTransactionType } from 'types/serverTransactions.types';\n\nexport function getTransactionStatus(transaction: InterpretedTransactionType) {\n  const statusIs = (compareTo: string) =>\n    transaction.status.toLowerCase() === compareTo.toLowerCase();\n\n  const failed =\n    statusIs(TransactionServerStatusesEnum.fail) ||\n    statusIs(TransactionServerStatusesEnum.rewardReverted);\n  const success = statusIs(TransactionServerStatusesEnum.success);\n  const invalid =\n    statusIs(TransactionServerStatusesEnum.notExecuted) ||\n    statusIs(TransactionServerStatusesEnum.invalid);\n  const pending =\n    statusIs(TransactionServerStatusesEnum.pending) ||\n    transaction.pendingResults;\n  return {\n    failed,\n    success,\n    invalid,\n    pending\n  };\n}\n", "import { TransactionServerStatusesEnum } from 'types/enums.types';\nimport { InterpretedTransactionType } from 'types/serverTransactions.types';\n\nexport const getTransactionStatusText = (\n  transaction: InterpretedTransactionType\n) => {\n  switch (true) {\n    case transaction.pendingResults:\n      return 'Pending (Smart Contract Execution)';\n    case transaction.status === TransactionServerStatusesEnum.rewardReverted:\n      return TransactionServerStatusesEnum.fail;\n    default:\n      return transaction.status.toString();\n  }\n};\n", "export const getTrimmedHash = (address: string, divider = 4): string =>\n  `${address.substring(\n    0,\n    Math.floor(address.length / divider)\n  )}...${address.substring(\n    address.length - Math.ceil(address.length / divider)\n  )}`;\n", "export * from './transactionActionUnwrapper';\n", "import {\n  TransactionActionType,\n  UnwrapperType,\n  TransactionActionCategoryEnum\n} from 'types/serverTransactions.types';\nimport { esdtNftUnwrapper } from './helpers/esdtNftUnwrapper';\nimport { mexUnwrapper } from './helpers/mexUnwrapper';\nimport { stakeUnwrapper } from './helpers/stakeUnwrapper';\n\nexport const transactionActionUnwrapper = (\n  action: TransactionActionType\n): Array<string | UnwrapperType> => {\n  if (!action.arguments) {\n    return action.description ? [action.description] : [action.name];\n  }\n\n  switch (action.category) {\n    case TransactionActionCategoryEnum.esdtNft:\n      return esdtNftUnwrapper(action);\n    case TransactionActionCategoryEnum.mex:\n      return mexUnwrapper(action);\n    case TransactionActionCategoryEnum.stake:\n      return stakeUnwrapper(action);\n    default:\n      return action.description ? [action.description] : [];\n  }\n};\n", "import {\n  TransactionActionType,\n  UnwrapperType,\n  TransactionActionsEnum\n} from 'types/serverTransactions.types';\n\nexport const esdtNftUnwrapper = (\n  action: TransactionActionType\n): Array<string | UnwrapperType> => {\n  switch (action.name) {\n    case TransactionActionsEnum.transfer:\n      return [\n        'Transfer',\n        { token: action.arguments?.transfers },\n        'to',\n        { address: action.arguments?.receiver }\n      ];\n\n    default:\n      return [];\n  }\n};\n", "import BigNumber from 'bignumber.js';\nimport { ZERO } from 'constants/index';\nimport {\n  TransactionActionType,\n  UnwrapperType,\n  TransactionActionsEnum\n} from 'types/serverTransactions.types';\n\nexport const mexUnwrapper = (\n  action: TransactionActionType\n): Array<string | UnwrapperType> => {\n  switch (action.name) {\n    // distribution\n    case TransactionActionsEnum.claimLockedAssets:\n      return ['Claim locked assets'];\n    // farm\n    case TransactionActionsEnum.enterFarm:\n    case TransactionActionsEnum.enterFarmProxy: {\n      return ['Enter farm with', { token: action.arguments?.transfers }];\n    }\n    case TransactionActionsEnum.enterFarmAndLockRewards:\n    case TransactionActionsEnum.enterFarmAndLockRewardsProxy:\n      return [\n        'Enter farm and lock rewards with',\n        { token: action.arguments?.transfers }\n      ];\n    case TransactionActionsEnum.exitFarm:\n    case TransactionActionsEnum.exitFarmProxy:\n      return ['Exit farm with', { token: action.arguments?.transfers }];\n    case TransactionActionsEnum.claimRewards:\n    case TransactionActionsEnum.claimRewardsProxy:\n      return ['Claim rewards', { token: action.arguments?.transfers }];\n    case TransactionActionsEnum.compoundRewards:\n    case TransactionActionsEnum.compoundRewardsProxy:\n      return ['Reinvest rewards', { token: action.arguments?.transfers }];\n    // pairs\n    case TransactionActionsEnum.swapTokensFixedInput:\n    case TransactionActionsEnum.swap:\n      return action.description ? [action.description] : [];\n    case TransactionActionsEnum.swapTokensFixedOutput:\n      return action.description ? [action.description] : [];\n    case TransactionActionsEnum.addLiquidity:\n    case TransactionActionsEnum.addLiquidityProxy:\n      return [\n        'Added liquidity for',\n        { token: [action.arguments?.transfers[0]] },\n        'and',\n        { token: [action.arguments?.transfers[1]] }\n      ];\n    case TransactionActionsEnum.removeLiquidity:\n    case TransactionActionsEnum.removeLiquidityProxy:\n      return [\n        'Removed liquidity with ',\n        { token: action.arguments?.transfers }\n      ];\n    case TransactionActionsEnum.mergeLockedAssetTokens:\n      let value = ZERO;\n      if (action.arguments?.transfers) {\n        const values = action.arguments.transfers.map(\n          ({ value }: { value: string }) => value\n        );\n        value = BigNumber.sum.apply(null, values).toString(10);\n      }\n      return [\n        `Merge ${action.arguments?.transfers.length}`,\n        { tokenNoLink: [action.arguments?.transfers[0]] },\n        'positions into a single',\n        { tokenNoLink: [action.arguments?.transfers[0]] },\n        'position of value',\n        { value }\n      ];\n    case TransactionActionsEnum.wrapEgld:\n    case TransactionActionsEnum.unwrapEgld:\n    default:\n      return action.description ? [action.description] : [];\n  }\n};\n", "import {\n  TransactionActionType,\n  UnwrapperType,\n  TransactionActionsEnum\n} from 'types/serverTransactions.types';\n\nexport const stakeUnwrapper = (\n  action: TransactionActionType\n): Array<string | UnwrapperType> => {\n  switch (action.name) {\n    case TransactionActionsEnum.delegate:\n    case TransactionActionsEnum.stake:\n      return [\n        'Delegate',\n        { egldValue: action.arguments?.value },\n        'to staking provider',\n        {\n          providerName: action.arguments?.providerName,\n          providerAvatar: action.arguments?.providerAvatar\n        }\n      ];\n    case TransactionActionsEnum.unDelegate:\n      return [\n        'Undelegate',\n        { egldValue: action.arguments?.value },\n        'from staking provider',\n        {\n          providerName: action.arguments?.providerName,\n          providerAvatar: action.arguments?.providerAvatar\n        }\n      ];\n    case TransactionActionsEnum.stakeClaimRewards:\n      return [\n        'Claim rewards from staking provider',\n        {\n          providerName: action.arguments?.providerName,\n          providerAvatar: action.arguments?.providerAvatar\n        }\n      ];\n    case TransactionActionsEnum.reDelegateRewards:\n      return [\n        'Redelegate rewards from staking provider',\n        {\n          providerName: action.arguments?.providerName,\n          providerAvatar: action.arguments?.providerAvatar\n        }\n      ];\n    case TransactionActionsEnum.withdraw:\n      return [\n        'Withdraw from staking provider',\n        {\n          providerName: action.arguments?.providerName,\n          providerAvatar: action.arguments?.providerAvatar\n        }\n      ];\n\n    default:\n      return [];\n  }\n};\n", "import { useEffect, useState, SetStateAction, Dispatch } from 'react';\n\nimport { DecodeMethodEnum } from 'types';\nimport { decodeForDisplay } from './decodeForDisplay';\n\nexport interface DataDecodeType {\n  value: string;\n  className?: string;\n  initialDecodeMethod?: DecodeMethodEnum | string;\n  setDecodeMethod?: Dispatch<SetStateAction<string>>;\n  identifier?: string;\n}\n\nconst decodeOptions = [\n  {\n    label: 'Raw',\n    value: DecodeMethodEnum.raw\n  },\n  {\n    label: 'Text',\n    value: DecodeMethodEnum.text\n  },\n  {\n    label: 'Decimal',\n    value: DecodeMethodEnum.decimal\n  },\n  {\n    label: 'Smart',\n    value: DecodeMethodEnum.smart\n  }\n];\n\nexport const useDataDecode = ({\n  value,\n  initialDecodeMethod,\n  setDecodeMethod,\n  identifier\n}: DataDecodeType) => {\n  const [activeKey, setActiveKey] = useState(\n    initialDecodeMethod &&\n      Object.values<string>(DecodeMethodEnum).includes(initialDecodeMethod)\n      ? initialDecodeMethod\n      : DecodeMethodEnum.raw\n  );\n\n  const { displayValue, validationWarnings } = decodeForDisplay({\n    input: value,\n    decodeMethod: activeKey as DecodeMethodEnum,\n    identifier\n  });\n\n  useEffect(() => {\n    if (setDecodeMethod) {\n      setDecodeMethod(activeKey);\n    }\n  }, [activeKey]);\n\n  return {\n    displayValue,\n    validationWarnings,\n    setActiveKey,\n    decodeOptions\n  };\n};\n", "export * from './decodeForDisplay';\n", "import {\n  DecodedDisplayType,\n  DecodeForDisplayPropsType,\n  DecodeMethodEnum\n} from 'types/serverTransactions.types';\n\nimport {\n  decodeByMethod,\n  getDisplayValueAndValidationWarnings,\n  getSmartDecodedParts\n} from './helpers';\n\nexport const decodeForDisplay = ({\n  input,\n  decodeMethod,\n  identifier\n}: DecodeForDisplayPropsType) => {\n  const display: DecodedDisplayType = {\n    displayValue: '',\n    validationWarnings: []\n  };\n\n  if (!input.includes('@') && !input.includes('\\n')) {\n    display.displayValue = decodeByMethod(input, decodeMethod);\n\n    return display;\n  }\n\n  if (input.includes('@')) {\n    const parts = input.split('@');\n    const decodedParts = getDisplayValueAndValidationWarnings({\n      parts,\n      identifier,\n      decodeMethod,\n      display\n    });\n\n    display.displayValue = decodedParts.join('@');\n  }\n\n  if (input.includes('\\n')) {\n    const parts = input.split('\\n');\n    const initialDecodedParts = parts.map((part) => {\n      const base64Buffer = Buffer.from(part, 'base64');\n\n      if (decodeMethod === DecodeMethodEnum.raw) {\n        return part;\n      }\n\n      return decodeByMethod(base64Buffer.toString('hex'), decodeMethod);\n    });\n\n    const decodedParts =\n      decodeMethod === DecodeMethodEnum.smart\n        ? getSmartDecodedParts({\n            parts,\n            decodedParts: initialDecodedParts,\n            identifier\n          })\n        : initialDecodedParts;\n\n    display.displayValue = decodedParts.join('\\n');\n  }\n\n  return display;\n};\n", "export * from './decodeByMethod';\nexport * from './getDisplayValueAndValidationWarnings';\nexport * from './getHexValidationWarnings';\nexport * from './getSmartDecodedParts';\n", "import { Address } from '@multiversx/sdk-core/out';\nimport BigNumber from 'bignumber.js';\nimport {\n  DecodeMethodEnum,\n  TransactionTokensType\n} from 'types/serverTransactions.types';\nimport { addressIsValid } from 'utils/account/addressIsValid';\nimport { isUtf8 } from 'utils/decoders';\n\nexport const decodeByMethod = (\n  part: string,\n  decodeMethod: DecodeMethodEnum | string,\n  transactionTokens?: TransactionTokensType\n) => {\n  switch (decodeMethod) {\n    case DecodeMethodEnum.text:\n      try {\n        return Buffer.from(part, 'hex').toString('utf8');\n      } catch {}\n\n      return part;\n    case DecodeMethodEnum.decimal:\n      return part !== '' ? new BigNumber(part, 16).toString(10) : '';\n    case DecodeMethodEnum.smart:\n      try {\n        const bech32Encoded = Address.fromHex(part).toString();\n\n        if (addressIsValid(bech32Encoded)) {\n          return bech32Encoded;\n        }\n      } catch {}\n\n      try {\n        const decoded = Buffer.from(part, 'hex').toString('utf8');\n\n        if (!isUtf8(decoded)) {\n          if (transactionTokens) {\n            const tokens = [\n              ...transactionTokens.esdts,\n              ...transactionTokens.nfts\n            ];\n\n            if (tokens.some((token) => decoded.includes(token))) {\n              return decoded;\n            }\n          }\n\n          const bn = new BigNumber(part, 16);\n\n          return bn.isFinite() ? bn.toString(10) : part;\n        } else {\n          return decoded;\n        }\n      } catch {}\n\n      return part;\n    case DecodeMethodEnum.raw:\n    default:\n      return part;\n  }\n};\n", "import { DecodeMethodEnum, DecodedDisplayType } from 'types';\nimport { decodeByMethod } from './decodeByMethod';\nimport { getHexValidationWarnings } from './getHexValidationWarnings';\nimport { getSmartDecodedParts } from './getSmartDecodedParts';\n\ninterface GetDecodedPartsPropsType {\n  parts: string[];\n  decodeMethod: DecodeMethodEnum;\n  identifier?: string;\n  display: DecodedDisplayType;\n}\n\nexport const getDisplayValueAndValidationWarnings = ({\n  parts,\n  decodeMethod,\n  identifier,\n  display\n}: GetDecodedPartsPropsType) => {\n  const initialDecodedParts = parts.map((part, index) => {\n    if (\n      parts.length >= 2 &&\n      ((index === 0 && part.length < 64) || (index === 1 && !parts[0]))\n    ) {\n      const encodedDisplayValue = /[^a-z0-9]/gi.test(part);\n      if (encodedDisplayValue) {\n        return decodeByMethod(part, decodeMethod);\n      } else {\n        return part;\n      }\n    } else {\n      const hexValidationWarnings = getHexValidationWarnings(part);\n      if (hexValidationWarnings.length) {\n        display.validationWarnings = Array.from(\n          new Set([...display.validationWarnings, ...hexValidationWarnings])\n        );\n      }\n\n      return decodeByMethod(part, decodeMethod);\n    }\n  });\n\n  const decodedParts =\n    decodeMethod === DecodeMethodEnum.smart\n      ? getSmartDecodedParts({\n          parts,\n          decodedParts: initialDecodedParts,\n          identifier\n        })\n      : initialDecodedParts;\n\n  return decodedParts;\n};\n", "export const isHexValidCharacters = (str: string) => {\n  return str.toLowerCase().match(/^[0-9a-f]+$/i);\n};\n\nexport const isHexValidLength = (str: string) => {\n  return str.length % 2 === 0;\n};\n\nexport const getHexValidationWarnings = (str: string) => {\n  const warnings = [];\n\n  if (str && !isHexValidCharacters(str)) {\n    warnings.push(`Invalid Hex characters on argument @${str}`);\n  }\n\n  if (str && !isHexValidLength(str)) {\n    warnings.push(`Odd number of Hex characters on argument @${str}`);\n  }\n\n  return warnings;\n};\n", "import { DecodeMethodEnum, TransactionTypesEnum } from 'types';\nimport { decodeByMethod } from './decodeByMethod';\n\ninterface SmartDecodedPartsType {\n  parts: string[];\n  decodedParts: string[];\n  identifier?: string;\n}\n\nexport const getSmartDecodedParts = ({\n  parts,\n  decodedParts,\n  identifier\n}: SmartDecodedPartsType) => {\n  const updatedParts = [...decodedParts];\n\n  if (parts[0] === TransactionTypesEnum.ESDTNFTTransfer && parts[2]) {\n    updatedParts[2] = decodeByMethod(parts[2], DecodeMethodEnum.decimal);\n  }\n\n  if (identifier === TransactionTypesEnum.ESDTNFTTransfer && parts[1]) {\n    const base64Buffer = Buffer.from(String(parts[1]), 'base64');\n    updatedParts[1] = decodeByMethod(\n      base64Buffer.toString('hex'),\n      DecodeMethodEnum.decimal\n    );\n  }\n\n  return updatedParts;\n};\n", "import { useEffect, useState } from 'react';\nimport { DecodeMethodEnum } from 'types';\nimport { getWindowLocation } from 'utils/window/getWindowLocation';\n\nexport const useDataDecodeMethod = () => {\n  const { hash, pathname } = getWindowLocation();\n  const hashDecodeMethod = hash.replace('#', '');\n  const initialDecodeMethod =\n    hashDecodeMethod &&\n    Object.values<string>(DecodeMethodEnum).includes(hashDecodeMethod)\n      ? hashDecodeMethod\n      : DecodeMethodEnum.raw;\n  const [decodeMethod, setDecodeMethod] = useState<string>(hashDecodeMethod);\n\n  useEffect(() => {\n    if (decodeMethod && decodeMethod !== DecodeMethodEnum.raw) {\n      window?.history.replaceState(\n        {},\n        document?.title,\n        `${pathname}#${decodeMethod}`\n      );\n    }\n  }, [decodeMethod, pathname]);\n\n  return { initialDecodeMethod, decodeMethod, setDecodeMethod };\n};\n", "import { useState } from 'react';\nimport {\n  OperationType,\n  TransactionOperationActionTypeEnum\n} from 'types/serverTransactions.types';\n\nimport { WithTransactionType } from '../../../UI/types';\n\nexport const internalTransactionActions = [\n  TransactionOperationActionTypeEnum.create,\n  TransactionOperationActionTypeEnum.localMint,\n  TransactionOperationActionTypeEnum.ESDTLocalMint,\n  TransactionOperationActionTypeEnum.addQuantity,\n  TransactionOperationActionTypeEnum.burn,\n  TransactionOperationActionTypeEnum.localBurn,\n  TransactionOperationActionTypeEnum.ESDTLocalBurn,\n  TransactionOperationActionTypeEnum.wipe,\n  TransactionOperationActionTypeEnum.writeLog,\n  TransactionOperationActionTypeEnum.signalError\n];\n\nenum ButtonTextEnum {\n  inOut = 'Show in/out operations',\n  fewer = 'Show fewer operations',\n  all = 'Show all operations'\n}\n\nexport interface OperationListType extends WithTransactionType {\n  operations: OperationType[];\n  listLength?: number;\n}\n\nexport function getOperationList({\n  operations,\n  transaction,\n  isExpanded = false,\n  listLength = 25\n}: OperationListType & {\n  isExpanded?: boolean;\n}) {\n  const filteredOperations = operations.filter(\n    (operation) =>\n      !internalTransactionActions.includes(operation.action) &&\n      (operation.sender === transaction.sender ||\n        operation.receiver === transaction.sender)\n  );\n\n  const importantOperations =\n    filteredOperations.length > 0 ? filteredOperations : operations;\n\n  const displayedOperations =\n    importantOperations.length > listLength\n      ? importantOperations.slice(0, listLength)\n      : importantOperations;\n\n  const collapsedOperations =\n    importantOperations.length > listLength\n      ? importantOperations.slice(listLength, importantOperations.length)\n      : [];\n\n  const toggleButtonText = isExpanded\n    ? filteredOperations.length > 0\n      ? ButtonTextEnum.inOut\n      : ButtonTextEnum.fewer\n    : ButtonTextEnum.all;\n\n  const showToggleButton =\n    displayedOperations.length !== operations.length ||\n    collapsedOperations.length > 0;\n\n  return {\n    displayedOperations: isExpanded ? operations : displayedOperations,\n    toggleButtonText,\n    showToggleButton\n  };\n}\n\nexport function useGetOperationList(props: OperationListType) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const onToggleButtonClick = () => {\n    setIsExpanded((existing) => !existing);\n  };\n\n  const { displayedOperations, showToggleButton, toggleButtonText } =\n    getOperationList({ ...props, isExpanded });\n\n  return {\n    isExpanded,\n    displayedOperations,\n    showToggleButton,\n    toggleButtonText,\n    onToggleButtonClick\n  };\n}\n", "import { InterpretedTransactionType, OperationType } from 'types';\nimport { getVisibleOperations } from 'utils/transactions';\n\nexport type OperationDetailsPropsType = {\n  transaction: InterpretedTransactionType;\n  filterBy?: {\n    action?: OperationType['action'];\n    sender?: OperationType['sender'];\n    receiver?: OperationType['receiver'];\n  };\n};\n\nexport const getOperationsDetails = ({\n  transaction,\n  filterBy\n}: OperationDetailsPropsType): OperationType[] => {\n  if (!transaction.operations) {\n    return [];\n  }\n\n  const operations = getVisibleOperations(transaction);\n\n  if (operations.length === 0) {\n    return [];\n  }\n\n  if (!filterBy) {\n    return operations;\n  }\n\n  const { action, receiver, sender } = filterBy;\n\n  const filteredOperations = operations.filter((operation) => {\n    if (action && operation.action !== action) {\n      return false;\n    }\n\n    if (sender && operation.sender !== sender) {\n      return false;\n    }\n\n    if (receiver && operation.receiver !== receiver) {\n      return false;\n    }\n\n    return true;\n  });\n\n  return filteredOperations;\n};\n", "export * from './ConfirmationScreen';\nexport * from './DeviceConfirmationScreen';\nexport * from './confirmationScreen.types';\nexport * from './TransactionStatusToast';\nexport * from './SignWaitingScreenModal';\n", "import React from 'react';\nimport {\n  useGetAccountProvider,\n  useGetSignTransactionsError,\n  useSignTransactions\n} from 'hooks';\nimport { SignPropsType } from 'UI/SignTransactionsModals/types/signTransactionsModals.types';\nimport { ExtraConfirmationScreenPropsType } from './confirmationScreen.types';\nimport {\n  TransactionStatusToast,\n  TransactionStatusToastType\n} from './TransactionStatusToast';\n\nexport const ConfirmationScreen = ({\n  Screen,\n  verifyReceiverScam,\n  className\n}: ExtraConfirmationScreenPropsType) => {\n  if (!Screen) {\n    return null;\n  }\n\n  const {\n    callbackRoute,\n    transactions,\n    error,\n    sessionId,\n    hasTransactions,\n    onAbort,\n    canceledTransactionsMessage\n  } = useSignTransactions();\n\n  const signTransactionsError = useGetSignTransactionsError();\n  const { providerType } = useGetAccountProvider();\n\n  const handleClose = () => {\n    onAbort(sessionId);\n  };\n\n  const signError = error || signTransactionsError;\n\n  const signProps: SignPropsType = {\n    handleClose,\n    error: signError,\n    sessionId,\n    transactions: transactions || [],\n    providerType,\n    callbackRoute,\n    className,\n    verifyReceiverScam\n  };\n\n  const transactionStatusToastProps: TransactionStatusToastType = {\n    signError,\n    canceledTransactionsMessage\n  };\n\n  const shouldShowTransactionStatusToast =\n    Boolean(signError) || Boolean(canceledTransactionsMessage);\n\n  if (!shouldShowTransactionStatusToast && !hasTransactions) {\n    return null;\n  }\n\n  return shouldShowTransactionStatusToast ? (\n    <TransactionStatusToast {...transactionStatusToastProps} />\n  ) : (\n    <Screen {...signProps} />\n  );\n};\n", "export * from './useGetNetworkConfig';\nexport * from './useUpdateEffect';\nexport * from './useGetNotification';\nexport * from './transactions';\nexport * from './account';\nexport * from './useDebounce';\nexport * from './login';\nexport * from './websocketListener';\nexport * from './toasts';\nexport * from './economics';\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { networkConfigSelector } from 'reduxStore/selectors';\n\nexport const useGetNetworkConfig = () => {\n  return useSelector(networkConfigSelector);\n};\n", "import { useRef, useEffect } from 'react';\n\nexport function useUpdateEffect(effect: any, dependencies: any[] = []) {\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else {\n      effect();\n    }\n  }, dependencies);\n}\n", "import { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport { notificationModalSelector } from 'reduxStore/selectors';\nimport { clearNotificationModal } from 'reduxStore/slices';\n\nexport function useGetNotification() {\n  const notification = useSelector(notificationModalSelector);\n  const dispatch = useDispatch();\n  const clearNotification = () => dispatch(clearNotificationModal());\n\n  return { notification, clearNotification };\n}\n", "export * from './useCheckTransactionStatus';\nexport * from './useGetActiveTransactionsStatus';\nexport * from './useGetFailedTransactions';\nexport * from './useGetLastPendingTransactionHash';\nexport * from './useGetPendingTransactions';\nexport * from './useGetPollingInterval';\nexport * from './useGetSignTransactionsError';\nexport * from './useGetSignedTransactions';\nexport * from './useGetSuccessfulTransactions';\nexport * from './useGetTokenDetails';\nexport * from './useGetTransactionDisplayInfo';\nexport * from './useParseMultiEsdtTransferData';\nexport * from './useParseSignedTransactions';\nexport * from './useSignMultipleTransactions';\nexport * from './useSignTransactions';\nexport * from './useSignTransactionsCommonData';\nexport * from './useSignTransactionsWithDevice';\nexport * from './useSignTransactionsWithLedger';\nexport * from './useTrackTransactionStatus';\n", "export * from './useCheckTransactionStatus';\n", "import { useGetPendingTransactions } from 'hooks/transactions/useGetPendingTransactions';\nimport { TransactionsTrackerType } from 'types/transactionsTracker.types';\nimport { refreshAccount } from 'utils/account/refreshAccount';\nimport { getIsTransactionPending } from 'utils/transactions/transactionStateByStatus';\nimport { checkBatch } from './checkBatch';\n\nexport function useCheckTransactionStatus() {\n  const { pendingTransactionsArray } = useGetPendingTransactions();\n\n  async function checkTransactionStatus(\n    props: TransactionsTrackerType & {\n      shouldRefreshBalance?: boolean;\n    }\n  ) {\n    const pendingBatches = pendingTransactionsArray\n      .filter(([, session]) => !session?.customTransactionInformation?.grouping)\n      .filter(\n        ([sessionId, session]) =>\n          sessionId != null && getIsTransactionPending(session.status)\n      );\n\n    if (pendingBatches.length > 0) {\n      for (const [sessionId, transactionBatch] of pendingBatches) {\n        await checkBatch({\n          sessionId,\n          transactionBatch,\n          ...props\n        });\n      }\n    }\n\n    if (props.shouldRefreshBalance) {\n      await refreshAccount();\n    }\n  }\n\n  return checkTransactionStatus;\n}\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { pendingSignedTransactionsSelector } from 'reduxStore/selectors';\nimport { SignedTransactionsType, SignedTransactionsBodyType } from 'types';\n\nexport interface UseGetPendingTransactionsReturnType {\n  pendingTransactions: SignedTransactionsType;\n  pendingTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasPendingTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetPendingTransactions(): UseGetPendingTransactionsReturnType {\n  const pendingTransactions = useSelector(pendingSignedTransactionsSelector);\n  const pendingTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(pendingTransactions);\n  const hasPendingTransactions = pendingTransactionsArray?.length > 0;\n\n  return {\n    pendingTransactions,\n    pendingTransactionsArray,\n    hasPendingTransactions\n  };\n}\n", "import { getAccountProvider } from 'providers';\nimport { setAccount } from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\nimport { getAccount } from './getAccount';\nimport { getAddress } from './getAddress';\nimport { getLatestNonce } from './getLatestNonce';\n\nconst setNewAccount = async () => {\n  try {\n    const address = await getAddress();\n\n    try {\n      const account = await getAccount(address);\n\n      if (account != null) {\n        const accountData = {\n          ...account,\n          nonce: getLatestNonce(account)\n        };\n\n        store.dispatch(setAccount(accountData));\n\n        return accountData;\n      }\n    } catch (e) {\n      console.error('Failed getting account ', e);\n    }\n  } catch (e) {\n    console.error('Failed getting address ', e);\n  }\n\n  return null;\n};\n\nexport async function refreshAccount() {\n  const provider = getAccountProvider();\n\n  if (provider == null) {\n    throw 'Provider not initialized';\n  }\n\n  if (!provider.isInitialized || provider.isInitialized()) {\n    return setNewAccount();\n  }\n\n  try {\n    if (!provider.init) {\n      throw 'Current provider does not have init() function';\n    }\n\n    const initialized = await provider.init();\n\n    if (!initialized) {\n      return;\n    }\n\n    return setNewAccount();\n  } catch (e) {\n    console.error('Failed initializing provider ', e);\n  }\n\n  return undefined;\n}\n", "export { getAccountProvider, getExternalProvider } from './accountProvider';\nexport * from './utils';\n", "import { ExtensionProvider } from '@multiversx/sdk-extension-provider';\nimport { HWProvider } from '@multiversx/sdk-hw-provider';\nimport { MetamaskProvider } from '@multiversx/sdk-metamask-provider/out/metamaskProvider';\nimport { OperaProvider } from '@multiversx/sdk-opera-provider';\nimport { PasskeyProvider } from '@multiversx/sdk-passkey-provider/out';\nimport { WalletProvider } from '@multiversx/sdk-web-wallet-provider';\nimport { CrossWindowProvider } from 'lib/sdkWebWalletCrossWindowProvider';\nimport { IframeProvider } from 'lib/sdkWebWalletIframeProvider';\nimport { IDappProvider } from 'types';\nimport { WalletConnectV2Provider } from 'utils/walletconnect/__mocks__/sdkWalletconnectProvider';\nimport { emptyProvider } from './utils';\n\nexport type ProvidersType =\n  | IDappProvider\n  | ExtensionProvider\n  | PasskeyProvider\n  | MetamaskProvider\n  | WalletProvider\n  | CrossWindowProvider\n  | IframeProvider\n  | HWProvider\n  | OperaProvider\n  | WalletConnectV2Provider;\n\nlet accountProvider: ProvidersType = emptyProvider;\n\nlet externalProvider: IDappProvider | null = null;\n\nexport function setAccountProvider<TProvider extends ProvidersType>(\n  provider: TProvider\n) {\n  accountProvider = provider;\n}\n\nexport function setExternalProvider(provider: IDappProvider) {\n  externalProvider = provider;\n}\n\nexport function setExternalProviderAsAccountProvider() {\n  if (externalProvider != null) {\n    accountProvider = externalProvider;\n  }\n}\n\nexport function getAccountProvider(): IDappProvider {\n  return (accountProvider as IDappProvider) || emptyProvider;\n}\n\nexport function getExternalProvider() {\n  return externalProvider;\n}\n", "import { Message, Transaction } from '@multiversx/sdk-core';\nimport { IDAppProviderAccount } from '@multiversx/sdk-dapp-utils/out';\nimport { ExtensionProvider } from '@multiversx/sdk-extension-provider';\nimport { HWProvider } from '@multiversx/sdk-hw-provider';\nimport { IHWWalletApp } from '@multiversx/sdk-hw-provider/out/interface';\nimport { MetamaskProvider } from '@multiversx/sdk-metamask-provider/out/metamaskProvider';\nimport { OperaProvider } from '@multiversx/sdk-opera-provider';\nimport { PasskeyProvider } from '@multiversx/sdk-passkey-provider/out';\nimport { WalletProvider } from '@multiversx/sdk-web-wallet-provider';\nimport { LEDGER_CONTRACT_DATA_ENABLED_VALUE } from 'constants/index';\nimport { CrossWindowProvider } from 'lib/sdkWebWalletCrossWindowProvider';\nimport { IframeProvider } from 'lib/sdkWebWalletIframeProvider';\nimport { IDappProvider } from 'types';\nimport { LoginMethodsEnum } from 'types/enums.types';\nimport {\n  WalletConnectV2Provider,\n  EngineTypes\n} from 'utils/walletconnect/__mocks__/sdkWalletconnectProvider';\n\nexport const DAPP_INIT_ROUTE = '/dapp/init';\n\nexport const getProviderType = <TProvider extends object>(\n  provider?: TProvider | null\n): LoginMethodsEnum => {\n  switch (provider?.constructor) {\n    case WalletProvider:\n      return LoginMethodsEnum.wallet;\n    case WalletConnectV2Provider:\n      return LoginMethodsEnum.walletconnectv2;\n    case HWProvider:\n      return LoginMethodsEnum.ledger;\n    case ExtensionProvider:\n      return LoginMethodsEnum.extension;\n    case PasskeyProvider:\n      return LoginMethodsEnum.passkey;\n    case MetamaskProvider:\n      return LoginMethodsEnum.metamask;\n    case OperaProvider:\n      return LoginMethodsEnum.opera;\n    case CrossWindowProvider:\n      return LoginMethodsEnum.crossWindow;\n    case IframeProvider:\n      return LoginMethodsEnum.iframe;\n    case EmptyProvider:\n      return LoginMethodsEnum.none;\n    default:\n      return LoginMethodsEnum.extra;\n  }\n};\n\nexport const newWalletProvider = (walletAddress: string) =>\n  new WalletProvider(`${walletAddress}${DAPP_INIT_ROUTE}`);\n\nexport const getLedgerConfiguration = async (\n  initializedHwWalletP: HWProvider\n) => {\n  if (!initializedHwWalletP.isInitialized()) {\n    throw new Error('Unable to get version. Provider not initialized');\n  }\n  const hwApp: IHWWalletApp = (initializedHwWalletP as any).hwApp;\n  const { contractData, version } = await hwApp.getAppConfiguration();\n  const dataEnabled = contractData === LEDGER_CONTRACT_DATA_ENABLED_VALUE;\n  return { version, dataEnabled };\n};\n\nconst notInitializedError = (caller: string) => {\n  return `Unable to perform ${caller}, Provider not initialized`;\n};\n\nexport class EmptyProvider implements IDappProvider {\n  init(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  getAccount(): IDAppProviderAccount | null {\n    throw new Error(notInitializedError('getAccount'));\n  }\n\n  setAccount(account: IDAppProviderAccount): void {\n    throw new Error(notInitializedError(`setAccount: ${account}`));\n  }\n\n  login<TOptions = { callbackUrl?: string } | undefined, TResponse = string>(\n    options?: TOptions\n  ): Promise<TResponse> {\n    throw new Error(notInitializedError(`login with options: ${options}`));\n  }\n\n  logout<TOptions = { callbackUrl?: string }, TResponse = boolean>(\n    options?: TOptions\n  ): Promise<TResponse> {\n    throw new Error(notInitializedError(`logout with options: ${options}`));\n  }\n\n  getAddress(): Promise<string> {\n    throw new Error(notInitializedError('getAddress'));\n  }\n\n  isInitialized(): boolean {\n    return false;\n  }\n\n  isConnected(): boolean {\n    return false;\n  }\n\n  sendTransaction?<\n    TOptions = { callbackUrl?: string },\n    TResponse = Transaction\n  >(transaction: Transaction, options?: TOptions): Promise<TResponse> {\n    throw new Error(\n      notInitializedError(\n        `sendTransaction with transactions: ${transaction} options: ${options}`\n      )\n    );\n  }\n\n  signTransaction<TOptions = { callbackUrl?: string }, TResponse = Transaction>(\n    transaction: Transaction,\n    options?: TOptions\n  ): Promise<TResponse> {\n    throw new Error(\n      notInitializedError(\n        `signTransaction with transactions: ${transaction} options: ${options}`\n      )\n    );\n  }\n\n  signTransactions<TOptions = { callbackUrl?: string }, TResponse = []>(\n    transactions: [],\n    options?: TOptions\n  ): Promise<TResponse> {\n    throw new Error(\n      notInitializedError(\n        `signTransactions with transactions: ${transactions} options: ${options}`\n      )\n    );\n  }\n\n  signMessage<T extends Message, TOptions = { callbackUrl?: string }>(\n    message: T,\n    options: TOptions\n  ): Promise<T> {\n    throw new Error(\n      notInitializedError(\n        `signTransactions with ${message} and options ${options}`\n      )\n    );\n  }\n\n  sendCustomMessage?({\n    method,\n    params\n  }: {\n    method: string;\n    params: any;\n  }): Promise<any> {\n    throw new Error(\n      notInitializedError(\n        `sendCustomMessage with method: ${method} params: ${params}`\n      )\n    );\n  }\n\n  sendCustomRequest?(options?: {\n    request: EngineTypes.RequestParams['request'];\n  }): Promise<any> {\n    throw new Error(\n      notInitializedError(`sendSessionEvent with options: ${options}`)\n    );\n  }\n\n  ping?(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n}\n\nexport const emptyProvider = new EmptyProvider();\n", "export { IframeProvider } from '@multiversx/sdk-web-wallet-iframe-provider/out';\nexport { IframeLoginTypes } from '@multiversx/sdk-web-wallet-iframe-provider/out/constants';\n", "import { EmptyProvider } from 'providers';\n\ntype SessionEventTypes = any;\ntype PairingTypes = any;\ntype EngineTypes = any;\nconst WalletConnectMethodsEnum = {};\nconst WalletConnectOptionalMethodsEnum = {};\nconst WalletConnectV2Provider = EmptyProvider;\n\nexport {\n  EngineTypes,\n  PairingTypes,\n  SessionEventTypes,\n  WalletConnectMethodsEnum,\n  WalletConnectOptionalMethodsEnum,\n  WalletConnectV2Provider\n};\n", "import { getAccountFromApi } from 'apiCalls/accounts/getAccountFromApi';\n\nexport const getAccount = (address?: string) => getAccountFromApi(address);\n", "import { ACCOUNTS_ENDPOINT } from 'apiCalls/endpoints';\nimport { getCleanApiAddress } from 'apiCalls/utils';\nimport { axiosInstance } from 'apiCalls/utils/axiosInstance';\n\nexport const accountFetcher = (address: string | null) => {\n  const apiAddress = getCleanApiAddress();\n  const url = `${apiAddress}/${ACCOUNTS_ENDPOINT}/${address}?withGuardianInfo=true`;\n  return axiosInstance.get(url);\n};\n\nexport const getAccountFromApi = async (address?: string) => {\n  if (!address) {\n    return null;\n  }\n\n  try {\n    const { data } = await accountFetcher(address);\n    return data;\n  } catch (err) {\n    console.error('error fetching configuration for ', address, err);\n  }\n\n  return null;\n};\n", "export * from './axiosFetcher';\nexport * from './axiosInstance';\nexport * from './getCleanApiAddress';\nexport * from './getScamAddressData';\nexport * from './useApiFetch';\n", "import { axiosInstance } from 'apiCalls/utils/axiosInstance';\n\nexport const axiosFetcher = (url: string) =>\n  axiosInstance.get(url).then((response) => response.data);\n", "import { buildAxiosFetch } from '@lifeomic/axios-fetch';\nimport axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\n\n// Needs to be used beacause an async call made after cross-window user interaction makes the dapp unresponsive\n\nconst fetch = buildAxiosFetch(axios);\n\nconst getFormattedAxiosResponse = async <T>(response: Response, config?: T) => {\n  if (!response.ok) {\n    throw new Error(`HTTP error! Status: ${response.status}`);\n  }\n\n  // Clone the response to be able to read it twice (for status and data)\n  const clonedResponse = response.clone();\n\n  // Parse the JSON body asynchronously\n  const jsonPromise = clonedResponse.json();\n\n  // Return the standardized response object\n  const [responseData] = await Promise.all([jsonPromise]);\n  return {\n    data: responseData,\n    status: response.status,\n    statusText: response.statusText,\n    headers: response.headers,\n    config\n  };\n};\n\nasync function customPost<T = any, R = AxiosResponse<T, any>, D = any>(\n  url: string,\n  data?: D,\n  config?: AxiosRequestConfig<D> | undefined\n): Promise<R> {\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      body: data ? JSON.stringify(data) : undefined,\n      headers: {\n        'Content-Type': 'application/json',\n        ...(config?.headers || {})\n      },\n      ...config\n    } as RequestInit);\n\n    return getFormattedAxiosResponse(response, config) as unknown as Promise<R>;\n  } catch (error) {\n    console.error('Fetch Error:', error);\n    throw error;\n  }\n}\n\nasync function customGet<T = any, R = AxiosResponse<T, any>, D = any>(\n  url: string,\n  config?: AxiosRequestConfig<D> | undefined\n): Promise<R> {\n  try {\n    const response = await fetch(url, config as RequestInit);\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    return getFormattedAxiosResponse(response, config) as unknown as Promise<R>;\n  } catch (error) {\n    console.error('Fetch Error:', error);\n    throw error;\n  }\n}\n\nasync function customPatch<T = any, R = AxiosResponse<T, any>, D = any>(\n  url: string,\n  data?: D,\n  config?: AxiosRequestConfig<D> | undefined\n): Promise<R> {\n  try {\n    const response = await fetch(url, {\n      method: 'PATCH',\n      body: data ? JSON.stringify(data) : undefined,\n      headers: config?.headers || {},\n      ...config\n    } as RequestInit);\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    return getFormattedAxiosResponse(response, config) as unknown as Promise<R>;\n  } catch (error) {\n    console.error('Fetch Error:', error);\n    throw error;\n  }\n}\n\nconst axiosInstance = axios.create();\naxiosInstance.get = customGet;\naxiosInstance.post = customPost;\naxiosInstance.patch = customPatch;\n\nexport { axiosInstance };\n", "import { apiAddressSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport const getCleanApiAddress = (customApiAddress?: string) => {\n  const apiAddress = customApiAddress ?? apiAddressSelector(store.getState());\n  return apiAddress.endsWith('/') ? apiAddress.slice(0, -1) : apiAddress;\n};\n", "import axios from 'axios';\nimport { networkConfigSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\nimport { ScamInfoType } from 'types/account.types';\nimport { ACCOUNTS_ENDPOINT } from '../endpoints';\n\nexport async function getScamAddressData(addressToVerify: string) {\n  const {\n    network: { apiAddress, apiTimeout }\n  } = networkConfigSelector(store.getState());\n\n  const { data } = await axios.get<{\n    scamInfo?: ScamInfoType;\n    code?: string;\n  }>(`${apiAddress}/${ACCOUNTS_ENDPOINT}/${addressToVerify}`, {\n    timeout: Number(apiTimeout)\n  });\n\n  return data;\n}\n", "import useSWR from 'swr';\nimport { axiosFetcher } from './axiosFetcher';\nimport { getCleanApiAddress } from './getCleanApiAddress';\n\nexport const useApiFetch = ({\n  apiEndpoint\n}: {\n  apiEndpoint: string | null;\n}) => {\n  const apiAddress = getCleanApiAddress();\n  const url = apiEndpoint ? `${apiAddress}/${apiEndpoint}` : null;\n\n  return useSWR(url, axiosFetcher);\n};\n", "import { getAccountProvider } from 'providers';\nimport {\n  addressSelector,\n  isLoggedInSelector,\n  walletLoginSelector\n} from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\nimport { LoginMethodsEnum } from 'types/enums.types';\nimport { getIsProviderEqualTo } from 'utils/account/getIsProviderEqualTo';\nimport { getSearchParamAddress } from './getSearchParamAddress';\n\nexport function getAddress(): Promise<string> {\n  const appState = store.getState();\n  const provider = getAccountProvider();\n  const address = addressSelector(appState);\n  const loggedIn = isLoggedInSelector(appState);\n  const walletLogin = walletLoginSelector(appState);\n\n  if (!provider) {\n    throw 'provider not initialized';\n  }\n\n  if (getIsProviderEqualTo(LoginMethodsEnum.ledger) && loggedIn) {\n    return new Promise((resolve) => {\n      resolve(address);\n    });\n  }\n\n  return !getIsProviderEqualTo(LoginMethodsEnum.none) &&\n    !getIsProviderEqualTo(LoginMethodsEnum.wallet) &&\n    !getIsProviderEqualTo(LoginMethodsEnum.extra)\n    ? provider.getAddress()\n    : new Promise((resolve) => {\n        const searchParamAddress = getSearchParamAddress();\n        if (walletLogin != null && searchParamAddress) {\n          resolve(searchParamAddress);\n        }\n        if (loggedIn) {\n          resolve(address);\n        }\n        resolve('');\n      });\n}\n", "import { getAccountProviderType } from 'utils/account/getAccountProviderType';\n\nexport function getIsProviderEqualTo(comparedProviderType: any) {\n  const providerType = getAccountProviderType();\n  return providerType === comparedProviderType;\n}\n", "import { getAccountProvider, getProviderType } from 'providers';\n\nexport function getAccountProviderType() {\n  const provider = getAccountProvider();\n  return getProviderType(provider);\n}\n", "import { getWindowLocation } from 'utils/window/getWindowLocation';\nimport { addressIsValid } from './addressIsValid';\n\nexport const getSearchParamAddress = () => {\n  const { search } = getWindowLocation();\n  const urlSearchParams = new URLSearchParams(search);\n  const params = Object.fromEntries(urlSearchParams as any);\n  const address: string = params?.address;\n  if (addressIsValid(address)) {\n    return address;\n  }\n  return null;\n};\n", "import { accountNonceSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\nimport { AccountType } from 'types';\n\nexport function getLatestNonce(account: AccountType | null) {\n  const appState = store.getState();\n  const currentAccountNonce = accountNonceSelector(appState);\n  if (!account) {\n    return currentAccountNonce;\n  }\n  return currentAccountNonce && !isNaN(currentAccountNonce)\n    ? Math.max(currentAccountNonce, account.nonce)\n    : account.nonce;\n}\n", "import { getTransactionsByHashes as defaultGetTxByHash } from 'apiCalls/transactions';\nimport { updateSignedTransactionStatus } from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\nimport {\n  CustomTransactionInformation,\n  GetTransactionsByHashesReturnType,\n  ServerTransactionType,\n  SignedTransactionsBodyType\n} from 'types';\nimport { TransactionServerStatusesEnum } from 'types/enums.types';\nimport { TransactionsTrackerType } from 'types/transactionsTracker.types';\nimport { refreshAccount } from 'utils/account';\nimport {\n  getIsTransactionFailed,\n  getIsTransactionPending,\n  getIsTransactionSuccessful\n} from 'utils/transactions';\nimport { getPendingTransactions } from './getPendingTransactions';\nimport { manageFailedTransactions } from './manageFailedTransactions';\nimport { manageTimedOutTransactions } from './manageTimedOutTransactions';\n\nexport interface TransactionStatusTrackerPropsType\n  extends TransactionsTrackerType {\n  sessionId: string;\n  transactionBatch: SignedTransactionsBodyType;\n  shouldRefreshBalance?: boolean;\n  isSequential?: boolean;\n}\n\ninterface RetriesType {\n  [hash: string]: number;\n}\n\nconst retries: RetriesType = {};\nconst timeouts: string[] = [];\n\ninterface ManageTransactionType {\n  serverTransaction: GetTransactionsByHashesReturnType[0];\n  sessionId: string;\n  customTransactionInformation?: CustomTransactionInformation;\n  shouldRefreshBalance?: boolean;\n  isSequential?: boolean;\n}\n\nfunction manageTransaction({\n  serverTransaction,\n  sessionId,\n  customTransactionInformation,\n  shouldRefreshBalance,\n  isSequential\n}: ManageTransactionType) {\n  const {\n    hash,\n    status,\n    inTransit,\n    results,\n    invalidTransaction,\n    hasStatusChanged\n  } = serverTransaction;\n  try {\n    if (timeouts.includes(hash)) {\n      return;\n    }\n\n    const retriesForThisHash = retries[hash];\n    if (retriesForThisHash > 30) {\n      // consider transaction as stuck after 1 minute\n      manageTimedOutTransactions(sessionId);\n      return;\n    }\n\n    if (\n      (invalidTransaction && !isSequential) ||\n      getIsTransactionPending(status)\n    ) {\n      retries[hash] = retries[hash] ? retries[hash] + 1 : 1;\n      return;\n    }\n\n    // The tx is from a sequential batch.\n    // If the transactions before this are not successful then it means that no other tx will be processed\n    if (isSequential && !status) {\n      store.dispatch(\n        updateSignedTransactionStatus({\n          sessionId,\n          status,\n          transactionHash: hash,\n          inTransit,\n          serverTransaction:\n            serverTransaction as unknown as ServerTransactionType\n        })\n      );\n      return;\n    }\n\n    if (hasStatusChanged) {\n      if (\n        getIsTransactionSuccessful(status) &&\n        customTransactionInformation?.completedTransactionsDelay != null\n      ) {\n        //if the transaction is successful and the success status should be updated with a delay\n        //it will enter a timeout and then change the status\n        timeouts.push(hash);\n        setTimeout(\n          () =>\n            store.dispatch(\n              updateSignedTransactionStatus({\n                sessionId,\n                status: TransactionServerStatusesEnum.success,\n                transactionHash: hash,\n                inTransit,\n                serverTransaction:\n                  serverTransaction as unknown as ServerTransactionType\n              })\n            ),\n          customTransactionInformation?.completedTransactionsDelay\n        );\n      } else {\n        //otherwise, it will just trigger the change of status\n        store.dispatch(\n          updateSignedTransactionStatus({\n            sessionId,\n            status,\n            transactionHash: hash,\n            inTransit,\n            serverTransaction:\n              serverTransaction as unknown as ServerTransactionType\n          })\n        );\n      }\n    }\n\n    // if set to true will trigger a balance refresh after each iteration\n    if (!shouldRefreshBalance) {\n      refreshAccount();\n    }\n\n    if (getIsTransactionFailed(status)) {\n      manageFailedTransactions({ sessionId, hash, results });\n    }\n  } catch (error) {\n    console.error(error);\n    manageTimedOutTransactions(sessionId);\n  }\n}\n\nexport async function checkBatch({\n  sessionId,\n  transactionBatch: { transactions, customTransactionInformation },\n  getTransactionsByHash = defaultGetTxByHash,\n  shouldRefreshBalance,\n  isSequential,\n  onSuccess,\n  onFail\n}: TransactionStatusTrackerPropsType) {\n  try {\n    if (transactions == null) {\n      return;\n    }\n\n    const pendingTransactions = getPendingTransactions(transactions, timeouts);\n\n    const serverTransactions = await getTransactionsByHash(pendingTransactions);\n\n    for (const serverTransaction of serverTransactions) {\n      manageTransaction({\n        serverTransaction,\n        sessionId,\n        customTransactionInformation,\n        shouldRefreshBalance,\n        isSequential\n      });\n    }\n\n    const hasCompleted = serverTransactions.every(\n      (tx) => tx.status !== TransactionServerStatusesEnum.pending\n    );\n\n    // Call the onSuccess or onFail callback only if the transactions are sent normally (not using batch transactions mechanism).\n    // The batch transactions mechanism will call the callbacks separately.\n    if (hasCompleted && !customTransactionInformation?.grouping) {\n      const isSuccessful = serverTransactions.every(\n        (tx) => tx.status === TransactionServerStatusesEnum.success\n      );\n\n      if (isSuccessful) {\n        return onSuccess?.(sessionId);\n      }\n\n      const isFailed = serverTransactions.some(\n        (tx) => tx.status === TransactionServerStatusesEnum.fail\n      );\n\n      if (isFailed) {\n        return onFail?.(sessionId);\n      }\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n", "export * from './sendSignedTransactions';\nexport * from './sendSignedBatchTransactions';\nexport * from './getTransactionsByHashes';\nexport * from './getTransactions';\nexport * from './getTransactionsCount';\nexport * from './getTransaction';\nexport * from './getTransactions.types';\nexport * from './useGetTransactionsFromApi';\n", "import { Transaction } from '@multiversx/sdk-core';\nimport axios from 'axios';\nimport { networkSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport type SendSignedTransactionsReturnType = string[];\n\nexport async function sendSignedTransactions(\n  signedTransactions: Transaction[]\n): Promise<SendSignedTransactionsReturnType> {\n  const { apiAddress, apiTimeout } = networkSelector(store.getState());\n  const promises = signedTransactions.map((transaction) => {\n    return axios.post(\n      `${apiAddress}/transactions`,\n      transaction.toPlainObject(),\n      { timeout: parseInt(apiTimeout) }\n    );\n  });\n  const response = await Promise.all(promises);\n\n  return response.map(({ data }) => data.txHash);\n}\n", "import axios from 'axios';\nimport { TIMEOUT } from 'constants/network';\nimport { buildBatchId } from 'hooks/transactions/helpers/buildBatchId';\nimport { addressSelector, networkSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\nimport {\n  BatchTransactionsRequestType,\n  BatchTransactionsResponseType,\n  CustomTransactionInformation,\n  SignedTransactionType\n} from 'types';\nimport { TRANSACTIONS_BATCH } from '../endpoints';\n\nexport interface SendBatchTransactionsPropsType {\n  transactions: SignedTransactionType[][];\n  sessionId: string;\n  customTransactionInformationOverrides?: Partial<CustomTransactionInformation>;\n}\n\nexport type SendSignedBatchTransactionsReturnType = {\n  error?: string | null;\n  batchId?: string | null;\n  data?: BatchTransactionsResponseType;\n};\n\nexport async function sendSignedBatchTransactions({\n  transactions,\n  sessionId\n}: SendBatchTransactionsPropsType) {\n  const address = addressSelector(store.getState());\n  const { apiAddress, apiTimeout } = networkSelector(store.getState());\n\n  if (!address) {\n    return {\n      error:\n        'Invalid address provided. You need to be logged in to send transactions',\n      batchId: null\n    };\n  }\n\n  try {\n    const batchId = buildBatchId({\n      sessionId,\n      address\n    });\n\n    const payload: BatchTransactionsRequestType = {\n      transactions,\n      id: batchId\n    };\n\n    const response = await axios.post<BatchTransactionsResponseType>(\n      `${apiAddress}/${TRANSACTIONS_BATCH}`,\n      payload,\n      {\n        timeout: Number(apiTimeout ?? TIMEOUT)\n      }\n    );\n\n    return { batchId, data: response.data };\n  } catch (err) {\n    console.error('error sending batch transactions', err);\n    return {\n      error: (err as any)?.message ?? 'error sending batch transactions',\n      batchId: null\n    };\n  }\n}\n", "import { BATCH_TRANSACTIONS_ID_SEPARATOR } from 'constants/index';\n\nexport const buildBatchId = ({\n  sessionId,\n  address\n}: {\n  sessionId: string | number;\n  address: string;\n}) => {\n  return `${sessionId}${BATCH_TRANSACTIONS_ID_SEPARATOR}${address}`;\n};\n", "import axios from 'axios';\nimport { TRANSACTIONS_ENDPOINT } from 'apiCalls/endpoints';\nimport { apiAddressSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\nimport { ServerTransactionType } from 'types';\nimport {\n  GetTransactionsByHashesReturnType,\n  PendingTransactionsType\n} from 'types/transactions.types';\n\nexport const getTransactionsByHashes = async (\n  pendingTransactions: PendingTransactionsType\n): Promise<GetTransactionsByHashesReturnType> => {\n  const apiAddress = apiAddressSelector(store.getState());\n  const hashes = pendingTransactions.map((tx) => tx.hash);\n  const { data: responseData } = await axios.get(\n    `${apiAddress}/${TRANSACTIONS_ENDPOINT}`,\n    {\n      params: {\n        hashes: hashes.join(','),\n        withScResults: true\n      }\n    }\n  );\n\n  return pendingTransactions.map(({ hash, previousStatus }) => {\n    const txOnNetwork = responseData.find(\n      (txResponse: any) => txResponse?.txHash === hash\n    );\n\n    return {\n      hash,\n      data: txOnNetwork?.data,\n      invalidTransaction: txOnNetwork == null,\n      status: txOnNetwork?.status,\n      results: txOnNetwork?.results,\n      sender: txOnNetwork?.sender,\n      receiver: txOnNetwork?.receiver,\n      previousStatus,\n      hasStatusChanged: txOnNetwork && txOnNetwork.status !== previousStatus\n    };\n  });\n};\n\nexport const getTransactionByHashPromise = (hash: string) => {\n  const apiAddress = apiAddressSelector(store.getState());\n\n  return axios.get<ServerTransactionType>(\n    `${apiAddress}/transactions/${hash}`,\n    {\n      timeout: 10000 // 10sec\n    }\n  );\n};\n", "import axios from 'axios';\nimport { TRANSACTIONS_ENDPOINT } from 'apiCalls/endpoints';\nimport { ServerTransactionType } from 'types';\nimport { GetTransactionsType } from './getTransactions.types';\nimport { getTimeout, getTransactionsParams } from './helpers';\n\nexport const getTransactions = (props: GetTransactionsType) => {\n  const params = getTransactionsParams(props);\n  return axios.get<ServerTransactionType[]>(\n    `${props.apiAddress}/${TRANSACTIONS_ENDPOINT}`,\n    {\n      params,\n      ...getTimeout(props.apiTimeout)\n    }\n  );\n};\n", "import { GetTransactionsType } from './getTransactions.types';\n\nexport const getTimeout = (apiTimeout?: string | number) =>\n  apiTimeout ? { timeout: parseInt(String(apiTimeout)) } : {};\n\nexport const getTransactionsParams = ({\n  sender,\n  receiver,\n  page = 1,\n  transactionSize = 15,\n  condition = 'should',\n  withScResults = true,\n  after,\n  before,\n  search,\n  status,\n  withUsername\n}: GetTransactionsType) => {\n  const params = {\n    sender,\n    receiver,\n    condition,\n    after,\n    before,\n    search,\n    from: (page - 1) * transactionSize,\n    ...(transactionSize > 0 ? { size: transactionSize } : {}),\n    withScResults,\n    withUsername,\n    status\n  };\n\n  return params;\n};\n", "import axios from 'axios';\nimport { TRANSACTIONS_COUNT_ENDPOINT } from 'apiCalls/endpoints';\nimport { GetTransactionsType } from './getTransactions.types';\nimport { getTimeout, getTransactionsParams } from './helpers';\n\nexport const getTransactionsCount = (props: GetTransactionsType) => {\n  const params = getTransactionsParams(props);\n  return axios.get<number>(\n    `${props.apiAddress}/${TRANSACTIONS_COUNT_ENDPOINT}`,\n    {\n      params,\n      ...getTimeout(props.apiTimeout)\n    }\n  );\n};\n", "import axios from 'axios';\nimport { ServerTransactionType } from 'types/serverTransactions.types';\nimport { TRANSACTIONS_ENDPOINT } from '../endpoints';\nimport { getTimeout } from './helpers';\n\nexport interface GetTransactionType {\n  apiAddress: string;\n  apiTimeout?: string | number;\n  hash: string;\n}\n\nexport const getTransaction = ({\n  hash,\n  apiAddress,\n  apiTimeout\n}: GetTransactionType) => {\n  return axios.get<ServerTransactionType[]>(\n    `${apiAddress}/${TRANSACTIONS_ENDPOINT}/${hash}`,\n    {\n      ...getTimeout(apiTimeout)\n    }\n  );\n};\n", "import { TransactionServerStatusesEnum } from 'types';\n\nexport interface GetTransactionsType {\n  apiAddress: string;\n  apiTimeout?: string | number;\n  sender?: string;\n  receiver?: string;\n  page?: number;\n  transactionSize?: number;\n  after?: number;\n  condition?: 'should' | 'must';\n  before?: number;\n  withScResults?: boolean;\n  withUsername?: boolean;\n  status?: TransactionServerStatusesEnum;\n  /**\n   * Search in data object\n   */\n  search?: string;\n}\n", "import { TRANSACTIONS_ENDPOINT } from '../endpoints';\nimport { useApiFetch } from '../utils';\n\nexport const useGetTransactionsFromApi = (hash: string) =>\n  useApiFetch({\n    apiEndpoint: hash\n      ? `${TRANSACTIONS_ENDPOINT}/${hash}`\n      : TRANSACTIONS_ENDPOINT\n  });\n", "export * from './addressIsValid';\nexport * from './getSearchParamAddress';\nexport * from './getAccount';\nexport * from './getAccountBalance';\nexport * from './getAccountProviderType';\nexport * from './getAddress';\nexport * from './getIsProviderEqualTo';\nexport * from './getLatestNonce';\nexport * from './getShardOfAddress';\nexport * from './getWebviewToken';\nexport * from './loginWithExternalProvider';\nexport * from './refreshAccount';\nexport * from './setNonce';\nexport * from './signMessage';\nexport * from 'providers';\n", "import { accountSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\nimport { getAccount } from './getAccount';\n\nexport async function getAccountBalance(address?: string) {\n  let accountAddress = address;\n  if (accountAddress == null) {\n    const account = accountSelector(store.getState());\n    accountAddress = account.address;\n  }\n  const account = await getAccount(accountAddress);\n  if (account == null) {\n    throw 'Could not read account, user not logged in';\n  }\n  return account?.balance;\n}\n", "import { loginInfoSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\nimport { getAccessTokenFromSearchParams } from './getAccessTokenFromSearchParams';\n\nexport const getWebviewToken = () => {\n  const accessToken = getAccessTokenFromSearchParams();\n  const loginInfo = loginInfoSelector(store.getState());\n\n  return accessToken ?? loginInfo.webviewLogin?.data;\n};\n", "import { getWindowLocation } from 'utils/window/getWindowLocation';\n\nexport const getAccessTokenFromSearchParams = () => {\n  const { search } = getWindowLocation();\n  const urlSearchParams = new URLSearchParams(search) as any;\n  const searchParams = Object.fromEntries(urlSearchParams);\n\n  return searchParams?.accessToken;\n};\n", "import { loginAction } from 'reduxStore/commonActions';\nimport { store } from 'reduxStore/store';\nimport { LoginMethodsEnum } from 'types';\n\nexport function loginWithExternalProvider(address: string) {\n  store.dispatch(loginAction({ address, loginMethod: LoginMethodsEnum.extra }));\n}\n", "import { setAccountNonce } from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\n\n// this is is needed to allow the users to set the nonce dynamically from outside the library\n// without getting access to store.dispatch function\nexport function setNonce(nonce: number) {\n  store.dispatch(setAccountNonce(nonce));\n}\n", "import { Message, Address } from '@multiversx/sdk-core';\nimport { CrossWindowProvider } from 'lib/sdkWebWalletCrossWindowProvider';\nimport { getAccountProvider, getProviderType } from 'providers';\nimport { LoginMethodsEnum } from 'types';\nimport { getAddress } from 'utils/account/getAddress';\nimport { addOriginToLocationPath } from 'utils/window';\n\nexport interface SignMessageType {\n  message: string;\n  callbackRoute?: string;\n  options?: {\n    hasConsentPopup?: boolean;\n  };\n}\n\nexport const signMessage = async ({\n  message,\n  callbackRoute,\n  options\n}: SignMessageType) => {\n  const address = await getAddress();\n  const provider = getAccountProvider();\n  const providerType = getProviderType(provider);\n\n  const callbackUrl = addOriginToLocationPath(callbackRoute);\n\n  const signableMessage = new Message({\n    address: new Address(address),\n    data: Buffer.from(message)\n  });\n\n  if (\n    options?.hasConsentPopup &&\n    providerType === LoginMethodsEnum.crossWindow\n  ) {\n    (provider as unknown as CrossWindowProvider).setShouldShowConsentPopup(\n      true\n    );\n  }\n\n  const signedMessage = await provider.signMessage(signableMessage, {\n    callbackUrl: encodeURIComponent(callbackUrl)\n  });\n\n  return signedMessage;\n};\n", "import { SignedTransactionType } from 'types';\nimport { getIsTransactionPending } from 'utils/transactions/transactionStateByStatus';\n\nexport interface PendingTransactionType {\n  hash: string;\n  previousStatus: string;\n}\n\nexport function getPendingTransactions(\n  transactions: SignedTransactionType[],\n  timedOutHashes: string[]\n): PendingTransactionType[] {\n  const pendingTransactions = transactions.reduce(\n    (acc: PendingTransactionType[], { status, hash }) => {\n      if (\n        hash != null &&\n        !timedOutHashes.includes(hash) &&\n        getIsTransactionPending(status)\n      ) {\n        acc.push({\n          hash,\n          previousStatus: status\n        });\n      }\n      return acc;\n    },\n    []\n  );\n  return pendingTransactions;\n}\n", "import {\n  updateSignedTransactions,\n  updateSignedTransactionStatus\n} from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\nimport { ServerTransactionType, SmartContractResult } from 'types';\nimport {\n  TransactionBatchStatusesEnum,\n  TransactionServerStatusesEnum\n} from 'types/enums.types';\n\nexport function manageFailedTransactions({\n  results,\n  hash,\n  sessionId\n}: {\n  results: SmartContractResult[];\n  hash: string;\n  sessionId: string;\n}) {\n  const resultWithError = results?.find(\n    (scResult) => scResult?.returnMessage !== ''\n  );\n\n  store.dispatch(\n    updateSignedTransactionStatus({\n      transactionHash: hash,\n      sessionId,\n      status: TransactionServerStatusesEnum.fail,\n      errorMessage: resultWithError?.returnMessage,\n      inTransit: false,\n      serverTransaction: resultWithError as unknown as ServerTransactionType\n    })\n  );\n  store.dispatch(\n    updateSignedTransactions({\n      sessionId,\n      status: TransactionBatchStatusesEnum.fail,\n      errorMessage: resultWithError?.returnMessage\n    })\n  );\n}\n", "import { updateSignedTransactions } from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\nimport { TransactionBatchStatusesEnum } from 'types';\n\nexport function manageTimedOutTransactions(sessionId: string) {\n  store.dispatch(\n    updateSignedTransactions({\n      sessionId,\n      status: TransactionBatchStatusesEnum.timedOut\n    })\n  );\n}\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport {\n  failedTransactionsSelector,\n  pendingSignedTransactionsSelector,\n  successfulTransactionsSelector,\n  timedOutTransactionsSelector\n} from 'reduxStore/selectors';\n\nexport interface UseGetActiveTransactionsStatusReturnType {\n  timedOut: boolean;\n  fail: boolean;\n  success: boolean;\n  pending: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetActiveTransactionsStatus(): UseGetActiveTransactionsStatusReturnType {\n  const timedOutTransactions = useSelector(timedOutTransactionsSelector);\n  const failedTransactions = useSelector(failedTransactionsSelector);\n  const successfulTransactions = useSelector(successfulTransactionsSelector);\n  const pendingTransactions = useSelector(pendingSignedTransactionsSelector);\n\n  const pending = Object.keys(pendingTransactions)?.length > 0;\n\n  const timedOut = !pending && Object.keys(timedOutTransactions)?.length > 0;\n\n  const fail =\n    !pending && !timedOut && Object.keys(failedTransactions)?.length > 0;\n\n  const success =\n    !pending &&\n    !timedOut &&\n    !fail &&\n    Object.keys(successfulTransactions).length > 0;\n\n  return {\n    pending,\n    timedOut,\n    fail,\n    success\n  };\n}\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { failedTransactionsSelector } from 'reduxStore/selectors';\nimport { SignedTransactionsType, SignedTransactionsBodyType } from 'types';\n\nexport interface useGetFailedTransactionsReturnType {\n  failedTransactions: SignedTransactionsType;\n  failedTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasFailedTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetFailedTransactions(): useGetFailedTransactionsReturnType {\n  const failedTransactions = useSelector(failedTransactionsSelector);\n  const failedTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(failedTransactions);\n  const hasFailedTransactions = failedTransactionsArray?.length > 0;\n  return {\n    failedTransactions,\n    failedTransactionsArray,\n    hasFailedTransactions\n  };\n}\n", "import { useGetPendingTransactions } from 'hooks/transactions/useGetPendingTransactions';\nimport { TransactionServerStatusesEnum } from 'types';\n\n// TODO: Add `useGetBatchTransactionHashes`\nexport const useGetLastPendingTransactionHash = (): string => {\n  const { hasPendingTransactions, pendingTransactions } =\n    useGetPendingTransactions();\n\n  if (!hasPendingTransactions) {\n    return '';\n  }\n\n  const sortedSessionIdsDesc = Object.keys(pendingTransactions)\n    .sort()\n    .reverse();\n\n  for (const sessionId of sortedSessionIdsDesc) {\n    const batch = pendingTransactions[sessionId];\n    const batchWithPendingTx =\n      batch.transactions?.filter(\n        (tx) => tx.status === TransactionServerStatusesEnum.pending\n      ) ?? [];\n\n    if (batchWithPendingTx.length > 0) {\n      const lastTransaction = batchWithPendingTx[batchWithPendingTx.length - 1];\n\n      return lastTransaction.hash;\n    }\n  }\n\n  return '';\n};\n", "import { TRANSACTIONS_STATUS_POLLING_INTERVAL_MS } from 'constants/transactionStatus';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport { roundDurationSelectorSelector } from 'reduxStore/selectors';\n\nexport const useGetPollingInterval = () => {\n  const roundDuration = useSelector(roundDurationSelectorSelector);\n\n  if (!roundDuration) {\n    return TRANSACTIONS_STATUS_POLLING_INTERVAL_MS;\n  }\n\n  // Polling interval should not be less than 1s\n  return Math.max(1000, roundDuration / 2);\n};\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { signTransactionsErrorSelector } from 'reduxStore/selectors';\n\nexport const useGetSignTransactionsError = () => {\n  return useSelector(signTransactionsErrorSelector);\n};\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { signedTransactionsSelector } from 'reduxStore/selectors';\n\nimport {\n  SignedTransactionsType,\n  SignedTransactionsBodyType\n} from '../../types';\n\nexport interface useGetSignedTransactionsReturnType {\n  signedTransactions: SignedTransactionsType;\n  signedTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasSignedTransactions: boolean;\n}\n\nexport function useGetSignedTransactions(): useGetSignedTransactionsReturnType {\n  const signedTransactions = useSelector(signedTransactionsSelector);\n  const signedTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(signedTransactions);\n  const hasSignedTransactions = signedTransactionsArray?.length > 0;\n  return {\n    signedTransactions,\n    signedTransactionsArray,\n    hasSignedTransactions\n  };\n}\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { successfulTransactionsSelector } from 'reduxStore/selectors';\nimport { SignedTransactionsType, SignedTransactionsBodyType } from 'types';\n\nexport interface useGetSuccessfulTransactionsReturnType {\n  successfulTransactions: SignedTransactionsType;\n  successfulTransactionsArray: [string, SignedTransactionsBodyType][];\n  hasSuccessfulTransactions: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetSuccessfulTransactions(): useGetSuccessfulTransactionsReturnType {\n  const successfulTransactions = useSelector(successfulTransactionsSelector);\n  const successfulTransactionsArray: [string, SignedTransactionsBodyType][] =\n    Object.entries(successfulTransactions);\n  const hasSuccessfulTransactions = successfulTransactionsArray?.length > 0;\n  return {\n    successfulTransactions,\n    successfulTransactionsArray,\n    hasSuccessfulTransactions\n  };\n}\n", "import useSwr from 'swr';\n\nimport { NFTS_ENDPOINT, TOKENS_ENDPOINT } from 'apiCalls/endpoints';\nimport { getPersistedToken } from 'apiCalls/tokens/getPersistedToken';\nimport { useGetNetworkConfig } from 'hooks/useGetNetworkConfig';\nimport { NftEnumType } from 'types/tokens.types';\nimport { getIdentifierType } from 'utils/validation/getIdentifierType';\n\nexport interface TokenAssets {\n  description: string;\n  status: string;\n  svgUrl: string;\n  website?: string;\n  pngUrl?: string;\n  social?: any;\n  extraTokens?: string[];\n  lockedAccounts?: { [key: string]: string };\n}\n\nexport interface TokenMediaType {\n  url?: string;\n  originalUrl?: string;\n  thumbnailUrl?: string;\n  fileType?: string;\n  fileSize?: number;\n}\n\nexport interface TokenOptionType {\n  tokenLabel: string;\n  tokenDecimals: number;\n  tokenAvatar: string;\n  assets?: TokenAssets;\n  type?: NftEnumType;\n  error?: string;\n  esdtPrice?: number;\n  ticker?: string;\n  identifier?: string;\n  name?: string;\n  isLoading?: boolean;\n}\n\ninterface TokenInfoResponse {\n  identifier: string;\n  name: string;\n  ticker: string;\n  decimals: number;\n  type?: NftEnumType;\n  assets: TokenAssets;\n  media?: TokenMediaType[];\n  price: number;\n}\n\nexport function useGetTokenDetails({\n  tokenId\n}: {\n  tokenId: string;\n}): TokenOptionType {\n  const { network } = useGetNetworkConfig();\n  const { isNft } = getIdentifierType(tokenId);\n\n  const tokenIdentifier = tokenId;\n  const tokenEndpoint = isNft ? NFTS_ENDPOINT : TOKENS_ENDPOINT;\n\n  const {\n    data: selectedToken,\n    error,\n    isLoading\n  } = useSwr<TokenInfoResponse>(\n    Boolean(tokenIdentifier)\n      ? `${network.apiAddress}/${tokenEndpoint}/${tokenIdentifier}`\n      : null,\n    getPersistedToken\n  );\n\n  if (!tokenIdentifier) {\n    return {\n      tokenDecimals: Number(network.decimals),\n      tokenLabel: '',\n      tokenAvatar: ''\n    };\n  }\n\n  const tokenDecimals = selectedToken\n    ? selectedToken?.decimals\n    : Number(network.decimals);\n  const tokenLabel = selectedToken ? selectedToken?.name : '';\n  const tokenAvatar = selectedToken\n    ? selectedToken?.assets?.svgUrl ?? selectedToken?.media?.[0]?.thumbnailUrl\n    : '';\n\n  return {\n    isLoading,\n    tokenDecimals: tokenDecimals,\n    tokenLabel,\n    type: selectedToken?.type,\n    tokenAvatar,\n    identifier: selectedToken?.identifier,\n    assets: selectedToken?.assets,\n    esdtPrice: selectedToken?.price,\n    ticker: selectedToken?.ticker,\n    name: selectedToken?.name,\n    error\n  };\n}\n", "import { axiosInstance } from 'apiCalls/utils/axiosInstance';\nimport { networkSelector } from 'reduxStore/selectors/networkConfigSelectors';\nimport { store } from 'reduxStore/store';\nimport { tokenDataStorage } from './tokenDataStorage';\n\nexport async function getPersistedToken<T>(url: string): Promise<T> {\n  const { apiAddress, apiTimeout } = networkSelector(store.getState());\n\n  const config = {\n    baseURL: apiAddress,\n    timeout: Number(apiTimeout)\n  };\n\n  const cachedToken: T | null = await tokenDataStorage.getItem(url);\n\n  if (cachedToken) {\n    return cachedToken;\n  }\n\n  const response = await axiosInstance.get<T>(url, config);\n\n  await tokenDataStorage.setItem(url, response.data);\n\n  return response.data;\n}\n", "let memoryCache: Record<string, string> = {};\n\nexport let tokenDataStorage = {\n  setItem: async <T>(key: string, tokenData: T) => {\n    try {\n      memoryCache[key] = JSON.stringify(tokenData);\n    } catch (e) {\n      console.error('tokenDataStorage unable to serialize', e);\n    }\n  },\n  getItem: async (key: string) => {\n    try {\n      return JSON.parse(memoryCache[key]);\n    } catch (e) {\n      console.error('tokenDataStorage unable to parse', e);\n    }\n  },\n  clear: async () => {\n    memoryCache = {};\n  },\n  removeItem: async (key: string) => {\n    delete memoryCache[key];\n  }\n};\n\nexport const setTokenDataStorage = (\n  tokenDataCacheStorage: typeof tokenDataStorage\n) => {\n  tokenDataStorage = tokenDataCacheStorage;\n};\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { transactionDisplayInfoSelector } from 'reduxStore/selectors';\nimport { RootState } from 'reduxStore/store';\n\nexport function useGetTransactionDisplayInfo(toastId: string | null) {\n  return useSelector((state: RootState) =>\n    transactionDisplayInfoSelector(state, toastId)\n  );\n}\n", "import { useEffect, useState } from 'react';\nimport { Transaction } from '@multiversx/sdk-core';\nimport {\n  MultiSignTransactionType,\n  TransactionDataTokenType,\n  TransactionsDataTokensType\n} from 'types';\nimport { parseMultiEsdtTransferDataForMultipleTransactions } from 'utils/transactions/parseMultiEsdtTransferDataForMultipleTransactions';\n\nconst defaultTransactionInfo: TransactionDataTokenType = {\n  tokenId: '',\n  amount: '',\n  type: '',\n  multiTxData: '',\n  receiver: ''\n};\n\ninterface UseParseMultiEsdtTransferDataPropsType {\n  transactions?: Transaction[];\n}\n\ninterface UseParseMultiEsdtTransferDataReturnType {\n  parsedTransactionsByDataField: TransactionsDataTokensType;\n  getTxInfoByDataField: (\n    data: string,\n    multiTransactionData?: string\n  ) => TransactionDataTokenType;\n  allTransactions: MultiSignTransactionType[];\n}\n\nexport function useParseMultiEsdtTransferData({\n  transactions\n}: UseParseMultiEsdtTransferDataPropsType): UseParseMultiEsdtTransferDataReturnType {\n  const [parsedTransactionsByDataField, setParsedTransactions] =\n    useState<TransactionsDataTokensType>({});\n  const [allTransactions, setAllTransactions] = useState<\n    MultiSignTransactionType[]\n  >([]);\n\n  function getTxInfoByDataField(\n    data: string,\n    multiTransactionData?: string\n  ): TransactionDataTokenType {\n    if (parsedTransactionsByDataField == null) {\n      return defaultTransactionInfo;\n    }\n\n    if (data in parsedTransactionsByDataField) {\n      return parsedTransactionsByDataField[data];\n    }\n\n    if (\n      multiTransactionData != null &&\n      String(multiTransactionData) in parsedTransactionsByDataField\n    ) {\n      return parsedTransactionsByDataField[multiTransactionData];\n    }\n\n    return defaultTransactionInfo;\n  }\n\n  function extractTransactionESDTData() {\n    const { allTransactions, parsedTransactionsByDataField } =\n      parseMultiEsdtTransferDataForMultipleTransactions({\n        transactions\n      });\n\n    setAllTransactions(allTransactions);\n    setParsedTransactions(parsedTransactionsByDataField);\n  }\n\n  useEffect(() => {\n    extractTransactionESDTData();\n  }, [transactions?.length]);\n\n  return {\n    parsedTransactionsByDataField,\n    getTxInfoByDataField,\n    allTransactions\n  };\n}\n", "import type { Transaction } from '@multiversx/sdk-core';\nimport {\n  MultiSignTransactionType,\n  TransactionDataTokenType,\n  TransactionsDataTokensType\n} from 'types';\nimport { getTokenFromData } from './getTokenFromData';\nimport { parseMultiEsdtTransferData } from './parseMultiEsdtTransferData';\n\nfunction addTransactionDataToParsedInfo({\n  parsedTransactionsByDataField,\n  data,\n  txInfo\n}: {\n  parsedTransactionsByDataField?: TransactionsDataTokensType;\n  data: string;\n  txInfo: TransactionDataTokenType;\n}) {\n  if (!parsedTransactionsByDataField) {\n    return;\n  }\n\n  parsedTransactionsByDataField[data] = txInfo;\n}\n\nexport function parseMultiEsdtTransferDataForMultipleTransactions({\n  transactions\n}: {\n  transactions?: Transaction[];\n}) {\n  const parsedTransactionsByDataField: TransactionsDataTokensType = {};\n  const allTransactions: MultiSignTransactionType[] = [];\n\n  if (!transactions || transactions.length === 0) {\n    return {\n      allTransactions,\n      parsedTransactionsByDataField\n    };\n  }\n\n  transactions.forEach((transaction, transactionIndex) => {\n    const txData = transaction.getData().toString();\n    const multiTxs = parseMultiEsdtTransferData(txData);\n\n    if (multiTxs.length > 0) {\n      multiTxs.forEach((trx, idx) => {\n        const newTx: MultiSignTransactionType = {\n          transaction,\n          multiTxData: trx.data,\n          transactionIndex: idx\n        };\n\n        addTransactionDataToParsedInfo({\n          parsedTransactionsByDataField,\n          data: trx.data,\n          txInfo: {\n            tokenId: trx.token ? trx.token : '',\n            amount: trx.amount ? trx.amount : '',\n            type: trx.type,\n            nonce: trx.nonce ? trx.nonce : '',\n            multiTxData: trx.data,\n            receiver: trx.receiver\n          }\n        });\n\n        allTransactions.push(newTx);\n      });\n    } else {\n      const transactionData = transaction.getData().toString();\n\n      const { tokenId, amount } = getTokenFromData(transactionData);\n\n      if (tokenId) {\n        addTransactionDataToParsedInfo({\n          parsedTransactionsByDataField,\n          data: transactionData,\n          txInfo: {\n            tokenId,\n            amount,\n            receiver: transaction.getReceiver().bech32()\n          }\n        });\n      }\n      allTransactions.push({\n        transaction,\n        transactionIndex,\n        multiTxData: transactionData\n      });\n    }\n  });\n\n  return {\n    allTransactions,\n    parsedTransactionsByDataField\n  };\n}\n", "import { useEffect } from 'react';\nimport { WalletProvider } from '@multiversx/sdk-web-wallet-provider';\nimport { WALLET_PROVIDER_CALLBACK_PARAM } from '@multiversx/sdk-web-wallet-provider';\nimport qs from 'qs';\nimport {\n  DAPP_INIT_ROUTE,\n  TRANSACTION_CANCELLED,\n  WALLET_SIGN_SESSION\n} from 'constants/index';\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport { dappConfigSelector, networkSelector } from 'reduxStore/selectors';\nimport {\n  moveTransactionsToSignedState,\n  setSignTransactionsCancelMessage\n} from 'reduxStore/slices';\nimport { TransactionBatchStatusesEnum } from 'types/enums.types';\nimport { SignedMessageQueryParamsEnum } from 'types/signedMessage.types';\nimport { removeSearchParamsFromUrl } from 'utils/removeSearchParamsFromUrl';\nimport { parseTransactionAfterSigning } from 'utils/transactions/parseTransactionAfterSigning';\nimport { removeTransactionParamsFromUrl } from 'utils/transactions/removeTransactionParamsFromUrl';\nimport { getWindowLocation } from 'utils/window/getWindowLocation';\n\nconst location = getWindowLocation();\n\nexport function useParseSignedTransactions(\n  onAbort: (sessionId?: string) => void\n) {\n  const network = useSelector(networkSelector);\n  const dispatch = useDispatch();\n  const { shouldFetchWalletUrlOnLoad } = useSelector(dappConfigSelector);\n\n  const { search } = shouldFetchWalletUrlOnLoad\n    ? location\n    : getWindowLocation();\n\n  useEffect(() => {\n    if (search != null) {\n      const searchData = qs.parse(search.replace('?', ''));\n\n      if (searchData && WALLET_SIGN_SESSION in searchData) {\n        const sessionId = String((searchData as any)[WALLET_SIGN_SESSION]);\n\n        const signedTransactions = new WalletProvider(\n          `${network.walletAddress}${DAPP_INIT_ROUTE}`\n        ).getTransactionsFromWalletUrl(search);\n\n        if (searchData.status === TransactionBatchStatusesEnum.cancelled) {\n          dispatch(\n            moveTransactionsToSignedState({\n              sessionId,\n              status: TransactionBatchStatusesEnum.cancelled\n            })\n          );\n          onAbort();\n          removeSearchParamsFromUrl({\n            removeParams: [\n              ...Object.keys(SignedMessageQueryParamsEnum),\n              WALLET_PROVIDER_CALLBACK_PARAM,\n              WALLET_SIGN_SESSION,\n              'address'\n            ],\n            search\n          });\n          dispatch(setSignTransactionsCancelMessage(TRANSACTION_CANCELLED));\n          return;\n        }\n\n        if (signedTransactions.length > 0) {\n          // TODO: check if the transactions are same as the ones in the redux store\n          dispatch(\n            moveTransactionsToSignedState({\n              sessionId,\n              status: TransactionBatchStatusesEnum.signed,\n              transactions: signedTransactions.map((tx) =>\n                parseTransactionAfterSigning(tx)\n              )\n            })\n          );\n\n          const [transaction] = signedTransactions;\n          removeTransactionParamsFromUrl({\n            transaction,\n            search\n          });\n        }\n      }\n    }\n  }, [search]);\n}\n", "import { useEffect, useState } from 'react';\nimport {\n  Address,\n  Transaction,\n  TransactionOptions,\n  TransactionVersion\n} from '@multiversx/sdk-core';\n\nimport { useGetAccountFromApi } from 'apiCalls/accounts/useGetAccountFromApi';\nimport { SENDER_DIFFERENT_THAN_LOGGED_IN_ADDRESS } from 'constants/index';\nimport { useParseMultiEsdtTransferData } from 'hooks/transactions/useParseMultiEsdtTransferData';\nimport {\n  ActiveLedgerTransactionType,\n  DeviceSignedTransactions,\n  Nullable,\n  ScamInfoType\n} from 'types';\nimport { getLedgerErrorCodes } from 'utils/internal/getLedgerErrorCodes';\nimport { isTokenTransfer } from 'utils/transactions/isTokenTransfer';\nimport {\n  checkIsValidSender,\n  getAreAllTransactionsSignedByGuardian\n} from './helpers';\nimport { UseSignTransactionsWithDeviceReturnType } from './useSignTransactionsWithDevice';\n\nexport interface UseSignMultipleTransactionsPropsType {\n  egldLabel: string;\n  address: string;\n  activeGuardianAddress?: string;\n  hasGuardianScreen?: boolean;\n  verifyReceiverScam?: boolean;\n  isLedger?: boolean;\n  transactionsToSign?: Transaction[];\n  onCancel?: () => void;\n  onSignTransaction: (\n    transaction: Nullable<Transaction>\n  ) => Promise<Nullable<Transaction | undefined>>;\n  onTransactionsSignSuccess: (transactions: Transaction[]) => void;\n  onTransactionsSignError: (errorMessage: string) => void;\n  onGetScamAddressData?:\n    | ((address: string) => Promise<{ scamInfo?: ScamInfoType }>)\n    | null;\n}\n\ninterface VerifiedAddressesType {\n  [address: string]: { type: string; info: string };\n}\nlet verifiedAddresses: VerifiedAddressesType = {};\n\nexport interface UseSignMultipleTransactionsReturnType\n  extends Omit<UseSignTransactionsWithDeviceReturnType, 'callbackRoute'> {\n  shouldContinueWithoutSigning: boolean;\n  isFirstTransaction: boolean;\n  hasMultipleTransactions: boolean;\n}\n\nexport const useSignMultipleTransactions = ({\n  isLedger = false,\n  transactionsToSign,\n  egldLabel,\n  address,\n  activeGuardianAddress,\n  hasGuardianScreen,\n  onCancel,\n  onSignTransaction,\n  onTransactionsSignError,\n  onTransactionsSignSuccess,\n  onGetScamAddressData\n}: UseSignMultipleTransactionsPropsType): UseSignMultipleTransactionsReturnType => {\n  const isGuarded = Boolean(activeGuardianAddress);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [signedTransactions, setSignedTransactions] =\n    useState<DeviceSignedTransactions>();\n  const [currentTransaction, setCurrentTransaction] =\n    useState<ActiveLedgerTransactionType | null>(null);\n\n  const [waitingForDevice, setWaitingForDevice] = useState(false);\n\n  const { getTxInfoByDataField, allTransactions } =\n    useParseMultiEsdtTransferData({\n      transactions: activeGuardianAddress\n        ? transactionsToSign?.map((transaction) => {\n            transaction.setSender(Address.fromBech32(address));\n            transaction.setVersion(TransactionVersion.withTxOptions());\n            transaction.setGuardian(Address.fromBech32(activeGuardianAddress));\n            const options = {\n              guarded: true,\n              ...(isLedger ? { hashSign: true } : {})\n            };\n            transaction.setOptions(TransactionOptions.withOptions(options));\n            return transaction;\n          })\n        : transactionsToSign\n    });\n\n  const isLastTransaction = currentStep === allTransactions.length - 1;\n  const currentTx = allTransactions[currentStep];\n  const sender = currentTransaction?.transaction?.getSender().toString();\n\n  // Skip account fetching if the sender is missing or same as current account\n  const { data: senderAccount } = useGetAccountFromApi(\n    !sender || sender === address ? null : sender\n  );\n\n  const extractTransactionsInfo = async () => {\n    if (currentTx == null) {\n      return;\n    }\n\n    const { transaction, multiTxData, transactionIndex } = currentTx;\n    const dataField = transaction.getData().toString();\n    const transactionTokenInfo = getTxInfoByDataField(\n      transaction.getData().toString(),\n      multiTxData\n    );\n\n    const { tokenId } = transactionTokenInfo;\n    const receiver = transaction.getReceiver().toString();\n\n    if (sender && sender !== address) {\n      const isValidSender = checkIsValidSender(senderAccount, address);\n\n      if (!isValidSender) {\n        console.error(SENDER_DIFFERENT_THAN_LOGGED_IN_ADDRESS);\n\n        return onCancel?.();\n      }\n    }\n\n    const notSender = address !== receiver;\n    const verified = receiver in verifiedAddresses;\n\n    if (receiver && notSender && !verified && onGetScamAddressData != null) {\n      const data = await onGetScamAddressData(receiver);\n      verifiedAddresses = {\n        ...verifiedAddresses,\n        ...(data?.scamInfo ? { [receiver]: data.scamInfo } : {})\n      };\n    }\n\n    const isTokenTransaction = Boolean(\n      tokenId && isTokenTransfer({ tokenId, erdLabel: egldLabel })\n    );\n\n    setCurrentTransaction({\n      transaction,\n      receiverScamInfo: verifiedAddresses[receiver]?.info || null,\n      transactionTokenInfo,\n      isTokenTransaction,\n      dataField,\n      transactionIndex\n    });\n  };\n\n  useEffect(() => {\n    extractTransactionsInfo();\n  }, [currentTx, senderAccount]);\n\n  const reset = () => {\n    setCurrentStep(0);\n    setSignedTransactions(undefined);\n    setWaitingForDevice(false);\n  };\n\n  const sign = async () => {\n    const existingSignedTransactions = Object.values(signedTransactions ?? {});\n\n    const alreadySignedByGuardian = getAreAllTransactionsSignedByGuardian({\n      isGuarded,\n      transactions: existingSignedTransactions\n    });\n\n    if (isGuarded && alreadySignedByGuardian) {\n      onTransactionsSignSuccess(existingSignedTransactions);\n      reset();\n      return;\n    }\n\n    if (currentTransaction == null) {\n      return;\n    }\n\n    setWaitingForDevice(isLedger);\n\n    let signedTx: Nullable<Transaction | undefined>;\n\n    try {\n      signedTx = await onSignTransaction(currentTransaction.transaction);\n    } catch (err) {\n      console.error(err, 'sign error');\n      const { message } = err as any;\n      const errorMessage = isLedger\n        ? getLedgerErrorCodes(err).errorMessage\n        : null;\n\n      reset();\n      onTransactionsSignError(errorMessage ?? message);\n      return;\n    }\n\n    if (!signedTx) {\n      return;\n    }\n\n    const newSignedTx = { [currentStep]: signedTx };\n    const newSignedTransactions = signedTransactions\n      ? { ...signedTransactions, ...newSignedTx }\n      : newSignedTx;\n\n    setSignedTransactions(newSignedTransactions);\n\n    if (!isLastTransaction) {\n      setCurrentStep((exising) => exising + 1);\n      setWaitingForDevice(false);\n      return;\n    }\n\n    if (!newSignedTransactions) {\n      return;\n    }\n\n    const allSignedTransactions = Object.values(newSignedTransactions);\n\n    const allSignedByGuardian = getAreAllTransactionsSignedByGuardian({\n      isGuarded,\n      transactions: allSignedTransactions\n    });\n\n    if (!allSignedByGuardian && hasGuardianScreen) {\n      return;\n    }\n\n    onTransactionsSignSuccess(allSignedTransactions);\n    reset();\n  };\n\n  const signTx = async () => {\n    try {\n      if (currentTransaction == null) {\n        return;\n      }\n\n      const signature = currentTransaction.transaction.getSignature();\n\n      if (signature.toString('hex') && !isLastTransaction) {\n        setCurrentStep((exising) => exising + 1);\n        return;\n      }\n\n      await sign();\n    } catch (e) {\n      console.error('Error during signing transaction');\n      // the only way to check if tx has signature is with try catch\n      await sign();\n    }\n  };\n\n  const isFirst = currentStep === 0;\n\n  const handleAbort = () => {\n    if (isFirst) {\n      onCancel?.();\n    } else {\n      setCurrentStep((existing) => existing - 1);\n    }\n  };\n\n  const shouldContinueWithoutSigning = Boolean(\n    currentTransaction?.transactionTokenInfo?.type &&\n      currentTransaction?.transactionTokenInfo?.multiTxData &&\n      !currentTransaction?.dataField.endsWith(\n        currentTransaction?.transactionTokenInfo?.multiTxData\n      )\n  );\n\n  const handleSignTransaction = async () => {\n    if (shouldContinueWithoutSigning) {\n      setCurrentStep((exising) => exising + 1);\n      return;\n    }\n\n    await signTx();\n  };\n\n  const onNext = () => {\n    setCurrentStep((current) => {\n      const nextStep = current + 1;\n\n      if (nextStep > allTransactions?.length) {\n        return current;\n      }\n\n      return nextStep;\n    });\n  };\n\n  const onPrev = () => {\n    setCurrentStep((current) => {\n      const nextStep = current - 1;\n\n      if (nextStep < 0) {\n        return current;\n      }\n\n      return nextStep;\n    });\n  };\n\n  return {\n    allTransactions,\n    onSignTransaction: handleSignTransaction,\n    onNext,\n    onPrev,\n    waitingForDevice,\n    onAbort: handleAbort,\n    isLastTransaction,\n    isFirstTransaction: currentStep === 0,\n    hasMultipleTransactions: allTransactions.length > 1,\n    shouldContinueWithoutSigning,\n    currentStep,\n    signedTransactions,\n    setSignedTransactions,\n    currentTransaction\n  };\n};\n", "import { ACCOUNTS_ENDPOINT } from '../endpoints';\nimport { useApiFetch } from '../utils';\n\nexport const useGetAccountFromApi = (address: string | null) =>\n  useApiFetch({\n    apiEndpoint: address\n      ? `${ACCOUNTS_ENDPOINT}/${address}?withGuardianInfo=true`\n      : null\n  });\n", "export * from './checkIsValidSender';\nexport * from './getShouldMoveTransactionsToSignedState';\nexport * from './useSetTransactionNonces';\nexport * from './getAreAllTransactionsSignedByGuardian';\nexport * from './checkNeedsGuardianSigning';\nexport * from './useGetLedgerProvider';\n", "import { AccountType } from 'types/account.types';\n\n// Don't allow signing if the logged in account's address\n// is neither the sender or the sender account's active guardian\nexport const checkIsValidSender = (\n  senderAccount: Partial<AccountType> | null,\n  address: string | string[]\n) => {\n  if (!senderAccount) {\n    return true;\n  }\n\n  if (Array.isArray(address)) {\n    return address.some(\n      (addr) =>\n        senderAccount.address === addr ||\n        senderAccount.activeGuardianAddress === addr\n    );\n  }\n\n  return (\n    senderAccount.address === address ||\n    senderAccount.activeGuardianAddress === address\n  );\n};\n", "import { Transaction } from '@multiversx/sdk-core';\nimport { transactionsToSignSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\n/**\n * If user cancels signing in SignTransactionsModal, and transactionsToSign were cleared from store make sure we access the latest store information before proceeeding\n */\nexport function getShouldMoveTransactionsToSignedState(\n  signedTransactions: Transaction[]\n) {\n  const currentTransactions = transactionsToSignSelector(store.getState());\n\n  const hasSameTransactions =\n    Object.keys(signedTransactions).length ===\n    currentTransactions?.transactions.length;\n\n  const hasAllTransactionsSigned = signedTransactions && hasSameTransactions;\n  return signedTransactions && hasAllTransactionsSigned;\n}\n", "import { Transaction } from '@multiversx/sdk-core';\nimport { useGetAccountFromApi } from 'apiCalls/accounts/useGetAccountFromApi';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport { addressSelector } from 'reduxStore/selectors';\nimport { getAccount } from 'utils/account/getAccount';\nimport { getLatestNonce } from 'utils/account/getLatestNonce';\nimport { computeTransactionsNonce } from './computeTransactionsNonce';\n\nexport const useSetTransactionNonces = () => {\n  const address = useSelector(addressSelector);\n  const { data: account } = useGetAccountFromApi(address);\n\n  return async (transactions: Transaction[]) => {\n    const currentAccount = account ?? (await getAccount(address));\n    const latestNonce = getLatestNonce(currentAccount);\n    const transactionsWithIncrementalNonces = computeTransactionsNonce({\n      latestNonce,\n      transactions\n    });\n\n    return transactionsWithIncrementalNonces;\n  };\n};\n", "import { Transaction } from '@multiversx/sdk-core';\nimport { computeTransactionNonce } from 'services/transactions/computeTransactionNonce';\n\nexport const computeTransactionsNonce = ({\n  latestNonce,\n  transactions\n}: {\n  latestNonce: number;\n  transactions: Array<Transaction>;\n}): Array<Transaction> => {\n  if (transactions.length === 0) {\n    return transactions;\n  }\n\n  return transactions.map((tx: Transaction, index: number) => {\n    const nextNonce = latestNonce + index;\n\n    const transactionNonce = tx.getNonce().valueOf();\n\n    // stop replacing nonce if transaction is configured with a higher nonce than the existing one\n    const computedNonce = computeTransactionNonce({\n      accountNonce: nextNonce,\n      transactionNonce\n    });\n\n    tx.setNonce(computedNonce);\n\n    return tx;\n  });\n};\n", "/**\n * Returns the higher nonce between the latest nonce of the account and the transaction nonce\n * Used to set the correct nonce for a transaction in the batch\n */\nexport const computeTransactionNonce = ({\n  accountNonce,\n  transactionNonce\n}: {\n  accountNonce: number;\n  transactionNonce?: number;\n}) => {\n  if (!transactionNonce) {\n    return accountNonce;\n  }\n\n  return transactionNonce > accountNonce ? transactionNonce : accountNonce;\n};\n", "import { Transaction } from '@multiversx/sdk-core/out';\n\nexport const getAreAllTransactionsSignedByGuardian = ({\n  transactions,\n  isGuarded\n}: {\n  transactions: Transaction[];\n  isGuarded?: boolean;\n}) => {\n  if (!isGuarded) {\n    return true;\n  }\n\n  if (transactions.length === 0) {\n    return false;\n  }\n\n  return transactions.every((tx) =>\n    Boolean(tx.getGuardianSignature().toString('hex'))\n  );\n};\n", "import { Transaction } from '@multiversx/sdk-core';\nimport { getEnvironmentForChainId } from 'apiCalls/configuration';\nimport { getCrossWindowProvider } from 'components/ProviderInitializer/helpers';\nimport {\n  WALLET_SIGN_SESSION,\n  fallbackNetworkConfigurations\n} from 'constants/index';\n\nimport { newWalletProvider } from 'providers/utils';\nimport { builtCallbackUrl } from 'utils/transactions/builtCallbackUrl';\nimport { getWindowLocation } from 'utils/window/getWindowLocation';\nimport { getAreAllTransactionsSignedByGuardian } from './getAreAllTransactionsSignedByGuardian';\n\ninterface SendTransactionsToGuardianType {\n  transactions: Transaction[];\n  hasGuardianScreen?: boolean;\n  isGuarded?: boolean;\n  callbackRoute?: string;\n  sessionId?: string;\n  walletAddress?: string;\n}\n\nexport const checkNeedsGuardianSigning = ({\n  transactions,\n  hasGuardianScreen,\n  callbackRoute,\n  sessionId,\n  walletAddress,\n  isGuarded\n}: SendTransactionsToGuardianType) => {\n  const allSignedByGuardian = getAreAllTransactionsSignedByGuardian({\n    isGuarded,\n    transactions\n  });\n\n  const chainId = transactions[0].getChainID().valueOf();\n  const sender = transactions[0].getSender().bech32().toString();\n  const environment = getEnvironmentForChainId(chainId);\n  const walletProviderAddress =\n    walletAddress ?? fallbackNetworkConfigurations[environment].walletAddress;\n\n  const sendTransactionsToGuardian = () => {\n    const walletProvider = newWalletProvider(walletProviderAddress);\n    const urlParams = { [WALLET_SIGN_SESSION]: String(sessionId) };\n    const { origin } = getWindowLocation();\n    const callbackUrl = window?.location\n      ? `${origin}${callbackRoute}`\n      : `${callbackRoute}`;\n    const builtedCallbackUrl = builtCallbackUrl({ callbackUrl, urlParams });\n\n    walletProvider.guardTransactions(transactions, {\n      callbackUrl: encodeURIComponent(builtedCallbackUrl)\n    });\n  };\n\n  const guardTransactions = async () => {\n    const provider = await getCrossWindowProvider({\n      address: sender,\n      walletUrl: walletProviderAddress\n    });\n    provider?.setShouldShowConsentPopup(true);\n    const guardedTransactions = await provider?.guardTransactions(transactions);\n    return guardedTransactions;\n  };\n\n  const needs2FaSigning =\n    !hasGuardianScreen && !allSignedByGuardian && sessionId;\n\n  return {\n    needs2FaSigning: isGuarded ? needs2FaSigning : false,\n    sendTransactionsToGuardian,\n    guardTransactions\n  };\n};\n", "export * from './getServerConfigurationForEnvironment';\nexport * from './getServerConfiguration';\nexport * from './getNetworkConfig';\nexport * from './getApiAddressForChainId';\nexport * from './getEnvironmentForChainId';\nexport * from './useGetNetworkConfigFromApi';\nexport * from './useGetServerConfigurationFromApi';\n", "import { fallbackNetworkConfigurations } from 'constants/network';\nimport { EnvironmentsEnum, NetworkType } from 'types';\nimport { getServerConfiguration } from './getServerConfiguration';\n\nexport interface GetServerConfigurationForEnvironmentOptionsType {\n  apiAddress?: string;\n}\n\nexport async function getServerConfigurationForEnvironment(\n  environment: EnvironmentsEnum,\n  options?: GetServerConfigurationForEnvironmentOptionsType\n): Promise<NetworkType> {\n  const fallbackConfig = fallbackNetworkConfigurations[environment];\n  const serverApiAddress = options?.apiAddress ?? fallbackConfig.apiAddress;\n  const config = await getServerConfiguration(serverApiAddress);\n\n  return config !== null ? config : fallbackConfig;\n}\n", "import axios from 'axios';\nimport { CONFIG_ENDPOINT } from 'apiCalls/endpoints';\nimport { NetworkType } from 'types';\n\nexport async function getServerConfiguration(apiAddress: string) {\n  const configUrl = `${apiAddress}/${CONFIG_ENDPOINT}`;\n\n  try {\n    const { data } = await axios.get<NetworkType>(configUrl);\n    if (data != null) {\n      // TODO: egldDenomination will be removed from API when dapp-core v1 will be discontinued\n      const egldDenomination = 'egldDenomination';\n      if (egldDenomination in data) {\n        const {\n          [egldDenomination]: decimals,\n          decimals: digits,\n          ...rest\n        } = data as NetworkType & {\n          [egldDenomination]: string;\n        };\n        const networkConfig: NetworkType = {\n          ...rest,\n          decimals,\n          digits\n        };\n        return networkConfig;\n      }\n      return data;\n    }\n  } catch (err) {\n    console.error('error fetching configuration for ', configUrl);\n  }\n  return null;\n}\n", "import axios from 'axios';\nimport { NETWORK_CONFIG_ENDPOINT } from 'apiCalls/endpoints';\nimport { getCleanApiAddress } from 'apiCalls/utils';\nimport { ApiNetworkConfigType } from 'types';\n\nconst urlIsValid = (url: string) => {\n  try {\n    return Boolean(new URL(url));\n  } catch {\n    return false;\n  }\n};\n\nexport async function getNetworkConfigFromApi() {\n  const apiAddress = getCleanApiAddress();\n\n  if (!urlIsValid(apiAddress)) {\n    return null;\n  }\n\n  const configUrl = `${apiAddress}/${NETWORK_CONFIG_ENDPOINT}`;\n\n  try {\n    const { data } = await axios.get<{\n      data: { config: ApiNetworkConfigType };\n    }>(configUrl);\n    if (data != null) {\n      return data?.data?.config;\n    }\n  } catch (err) {\n    console.error('error fetching configuration for ', configUrl);\n  }\n  return null;\n}\n", "import { fallbackNetworkConfigurations } from 'constants/network';\nimport { getEnvironmentForChainId } from './getEnvironmentForChainId';\n\nexport function getApiAddressForChainId(chainId: string) {\n  const environment = getEnvironmentForChainId(chainId);\n  const apiAddress = fallbackNetworkConfigurations[environment].apiAddress;\n  if (!apiAddress) {\n    throw 'Could not extract api address for environment, check if you have a valid chainID';\n  }\n  return apiAddress;\n}\n", "import { chainIdToEnvironment } from 'constants/network';\n\nexport function getEnvironmentForChainId(chainId: string) {\n  return chainIdToEnvironment[chainId];\n}\n", "import { NETWORK_CONFIG_ENDPOINT } from '../endpoints';\nimport { useApiFetch } from '../utils';\n\nexport const useGetNetworkConfigFromApi = () =>\n  useApiFetch({\n    apiEndpoint: NETWORK_CONFIG_ENDPOINT\n  });\n", "import { CONFIG_ENDPOINT } from 'apiCalls/endpoints';\nimport { NetworkType } from 'types';\nimport { useApiFetch } from '../utils';\n\nexport const useGetServerConfigurationFromApi = () => {\n  const { data, isLoading, error } = useApiFetch({\n    apiEndpoint: CONFIG_ENDPOINT\n  });\n\n  if (isLoading) {\n    return null;\n  }\n\n  if (error) {\n    console.error('Error fetching server configuration:', error);\n  }\n\n  const egldDenomination = 'egldDenomination';\n\n  if (!(egldDenomination in data)) {\n    return data;\n  }\n\n  const {\n    [egldDenomination]: decimals,\n    decimals: digits,\n    ...rest\n  } = data as NetworkType & {\n    [egldDenomination]: string;\n  };\n\n  const networkConfig: NetworkType = {\n    ...rest,\n    decimals,\n    digits\n  };\n\n  return networkConfig;\n};\n", "export * from './getOperaProvider';\nexport * from './getExtensionProvider';\nexport * from './getCrossWindowProvider';\nexport * from './getIframeProvider';\nexport * from './processModifiedAccount';\nexport * from './getModifiedLoginToken';\nexport * from './getMetamaskProvider';\nexport * from './getPasskeyProvider';\n", "import { OperaProvider } from '@multiversx/sdk-opera-provider';\n\nexport async function getOperaProvider(address: string) {\n  try {\n    const provider = OperaProvider.getInstance().setAddress(address);\n\n    const success = await provider.init();\n\n    if (success) {\n      return provider;\n    } else {\n      console.error(\n        'Could not initialise opera crypto wallet, make sure that opera crypto wallet is installed.'\n      );\n    }\n  } catch (err) {\n    console.error('Unable to login to OperaProvider', err);\n  }\n  return null;\n}\n", "import { ExtensionProvider } from '@multiversx/sdk-extension-provider';\n\nexport async function getExtensionProvider(address: string) {\n  try {\n    const provider = ExtensionProvider.getInstance().setAddress(address);\n\n    const success = await provider.init();\n\n    if (success) {\n      return provider;\n    } else {\n      console.error(\n        'Could not initialise extension, make sure MultiversX wallet extension is installed.'\n      );\n    }\n  } catch (err) {\n    console.error('Unable to login to ExtensionProvider', err);\n  }\n  return null;\n}\n", "import { CrossWindowProvider } from 'lib/sdkWebWalletCrossWindowProvider';\n\nexport async function getCrossWindowProvider({\n  address,\n  walletUrl\n}: {\n  address: string;\n  walletUrl: string;\n}) {\n  try {\n    const success = await CrossWindowProvider.getInstance().init();\n    const provider = CrossWindowProvider.getInstance()\n      .setAddress(address)\n      .setWalletUrl(walletUrl);\n\n    if (success) {\n      return provider;\n    } else {\n      console.error('Could not initialise Cross Window Wallet provider');\n    }\n  } catch (err) {\n    console.error('Unable to login to CrossWindowWalletProvider', err);\n  }\n  return null;\n}\n", "import {\n  IframeLoginTypes,\n  IframeProvider\n} from 'lib/sdkWebWalletIframeProvider';\n\ninterface GetIframeProviderPropsType {\n  address: string;\n  walletUrl: string;\n  loginType?: IframeLoginTypes;\n}\n\nexport async function getIframeProvider({\n  address,\n  walletUrl,\n  loginType\n}: GetIframeProviderPropsType) {\n  try {\n    const provider = IframeProvider.getInstance();\n\n    if (provider.isInitialized()) {\n      return provider;\n    }\n\n    switch (loginType) {\n      case IframeLoginTypes.passkey:\n        provider.setLoginType(IframeLoginTypes.passkey);\n        break;\n      case IframeLoginTypes.metamask:\n        provider.setLoginType(IframeLoginTypes.metamask);\n        break;\n      default:\n        break;\n    }\n\n    provider.setAddress(address).setWalletUrl(walletUrl);\n    const success = await provider.init();\n\n    if (success) {\n      return provider;\n    }\n\n    console.error('Could not initialise IframeProvider');\n  } catch (err) {\n    console.error('Unable to login to IframeProvider', err);\n  }\n  return null;\n}\n", "import { getAccount } from 'utils/account/getAccount';\nimport {\n  getModifiedLoginToken,\n  GetMultiSigLoginTokenType\n} from './getModifiedLoginToken';\n\ninterface SetMultisigLoginToken<T> extends GetMultiSigLoginTokenType {\n  signature?: string;\n  address: string;\n  loginService: T;\n}\n\nexport const processModifiedAccount = async <\n  T extends {\n    setLoginToken: (loginToken: string) => void;\n    setTokenLoginInfo: ({\n      address,\n      signature\n    }: {\n      address: string;\n      signature: string;\n    }) => string | undefined;\n  }\n>({\n  loginToken: token,\n  extraInfoData,\n  address,\n  signature,\n  loginService\n}: SetMultisigLoginToken<T>) => {\n  const loginToken = await getModifiedLoginToken({\n    loginToken: token,\n    extraInfoData\n  });\n\n  const tokenAddress =\n    extraInfoData.multisig || extraInfoData.impersonate || address;\n\n  const accountAddress = loginToken != null ? tokenAddress : address;\n\n  if (loginToken != null) {\n    loginService.setLoginToken(loginToken);\n  }\n\n  if (signature) {\n    loginService.setTokenLoginInfo({ signature, address });\n  }\n\n  const account = await getAccount(accountAddress);\n\n  return account;\n};\n", "import { decodeLoginToken } from 'services/nativeAuth/helpers/decodeLoginToken';\nimport { LatestBlockHashType } from 'services/nativeAuth/helpers/getLatestBlockHash';\nimport { nativeAuth } from 'services/nativeAuth/nativeAuth';\n\nexport interface GetMultiSigLoginTokenType {\n  loginToken?: string;\n  extraInfoData: {\n    multisig?: string;\n    impersonate?: string;\n  };\n}\n\nexport const getModifiedLoginToken = async ({\n  loginToken,\n  extraInfoData\n}: GetMultiSigLoginTokenType) => {\n  if (loginToken == null || Object.keys(extraInfoData).length === 0) {\n    return null;\n  }\n\n  const data = decodeLoginToken(String(loginToken));\n  const { timestamp, ...rest } = data?.extraInfo || {};\n\n  const isValidData = data && timestamp != null;\n\n  if (!isValidData) {\n    return null;\n  }\n  const latestBlockInfo: LatestBlockHashType = {\n    hash: String(data?.blockHash),\n    timestamp: Number(timestamp)\n  };\n\n  const tokenLogin = await nativeAuth({\n    extraInfo: { ...rest, ...extraInfoData },\n    expirySeconds: data?.ttl,\n    origin: data?.origin\n  }).initialize({\n    latestBlockInfo\n  });\n\n  return tokenLogin;\n};\n", "import isString from 'lodash/isString';\nimport { decodeBase64 } from 'utils/decoders/base64Utils';\n\nexport interface DecodedLoginTokenType {\n  blockHash: string;\n  extraInfo?: { timestamp: number };\n  origin: string;\n  ttl: number;\n}\n\nexport const decodeLoginToken = (\n  loginToken: string\n): DecodedLoginTokenType | null => {\n  if (!loginToken || !isString(loginToken)) {\n    return null;\n  }\n\n  const parts = loginToken.split('.');\n\n  if (parts.length !== 4) {\n    return null;\n  }\n\n  try {\n    const [origin, blockHash, ttl, extraInfo] = parts;\n    const parsedExtraInfo = JSON.parse(decodeBase64(extraInfo));\n    const parsedOrigin = decodeBase64(origin);\n\n    return {\n      ttl: Number(ttl),\n      extraInfo: parsedExtraInfo,\n      origin: parsedOrigin,\n      blockHash\n    };\n  } catch (e) {\n    console.error(`Error trying to decode ${loginToken}:`, e);\n\n    return null;\n  }\n};\n", "import { NativeAuthClient } from '@multiversx/sdk-native-auth-client';\nimport { NativeAuthConfigType } from 'types';\nimport {\n  getLatestBlockHash,\n  LatestBlockHashType\n} from './helpers/getLatestBlockHash';\n\nimport { getNativeAuthConfig, getTokenExpiration } from './methods';\n\ninterface NativeAuthInitType {\n  extraInfo?: { [key: string]: string };\n  latestBlockInfo?: LatestBlockHashType;\n  noCache?: boolean;\n}\n\nexport const nativeAuth = (config?: NativeAuthConfigType) => {\n  const {\n    origin,\n    apiAddress,\n    expirySeconds,\n    blockHashShard,\n    extraInfo: extraInfoFromConfig,\n    gatewayUrl,\n    extraRequestHeaders\n  } = getNativeAuthConfig(config) as NativeAuthConfigType;\n\n  const nativeAuthClient = new NativeAuthClient({\n    origin,\n    apiUrl: apiAddress,\n    expirySeconds,\n    blockHashShard,\n    gatewayUrl,\n    extraRequestHeaders\n  });\n\n  const initialize = async (\n    initProps?: NativeAuthInitType\n  ): Promise<string> => {\n    if (!apiAddress || !origin) {\n      return '';\n    }\n\n    const getBlockHash = (): Promise<string> =>\n      nativeAuthClient.getCurrentBlockHash();\n\n    try {\n      const response =\n        initProps?.latestBlockInfo ??\n        (await getLatestBlockHash(\n          apiAddress,\n          blockHashShard,\n          getBlockHash,\n          initProps?.noCache\n        ));\n\n      if (!response) {\n        return '';\n      }\n\n      const { hash, timestamp } = response;\n      const encodedExtraInfo = nativeAuthClient.encodeValue(\n        JSON.stringify({\n          ...(initProps?.extraInfo ?? extraInfoFromConfig),\n          ...(timestamp ? { timestamp } : {})\n        })\n      );\n\n      const encodedOrigin = nativeAuthClient.encodeValue(origin);\n\n      return `${encodedOrigin}.${hash}.${expirySeconds}.${encodedExtraInfo}`;\n    } catch (err: any) {\n      console.error('Error getting native auth token: ', err.toString());\n      return '';\n    }\n  };\n\n  const getToken = ({\n    address,\n    token,\n    signature\n  }: {\n    address: string;\n    token: string;\n    signature: string;\n  }): string => nativeAuthClient.getToken(address, token, signature);\n\n  return {\n    getNativeAuthConfig,\n    initialize,\n    getToken,\n    getTokenExpiration\n  };\n};\n", "import axios from 'axios';\nimport { BLOCKS_ENDPOINT } from 'apiCalls/endpoints';\nimport { retryMultipleTimes } from 'utils/retryMultipleTimes';\n\nexport interface LatestBlockHashType {\n  hash: string;\n  timestamp: number;\n}\n\nconst getBlockFromPosition = 4;\nconst cachingDurationMs = 30000; // 30 seconds, a block hash is valid for 1 minute from its generation\n//this is an object with .current, so it doesn't get affected by closure and is always a fresh value\nconst cachedResponse: Record<string, LatestBlockHashType | null> = {\n  current: null\n};\n\nconst requestPromise: {\n  current: Promise<LatestBlockHashType> | null;\n} = {\n  current: null\n};\n\nconst getLatestBlockHashFromServer = retryMultipleTimes(\n  async (\n    apiUrl: string,\n    blockHashShard?: number,\n    getBlockHash?: () => Promise<string>\n  ): Promise<LatestBlockHashType | null> => {\n    // get current block hash\n    if (getBlockHash) {\n      const timestamp = Math.floor(Date.now() / 1000);\n      const hash = await getBlockHash();\n\n      return { hash, timestamp };\n    }\n\n    //get the penultimate block hash (3 shards + the meta chain) to make sure that the block is seen by auth server\n    const { data } = await axios.get<Array<LatestBlockHashType>>(\n      `${apiUrl}/${BLOCKS_ENDPOINT}?from=${getBlockFromPosition}&size=1&fields=hash,timestamp${\n        blockHashShard ? '&shard=' + blockHashShard : ''\n      }`\n    );\n    const [latestBlock] = data;\n    return latestBlock;\n  }\n);\n\n// TODO: make getLatestBlockHash accept an object and make getBlockHash param mandatory (to replace axios call)\nexport async function getLatestBlockHash(\n  apiUrl: string,\n  blockHashShard?: number,\n  getBlockHash?: () => Promise<string>,\n  noCache?: boolean\n): Promise<LatestBlockHashType> {\n  if (apiUrl == null) {\n    throw new Error('missing api url');\n  }\n\n  const currentTimestampMs = Date.now();\n  if (\n    cachedResponse.current != null &&\n    currentTimestampMs <\n      cachedResponse.current.timestamp * 1000 + cachingDurationMs &&\n    !noCache\n  ) {\n    return cachedResponse.current;\n  }\n  //this will prevent multiple calls to this function from generating multiple hashes\n  if (requestPromise.current != null) {\n    //if there is already an await in progress for the API, just return the result of that promise\n    return await requestPromise.current;\n  }\n\n  //if a promise is not in progress, get a new promise and add it to the promise\n  requestPromise.current = getLatestBlockHashFromServer(\n    apiUrl,\n    blockHashShard,\n    getBlockHash\n  );\n\n  try {\n    const response = await requestPromise.current;\n    if (response == null) {\n      requestPromise.current = null;\n      throw new Error('could not get block hash');\n    }\n    //set the new response, the new expiry and unlock the regeneration flow for the next expiration period\n    cachedResponse.current = {\n      hash: response.hash,\n      timestamp: response.timestamp\n    };\n\n    requestPromise.current = null;\n    return response;\n  } catch (err) {\n    requestPromise.current = null;\n    return null as any;\n  }\n}\n", "import { sleep } from './asyncActions';\n\ninterface Options {\n  retries: number;\n  delay?: number;\n}\n\nconst executeAsyncCall = async (\n  cb: (...args: any[]) => any,\n  options: Options,\n  args: any[],\n  retries = 0\n): Promise<any | null> => {\n  try {\n    return await cb(...args);\n  } catch (error) {\n    if (retries < options.retries) {\n      if (options?.delay != null) {\n        await sleep(options.delay);\n      }\n\n      return await executeAsyncCall(cb, options, args, retries + 1);\n    }\n\n    return null;\n  }\n};\n\nexport const retryMultipleTimes =\n  (\n    cb: (...args: any[]) => any,\n    options: Options = { retries: 5, delay: 500 }\n  ) =>\n  async (...args: any[]) => {\n    return await executeAsyncCall(cb, options, args);\n  };\n", "export * from './sleep';\nexport * from './timeoutPromise';\n", "export async function sleep(time: number) {\n  return await new Promise<void>((resolve) => {\n    //timeouts are broken in jest, if this is a test env\n    //exit the sleep state immediately\n    if (process.env.NODE_ENV === 'test') {\n      resolve();\n    }\n    setTimeout(() => resolve(), time);\n  });\n}\n", "export const timeoutPromise = async (\n  promise: Promise<any> | undefined,\n  time: number,\n  exception: symbol\n) => {\n  let timer: NodeJS.Timeout;\n  return Promise.race([\n    promise,\n    new Promise((_r, rej) => (timer = setTimeout(rej, time, exception)))\n  ]).finally(() => clearTimeout(timer));\n};\n", "export * from './getTokenExpiration';\nexport * from './getNativeAuthConfig';\n", "import { getUnixTimestamp } from 'utils/dateTime/getUnixTimestamp';\nimport { decodeNativeAuthToken } from '../helpers/decodeNativeAuthToken';\n\nexport interface GetTokenExpirationReturnType {\n  isExpired: boolean;\n  expiresAt?: number;\n  secondsUntilExpires?: number;\n}\n\nconst notFound = {\n  isExpired: false\n};\n\nexport const getTokenExpiration = (\n  token?: string\n): GetTokenExpirationReturnType => {\n  if (!token) {\n    return notFound;\n  }\n\n  const decodedToken = decodeNativeAuthToken(token);\n\n  if (!decodedToken) {\n    return notFound;\n  }\n\n  const unixNow = getUnixTimestamp();\n  const { ttl, extraInfo } = decodedToken;\n\n  const timestamp = extraInfo?.timestamp;\n\n  if (!timestamp) {\n    return notFound;\n  }\n\n  const expiresAt = timestamp + ttl;\n\n  const isExpired = unixNow > expiresAt;\n\n  const secondsUntilExpires = expiresAt - unixNow;\n\n  return { isExpired, expiresAt, secondsUntilExpires };\n};\n", "import { decodeBase64 } from 'utils/decoders/base64Utils';\nimport { DecodedLoginTokenType, decodeLoginToken } from './decodeLoginToken';\n\nfunction isString(x: any) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\n\ninterface DecodedNativeAuthTokenType extends DecodedLoginTokenType {\n  address: string;\n  body: string;\n  signature: string;\n}\n\nexport const decodeNativeAuthToken = (\n  accessToken?: string\n): DecodedNativeAuthTokenType | null => {\n  if (!accessToken || !isString(accessToken)) {\n    return null;\n  }\n\n  const parts = accessToken.split('.');\n\n  if (parts.length !== 3) {\n    console.error(\n      'Invalid nativeAuthToken. You may be trying to decode a loginToken. Try using decodeLoginToken method instead'\n    );\n    return null;\n  }\n\n  try {\n    const [address, body, signature] = parts;\n    const parsedAddress = decodeBase64(address);\n    const parsedBody = decodeBase64(body);\n    const parsedInitToken = decodeLoginToken(parsedBody);\n\n    if (!parsedInitToken) {\n      return {\n        address: parsedAddress,\n        body: parsedBody,\n        signature,\n        blockHash: '',\n        origin: '',\n        ttl: 0\n      };\n    }\n\n    const result = {\n      ...parsedInitToken,\n      address: parsedAddress,\n      body: parsedBody,\n      signature\n    };\n\n    // if empty object, delete extraInfo\n    if (!parsedInitToken.extraInfo?.timestamp) {\n      delete result.extraInfo;\n    }\n\n    return result;\n  } catch (err) {\n    return null;\n  }\n};\n", "import { NativeAuthConfigType } from 'types';\nimport { getWindowLocation } from 'utils/window/getWindowLocation';\n\nconst defaultNativeAuthConfig = {\n  origin: getWindowLocation().origin,\n  apiAddress: 'https://api.multiversx.com',\n  expirySeconds: 60 * 60 * 24, // one day\n  tokenExpirationToastWarningSeconds: 5 * 60 // five minutes\n};\n\nexport const getNativeAuthConfig = (config?: NativeAuthConfigType | true) => {\n  if (config === true) {\n    return defaultNativeAuthConfig;\n  }\n  const nativeAuthConfig = {\n    origin: config?.origin ?? defaultNativeAuthConfig.origin,\n    blockHashShard: config?.blockHashShard,\n    expirySeconds:\n      config?.expirySeconds ?? defaultNativeAuthConfig.expirySeconds,\n    apiAddress: config?.apiAddress ?? defaultNativeAuthConfig.apiAddress,\n    tokenExpirationToastWarningSeconds:\n      config?.tokenExpirationToastWarningSeconds ??\n      defaultNativeAuthConfig.tokenExpirationToastWarningSeconds,\n    extraInfo: config?.extraInfo ?? {},\n    gatewayUrl: config?.gatewayUrl,\n    extraRequestHeaders: config?.extraRequestHeaders ?? {}\n  };\n  return nativeAuthConfig;\n};\n", "import { MetamaskProvider } from '@multiversx/sdk-metamask-provider/out/metamaskProvider';\n\nexport async function getMetamaskProvider(address: string) {\n  try {\n    const provider = MetamaskProvider.getInstance().setAddress(address);\n\n    const success = await provider.init();\n\n    if (success) {\n      return provider;\n    } else {\n      console.error(\n        'Could not initialise metamask, make suremetamask flask is installed.'\n      );\n    }\n  } catch (err) {\n    console.error('Unable to login to MetamaskProvider', err);\n  }\n  return null;\n}\n", "import { PasskeyProvider } from '@multiversx/sdk-passkey-provider/out';\n\nexport async function getPasskeyProvider(address: string) {\n  try {\n    const provider = PasskeyProvider.getInstance().setAddress(address);\n\n    const success = await provider.init();\n\n    if (success) {\n      return provider;\n    } else {\n      console.error('Could not initialise passkey provider');\n    }\n  } catch (err) {\n    console.error('Unable to login to PasskeyProvider', err);\n  }\n  return null;\n}\n", "import { useSetLedgerProvider } from 'components/ProviderInitializer/hooks';\nimport { useGetAccountProvider } from 'hooks/account/useGetAccountProvider';\n\nexport const useGetLedgerProvider = () => {\n  const { provider } = useGetAccountProvider();\n  const { setLedgerProvider } = useSetLedgerProvider();\n\n  return async function getLedgerProvider() {\n    let isConnected: boolean;\n\n    try {\n      const address = await provider.getAddress();\n      isConnected = Boolean(address);\n    } catch (error) {\n      isConnected = false;\n    }\n\n    if (isConnected) {\n      return provider;\n    }\n\n    const ledgerProvider = await setLedgerProvider({ isRelogin: true });\n\n    if (!ledgerProvider) {\n      return provider;\n    }\n\n    return ledgerProvider;\n  };\n};\n", "export * from './useSetLedgerProvider';\n", "import { useState } from 'react';\nimport { HWProvider } from '@multiversx/sdk-hw-provider';\nimport {\n  setAccountProvider,\n  getAccountProvider\n} from 'providers/accountProvider';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport {\n  isLoggedInSelector,\n  ledgerLoginSelector,\n  logoutRouteSelector\n} from 'reduxStore/selectors';\nimport { getLedgerConfiguration } from 'utils/account';\nimport { logout } from 'utils/logout';\n\ntype SetLedgerProviderType = {\n  isRelogin?: boolean;\n};\n\nexport const useSetLedgerProvider = () => {\n  const logoutRoute = useSelector(logoutRouteSelector);\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const ledgerLogin = useSelector(ledgerLoginSelector);\n  const provider = getAccountProvider();\n\n  const [ledgerData, setLedgerData] =\n    useState<{\n      version: string;\n      dataEnabled: boolean;\n    }>();\n\n  const initHWProvider = async () => {\n    const hasAddressIndex = ledgerLogin?.index != null;\n\n    try {\n      if (provider instanceof HWProvider && provider.isInitialized()) {\n        if (hasAddressIndex) {\n          await provider.setAddressIndex(ledgerLogin.index);\n        }\n\n        return provider;\n      }\n\n      const hwWalletP = new HWProvider();\n      const isInitialized = await hwWalletP.init();\n\n      if (!isInitialized) {\n        return null;\n      }\n\n      if (hasAddressIndex) {\n        await hwWalletP.setAddressIndex(ledgerLogin.index);\n      }\n\n      return hwWalletP;\n    } catch (e) {\n      console.error('Failed to initialise Ledger Provider');\n\n      return null;\n    }\n  };\n\n  async function setLedgerProvider(props?: SetLedgerProviderType) {\n    let hwWalletP: HWProvider | null;\n\n    const shouldLogout = isLoggedIn && !props?.isRelogin;\n\n    try {\n      hwWalletP = await initHWProvider();\n\n      if (!hwWalletP) {\n        console.warn('Could not initialise ledger app');\n\n        if (shouldLogout) {\n          logout(logoutRoute);\n        }\n\n        return;\n      }\n\n      const ledgerConfig = await getLedgerConfiguration(hwWalletP);\n      setAccountProvider(hwWalletP);\n      setLedgerData(ledgerConfig);\n\n      return hwWalletP;\n    } catch (err) {\n      console.error('Could not initialise ledger app', err);\n\n      if (shouldLogout) {\n        logout(logoutRoute);\n      }\n    }\n    return null;\n  }\n\n  return { setLedgerProvider, ledgerData };\n};\n", "import { CrossWindowProvider } from 'lib/sdkWebWalletCrossWindowProvider';\nimport { getAccountProvider, getProviderType } from 'providers';\nimport { logoutAction } from 'reduxStore/commonActions';\nimport { store } from 'reduxStore/store';\nimport { LoginMethodsEnum } from 'types';\nimport { matchPath } from '../wrappers/AuthenticatedRoutesWrapper/helpers/matchPath';\nimport { getAddress, getWebviewToken } from './account';\nimport { preventRedirects, safeRedirect } from './redirect';\nimport { storage } from './storage';\nimport { localStorageKeys } from './storage/local';\nimport { addOriginToLocationPath, getWindowLocation } from './window';\n\ninterface RedirectToCallbackUrlParamsType {\n  callbackUrl?: string;\n  onRedirect?: (callbackUrl?: string) => void;\n}\n\nconst redirectToCallbackUrl = ({\n  callbackUrl,\n  onRedirect\n}: RedirectToCallbackUrlParamsType) => {\n  if (typeof onRedirect === 'function') {\n    onRedirect(callbackUrl);\n  } else if (callbackUrl) {\n    safeRedirect({ url: callbackUrl });\n  }\n};\n\nconst broadcastLogoutAcrossTabs = (address: string) => {\n  const storedData = storage.local.getItem(localStorageKeys.logoutEvent);\n  const { data } = storedData ? JSON.parse(storedData) : { data: address };\n\n  if (address !== data) {\n    return;\n  }\n\n  storage.local.setItem({\n    key: localStorageKeys.logoutEvent,\n    data: address,\n    expires: 0\n  });\n\n  storage.local.removeItem(localStorageKeys.logoutEvent);\n};\n\nconst CLEAR_SESSION_TIMEOUT_MS = 500;\n\nexport async function logout(\n  callbackUrl?: string,\n  onRedirect?: (callbackUrl?: string) => void,\n  shouldAttemptReLogin = Boolean(getWebviewToken()),\n  options = {\n    shouldBroadcastLogoutAcrossTabs: true,\n    hasConsentPopup: false\n  }\n) {\n  let address = '';\n  const provider = getAccountProvider();\n  const providerType = getProviderType(provider);\n  const isWalletProvider = providerType === LoginMethodsEnum.wallet;\n  const isProviderInitialised = provider?.isInitialized?.() === true;\n\n  if (shouldAttemptReLogin && provider?.relogin != null) {\n    return provider.relogin();\n  }\n\n  if (options.shouldBroadcastLogoutAcrossTabs) {\n    try {\n      address = await getAddress();\n      broadcastLogoutAcrossTabs(address);\n    } catch (err) {\n      console.error('error fetching logout address', err);\n    }\n  }\n\n  const url = addOriginToLocationPath(callbackUrl);\n  const location = getWindowLocation();\n  const callbackPathname = new URL(decodeURIComponent(url)).pathname;\n\n  // Prevent page redirect if the logout callbackURL is equal to the current URL\n  // or if is wallet provider\n  if (\n    matchPath(location.pathname, callbackPathname) ||\n    (isWalletProvider && isProviderInitialised)\n  ) {\n    preventRedirects();\n  }\n\n  // We are already logged out, so we can redirect to the dapp\n  if (!address && !isProviderInitialised) {\n    return redirectToCallbackUrl({\n      callbackUrl: url,\n      onRedirect\n    });\n  }\n\n  try {\n    store.dispatch(logoutAction());\n\n    if (isWalletProvider) {\n      // Allow redux store cleanup before redirect to web wallet\n      return setTimeout(() => {\n        provider.logout({ callbackUrl: url });\n      }, CLEAR_SESSION_TIMEOUT_MS);\n    }\n\n    if (\n      options.hasConsentPopup &&\n      providerType === LoginMethodsEnum.crossWindow\n    ) {\n      (provider as unknown as CrossWindowProvider).setShouldShowConsentPopup(\n        true\n      );\n    }\n\n    await provider.logout({ callbackUrl: url });\n  } catch (err) {\n    console.error('Logging out error:', err);\n  } finally {\n    if (!isWalletProvider) {\n      redirectToCallbackUrl({\n        callbackUrl: url,\n        onRedirect\n      });\n    }\n  }\n}\n", "// credits go to: https://remix.run\n// sourcecode: https://raw.githubusercontent.com/remix-run/react-router/6b44e99f0b659428ce2ec8d5098e90c7fddda2c5/packages/react-router/lib/router.ts\n\nfunction warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\ntype ParamParseFailed = { failed: true };\n\ntype ParamParseSegment<Segment extends string> =\n  // Check here if there exists a forward slash in the string.\n  // eslint-disable-next-line prettier/prettier\n  Segment extends `${infer LeftSegment}/${infer RightSegment}`\n    ? // If there is a forward slash, then attempt to parse each side of the\n      // forward slash.\n      ParamParseSegment<LeftSegment> extends infer LeftResult\n      ? ParamParseSegment<RightSegment> extends infer RightResult\n        ? LeftResult extends string\n          ? // If the left side is successfully parsed as a param, then check if\n            // the right side can be successfully parsed as well. If both sides\n            // can be parsed, then the result is a union of the two sides\n            // (read: \"foo\" | \"bar\").\n            RightResult extends string\n            ? LeftResult | RightResult\n            : LeftResult\n          : // If the left side is not successfully parsed as a param, then check\n          // if only the right side can be successfully parse as a param. If it\n          // can, then the result is just right, else it's a failure.\n          RightResult extends string\n          ? RightResult\n          : ParamParseFailed\n        : ParamParseFailed\n      : // If the left side didn't parse into a param, then just check the right\n      // side.\n      ParamParseSegment<RightSegment> extends infer RightResult\n      ? RightResult extends string\n        ? RightResult\n        : ParamParseFailed\n      : ParamParseFailed\n    : // If there's no forward slash, then check if this segment starts with a\n    // colon. If it does, then this is a dynamic segment, so the result is\n    // just the remainder of the string. Otherwise, it's a failure.\n    Segment extends `:${infer Remaining}`\n    ? Remaining\n    : ParamParseFailed;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\ntype ParamParseKey<Segment extends string> =\n  ParamParseSegment<Segment> extends string\n    ? ParamParseSegment<Segment>\n    : string;\n\n/**\n * The parameters that were parsed from the URL path.\n */\ntype Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\ninterface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\ninterface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === 'string') {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  const [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  const match = pathname.match(matcher);\n  if (!match) return null;\n\n  const matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, '$1');\n  const captureGroups = match.slice(1);\n  const params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === '*') {\n        const splatValue = captureGroups[index] || '';\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, '$1');\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || '',\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === '*' || !path.endsWith('*') || path.endsWith('/*'),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, '/*')}\" because the \\`*\\` character must ` +\n      'always follow a `/` in the pattern. To get rid of this warning, ' +\n      `please change the route path to \"${path.replace(/\\*$/, '/*')}\".`\n  );\n\n  const paramNames: string[] = [];\n  let regexpSource =\n    '^' +\n    path\n      .replace(/\\/*\\*?$/, '') // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, '/') // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, '\\\\$&') // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return '([^\\\\/]+)';\n      });\n\n  if (path.endsWith('*')) {\n    paramNames.push('*');\n    regexpSource +=\n      path === '*' || path === '/*'\n        ? '(.*)$' // Already matched the initial /, just match the rest\n        : '(?:\\\\/(.+)|\\\\/*)$'; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end\n      ? '\\\\/*$' // When matching to the end, ignore trailing slashes\n      : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n        // parent routes to matching only their own words and nothing more, e.g. parent\n        // route \"/home\" should not match \"/home2\".\n        // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n        // but do not consume the character in the matched path so they can match against\n        // nested paths.\n        '(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)';\n  }\n\n  const matcher = new RegExp(regexpSource, caseSensitive ? undefined : 'i');\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n", "import { getAccountProvider, getProviderType } from 'providers';\n\nexport const useGetAccountProvider = () => {\n  const provider = getAccountProvider();\n  const providerType = getProviderType(provider);\n  return { provider, providerType };\n};\n", "import { useEffect, useRef } from 'react';\nimport {\n  Transaction,\n  TransactionOptions,\n  TransactionVersion\n} from '@multiversx/sdk-core';\n\nimport { ExtensionProvider } from '@multiversx/sdk-extension-provider';\nimport { MetamaskProvider } from '@multiversx/sdk-metamask-provider/out/metamaskProvider';\n\nimport { PasskeyProvider } from '@multiversx/sdk-passkey-provider/out';\nimport uniq from 'lodash/uniq';\nimport { useGetAccountFromApi } from 'apiCalls/accounts/useGetAccountFromApi';\nimport {\n  ERROR_SIGNING,\n  ERROR_SIGNING_TX,\n  MISSING_PROVIDER_MESSAGE,\n  PROVIDER_NOT_INITIALIZED,\n  SENDER_DIFFERENT_THAN_LOGGED_IN_ADDRESS,\n  TRANSACTION_CANCELLED,\n  WALLET_SIGN_SESSION\n} from 'constants/index';\nimport { useGetAccount } from 'hooks/account';\nimport { useGetAccountProvider } from 'hooks/account/useGetAccountProvider';\nimport { useParseSignedTransactions } from 'hooks/transactions/useParseSignedTransactions';\nimport { CrossWindowProvider } from 'lib/sdkWebWalletCrossWindowProvider';\nimport { IframeProvider } from 'lib/sdkWebWalletIframeProvider';\nimport { ExperimentalWebviewProvider } from 'providers/experimentalWebViewProvider';\nimport { getProviderType } from 'providers/utils';\n\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport {\n  signTransactionsCancelMessageSelector,\n  walletAddressSelector\n} from 'reduxStore/selectors';\nimport {\n  clearAllTransactionsToSign,\n  clearTransactionsInfoForSessionId,\n  moveTransactionsToSignedState,\n  MoveTransactionsToSignedStatePayloadType,\n  setSignTransactionsCancelMessage\n} from 'reduxStore/slices';\nimport {\n  LoginMethodsEnum,\n  TransactionBatchStatusesEnum\n} from 'types/enums.types';\nimport { builtCallbackUrl } from 'utils/transactions/builtCallbackUrl';\nimport { parseTransactionAfterSigning } from 'utils/transactions/parseTransactionAfterSigning';\nimport { getDefaultCallbackUrl } from 'utils/window';\nimport { getWindowLocation } from 'utils/window/getWindowLocation';\n\nimport {\n  useSetTransactionNonces,\n  getShouldMoveTransactionsToSignedState,\n  checkNeedsGuardianSigning,\n  checkIsValidSender\n} from './helpers';\nimport { useSignTransactionsCommonData } from './useSignTransactionsCommonData';\n\nexport const useSignTransactions = () => {\n  const dispatch = useDispatch();\n  const savedCallback = useRef('/');\n  const { provider } = useGetAccountProvider();\n  const walletAddress = useSelector(walletAddressSelector);\n  const providerType = getProviderType(provider);\n  const isSigningRef = useRef(false);\n  const setTransactionNonces = useSetTransactionNonces();\n  const { isGuarded, address } = useGetAccount();\n\n  const signTransactionsCancelMessage = useSelector(\n    signTransactionsCancelMessageSelector\n  );\n\n  const {\n    transactionsToSign,\n    error,\n    setError,\n    hasTransactions,\n    onAbort,\n    clearTransactionStatusMessage\n  } = useSignTransactionsCommonData();\n\n  useParseSignedTransactions(onAbort);\n\n  const senderAddresses = uniq(\n    transactionsToSign?.transactions\n      .map((tx) => tx.getSender().toString())\n      .filter((sender) => sender)\n  ) as string[];\n\n  const sender = senderAddresses?.[0];\n\n  // Skip account fetching if the sender is missing or same as current account\n  const { data: senderAccount } = useGetAccountFromApi(\n    !sender || sender === address ? null : sender\n  );\n\n  const clearSignInfo = (sessionId?: string) => {\n    const isExtensionProvider = provider instanceof ExtensionProvider;\n    const isPasskeyProvider = provider instanceof PasskeyProvider;\n    const isCrossWindowProvider = provider instanceof CrossWindowProvider;\n    const isIframeProvider = provider instanceof IframeProvider;\n    const isMetamaskProvider = provider instanceof MetamaskProvider;\n    const isExperiementalWebviewProvider =\n      provider instanceof ExperimentalWebviewProvider;\n\n    dispatch(clearAllTransactionsToSign());\n    dispatch(clearTransactionsInfoForSessionId(sessionId));\n\n    isSigningRef.current = false;\n\n    if (\n      !isExtensionProvider &&\n      !isCrossWindowProvider &&\n      !isIframeProvider &&\n      !isPasskeyProvider &&\n      !isMetamaskProvider\n    ) {\n      return;\n    }\n\n    clearTransactionStatusMessage();\n\n    if (isExtensionProvider) {\n      ExtensionProvider.getInstance()?.cancelAction?.();\n    }\n    if (isPasskeyProvider) {\n      PasskeyProvider.getInstance()?.cancelAction?.();\n    }\n    if (isMetamaskProvider) {\n      MetamaskProvider.getInstance()?.cancelAction?.();\n    }\n    if (isCrossWindowProvider) {\n      CrossWindowProvider.getInstance()?.cancelAction?.();\n    }\n    if (isIframeProvider) {\n      IframeProvider.getInstance()?.cancelAction?.();\n    }\n    if (isExperiementalWebviewProvider) {\n      ExperimentalWebviewProvider.getInstance()?.cancelAction?.();\n    }\n  };\n\n  const onCancel = (errorMessage: string, sessionId?: string) => {\n    const isSigningWithWalletConnectV2 =\n      providerType === LoginMethodsEnum.walletconnectv2;\n\n    if (isSigningWithWalletConnectV2) {\n      errorMessage = TRANSACTION_CANCELLED;\n    }\n\n    const isTxCancelled = errorMessage.includes(TRANSACTION_CANCELLED);\n    clearSignInfo(sessionId);\n\n    /*\n     * this is triggered by abort action,\n     * so no need to show error\n     */\n    if (isTxCancelled) {\n      dispatch(setSignTransactionsCancelMessage(TRANSACTION_CANCELLED));\n      return;\n    }\n\n    setError(errorMessage);\n  };\n\n  const signWithWallet = (\n    transactions: Array<Transaction>,\n    sessionId: string,\n    callbackRoute = ''\n  ) => {\n    const urlParams: Record<string, string> = {\n      [WALLET_SIGN_SESSION]: sessionId\n    };\n    let callbackUrl = callbackRoute;\n\n    if (window?.location) {\n      const { search, origin } = getWindowLocation();\n      const searchParams = new URLSearchParams(search);\n      callbackUrl = `${origin}${callbackRoute}`;\n\n      searchParams.forEach((value, key) => {\n        urlParams[key] = value;\n      });\n    }\n\n    const buildedCallbackUrl = builtCallbackUrl({ callbackUrl, urlParams });\n\n    provider.signTransactions(transactions, {\n      callbackUrl: encodeURIComponent(buildedCallbackUrl)\n    });\n  };\n\n  const signTransactionsWithProvider = async () => {\n    if (isSigningRef.current || !transactionsToSign) {\n      return;\n    }\n\n    const {\n      sessionId,\n      transactions,\n      callbackRoute,\n      customTransactionInformation\n    } = transactionsToSign;\n\n    const { redirectAfterSign } = customTransactionInformation;\n    const defaultCallbackUrl = getDefaultCallbackUrl();\n    const redirectRoute = callbackRoute || defaultCallbackUrl;\n    const isCurrentRoute = defaultCallbackUrl.includes(redirectRoute);\n    const shouldRedirectAfterSign = redirectAfterSign && !isCurrentRoute;\n\n    try {\n      const isProviderInitialized = await provider?.init?.();\n      if (!isProviderInitialized) {\n        return;\n      }\n    } catch (error) {\n      const errorMessage =\n        (error as Error)?.message ||\n        (error as string) ||\n        PROVIDER_NOT_INITIALIZED;\n      console.error(errorMessage);\n\n      onCancel(PROVIDER_NOT_INITIALIZED, sessionId);\n      return;\n    }\n\n    const allowGuardian = !customTransactionInformation.skipGuardian;\n    const hasConsentPopup = customTransactionInformation.hasConsentPopup;\n    const isCrossWindowProvider = provider instanceof CrossWindowProvider;\n\n    try {\n      isSigningRef.current = true;\n\n      if (isCrossWindowProvider && hasConsentPopup) {\n        (provider as CrossWindowProvider).setShouldShowConsentPopup(true);\n      }\n      const signedTransactions: Transaction[] =\n        (await provider.signTransactions(\n          isGuarded && allowGuardian\n            ? transactions?.map((transaction) => {\n                transaction.setVersion(TransactionVersion.withTxOptions());\n                transaction.setOptions(\n                  TransactionOptions.withOptions({ guarded: true })\n                );\n                return transaction;\n              })\n            : transactions\n        )) ?? [];\n\n      isSigningRef.current = false;\n\n      const shouldMoveTransactionsToSignedState =\n        getShouldMoveTransactionsToSignedState(signedTransactions);\n\n      if (!shouldMoveTransactionsToSignedState) {\n        return;\n      }\n\n      let signedTransactionsArray = Object.values(signedTransactions).map(\n        (tx) => parseTransactionAfterSigning(tx)\n      );\n\n      const { needs2FaSigning, guardTransactions } = checkNeedsGuardianSigning({\n        transactions: signedTransactions,\n        sessionId,\n        callbackRoute,\n        isGuarded: isGuarded && allowGuardian,\n        walletAddress\n      });\n\n      if (needs2FaSigning) {\n        const guardedTransactions = await guardTransactions();\n        signedTransactionsArray = guardedTransactions\n          ? guardedTransactions.map((tx) => parseTransactionAfterSigning(tx))\n          : [];\n      }\n\n      const payload: MoveTransactionsToSignedStatePayloadType = {\n        sessionId,\n        transactions: signedTransactionsArray,\n        status: TransactionBatchStatusesEnum.signed\n      };\n\n      // redirect is delegated to optionalRedirect in TransactionSender\n      if (shouldRedirectAfterSign) {\n        payload.redirectRoute = redirectRoute;\n      }\n\n      dispatch(moveTransactionsToSignedState(payload));\n    } catch (error) {\n      isSigningRef.current = false;\n\n      const errorMessage =\n        (error as Error)?.message || (error as string) || ERROR_SIGNING_TX;\n      console.error(errorMessage);\n\n      dispatch(\n        moveTransactionsToSignedState({\n          sessionId,\n          status: TransactionBatchStatusesEnum.cancelled\n        })\n      );\n      onCancel(\n        errorMessage.includes('cancel') ? TRANSACTION_CANCELLED : errorMessage,\n        sessionId\n      );\n    }\n  };\n\n  const signTransactions = async () => {\n    if (!transactionsToSign) {\n      return;\n    }\n\n    clearTransactionStatusMessage();\n\n    const {\n      sessionId,\n      transactions,\n      callbackRoute,\n      customTransactionInformation\n    } = transactionsToSign;\n\n    if (!provider) {\n      console.error(MISSING_PROVIDER_MESSAGE);\n      return;\n    }\n\n    if (senderAddresses.length > 1) {\n      throw new Error('Multiple senders are not allowed');\n    }\n\n    if (sender && sender !== address) {\n      const isValidSender = checkIsValidSender(senderAccount, address);\n\n      if (!isValidSender) {\n        console.error(SENDER_DIFFERENT_THAN_LOGGED_IN_ADDRESS);\n\n        return onCancel(SENDER_DIFFERENT_THAN_LOGGED_IN_ADDRESS);\n      }\n    }\n\n    /*\n     * if the transaction is cancelled\n     * the callback will go to undefined,\n     * we save the most recent one for a valid transaction\n     */\n    savedCallback.current = callbackRoute || getWindowLocation().pathname;\n\n    try {\n      const isSigningWithWebWallet = providerType === LoginMethodsEnum.wallet;\n\n      const transactionsWithIncrementalNonces =\n        customTransactionInformation.skipUpdateNonces\n          ? transactions\n          : await setTransactionNonces(transactions);\n\n      if (isSigningWithWebWallet) {\n        return signWithWallet(\n          transactionsWithIncrementalNonces,\n          sessionId,\n          callbackRoute\n        );\n      }\n\n      signTransactionsWithProvider();\n    } catch (err) {\n      const defaultErrorMessage = (err as Error)?.message;\n      const errorMessage = defaultErrorMessage || ERROR_SIGNING;\n      console.error(errorMessage);\n\n      onCancel(errorMessage, sessionId);\n\n      dispatch(\n        moveTransactionsToSignedState({\n          sessionId,\n          status: TransactionBatchStatusesEnum.cancelled\n        })\n      );\n\n      console.error(errorMessage, err);\n    }\n  };\n\n  useEffect(() => {\n    if (hasTransactions) {\n      signTransactions();\n    } else {\n      isSigningRef.current = false;\n    }\n  }, [transactionsToSign, hasTransactions, senderAccount]);\n\n  return {\n    error,\n    canceledTransactionsMessage: signTransactionsCancelMessage,\n    onAbort,\n    hasTransactions,\n    callbackRoute: savedCallback.current,\n    sessionId: transactionsToSign?.sessionId,\n    transactions: transactionsToSign?.transactions\n  };\n};\n", "export * from './useGetAccount';\nexport * from './useGetAccountInfo';\nexport * from './useGetAccountProvider';\nexport * from './useGetBatchWebsocketEvent';\nexport * from './useGetIsLoggedIn';\nexport * from './useGetIsWalletConnectV2Initialized';\nexport * from './useGetLoginInfo';\nexport * from './useGetWebsocketEvent';\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { accountSelector } from 'reduxStore/selectors';\n\nexport const useGetAccount = () => {\n  return useSelector(accountSelector);\n};\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { accountInfoSelector } from 'reduxStore/selectors';\n\nexport const useGetAccountInfo = () => {\n  return useSelector(accountInfoSelector);\n};\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { websocketBatchEventSelector } from 'reduxStore/selectors';\n\nexport const useGetBatchWebsocketEvent = () => {\n  return useSelector(websocketBatchEventSelector);\n};\n", "import { useGetLoginInfo } from './useGetLoginInfo';\n\nexport const useGetIsLoggedIn = () => {\n  const { isLoggedIn } = useGetLoginInfo();\n  return isLoggedIn;\n};\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { isLoggedInSelector, loginInfoSelector } from 'reduxStore/selectors';\nimport { useAxiosInterceptorContext } from 'wrappers/AxiosInterceptorContext';\n\nexport const useGetLoginInfo = () => {\n  // if AxiosInterceptor is mounted, prioritize information comming from AxiosContext\n  try {\n    const { loginInfo, isLoggedIn } = useAxiosInterceptorContext();\n\n    return { ...loginInfo, isLoggedIn };\n    // if not mounted, proceed to returning information from store\n  } catch {\n    const loginInfo = useSelector(loginInfoSelector);\n    const isLoggedIn = useSelector(isLoggedInSelector);\n\n    return { ...loginInfo, isLoggedIn };\n  }\n};\n", "export * from './AxiosInterceptorContext';\nexport * from './components';\n", "import {\n  AxiosInterceptor,\n  LoginInfoListener,\n  AxiosInterceptorContextProvider\n} from './components';\n\nexport const AxiosInterceptorContext = {\n  Interceptor: AxiosInterceptor,\n  Listener: LoginInfoListener,\n  Provider: AxiosInterceptorContextProvider\n};\n", "export * from './AxiosInterceptorContextProvider';\nexport * from './LoginInfoListener';\nexport * from './AxiosInterceptor';\n", "import React, {\n  useContext,\n  useState,\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  createContext\n} from 'react';\nimport { loginInfoSelector } from 'reduxStore/selectors';\nimport { RootState, store } from 'reduxStore/store';\nimport { LoginInfoStateType } from '../../../reduxStore/slices/loginInfoSlice';\n\nexport interface AxiosInterceptorContextPropsType {\n  address?: string;\n  isLoggedIn: boolean;\n  setAddress: Dispatch<SetStateAction<string | undefined>>;\n  loginInfo: LoginInfoStateType;\n  setLoginInfo: (props: LoginInfoStateType) => void;\n}\n\nexport interface AxiosInterceptorContextProviderPropsType {\n  children: ReactNode;\n}\n\nconst AxiosInterceptorContext = createContext(\n  {} as AxiosInterceptorContextPropsType\n);\n\nconst appState: RootState = store.getState();\n\n/**\n * Used to lift the state of `<DappProvider>`, as a helper for setting interceptors\n * @example\n * <AxiosInterceptorContextProvider>\n *  <AxiosInterceptor> // set interceptors with `nativeAuth` Bearer token\n *   <Navbar /> // optionally get access to `isLoggedIn` and `address`\n *   <DappProvider> // all `axios` calls inside will use interceptors set above\n *    <Router />\n *    <LoginInfoListener/>\n *   <DappProvider/>\n *  <AxiosInterceptor/>\n * <AxiosInterceptorContextProvider/>\n */\nexport function AxiosInterceptorContextProvider({\n  children\n}: AxiosInterceptorContextProviderPropsType) {\n  const [address, setAddress] = useState<string>();\n\n  const [loginInfo, setLoginInfo] = useState<LoginInfoStateType>(\n    loginInfoSelector(appState)\n  );\n\n  const value: AxiosInterceptorContextPropsType = {\n    address,\n    setAddress,\n    isLoggedIn: Boolean(address),\n    loginInfo,\n    setLoginInfo: (data: LoginInfoStateType) => setLoginInfo(data)\n  };\n\n  return (\n    <AxiosInterceptorContext.Provider value={value}>\n      {children}\n    </AxiosInterceptorContext.Provider>\n  );\n}\n\nexport function useAxiosInterceptorContext(): AxiosInterceptorContextPropsType {\n  const context = useContext(AxiosInterceptorContext);\n\n  if (context === undefined || Object.values(context).length === 0) {\n    throw new Error(\n      'useAxiosInterceptorContext must be used within an AxiosInterceptorContextProvider'\n    );\n  }\n  return context;\n}\n", "import React, { PropsWithChildren, useEffect } from 'react';\nimport { useGetAccount } from 'hooks/account/useGetAccount';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport { loginInfoSelector } from 'reduxStore/selectors';\nimport { useAxiosInterceptorContext } from './AxiosInterceptorContextProvider';\n\nexport const LoginInfoListener = ({ children = null }: PropsWithChildren) => {\n  const { address } = useGetAccount();\n  const loginInfo = useSelector(loginInfoSelector);\n\n  const { setLoginInfo, setAddress } = useAxiosInterceptorContext();\n\n  useEffect(() => {\n    setAddress(address);\n    setLoginInfo(loginInfo);\n  }, [loginInfo, address]);\n\n  return <>{children}</>;\n};\n", "import React, { useRef, PropsWithChildren, useMemo } from 'react';\nimport axios from 'axios';\nimport { useAxiosInterceptorContext } from './AxiosInterceptorContextProvider';\n\nexport interface AxiosInterceptorType extends PropsWithChildren {\n  authenticatedDomains: string[];\n}\n\nexport const AxiosInterceptor = ({\n  children,\n  authenticatedDomains\n}: AxiosInterceptorType) => {\n  const { loginInfo } = useAxiosInterceptorContext();\n  const bearerToken = loginInfo?.tokenLogin?.nativeAuthToken;\n\n  const requestIdRef = useRef(-1);\n\n  requestIdRef.current = useMemo(() => {\n    axios.interceptors.response.use(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        let url = error.config?.url;\n        if (error.config?.params) {\n          const queryString = new URLSearchParams(error.config.params);\n          url += `?${queryString.toString()}`;\n        }\n        console.error('Axios error for: ', url);\n        return Promise.reject(error);\n      }\n    );\n\n    axios.interceptors.request.eject(requestIdRef.current);\n\n    return axios.interceptors.request.use(\n      async (config) => {\n        if (\n          authenticatedDomains.includes(String(config?.baseURL)) &&\n          bearerToken\n        ) {\n          config.headers.Authorization = `Bearer ${bearerToken}`;\n        }\n\n        return config;\n      },\n      (error) => {\n        Promise.reject(error);\n      }\n    );\n  }, [bearerToken, authenticatedDomains]);\n\n  return <>{children}</>;\n};\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { isWalletConnectV2InitializedSelector } from 'reduxStore/selectors';\n\nexport const useGetIsWalletConnectV2Initialized = () => {\n  return useSelector(isWalletConnectV2InitializedSelector);\n};\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { websocketEventSelector } from 'reduxStore/selectors';\n\nexport const useGetWebsocketEvent = () => {\n  return useSelector(websocketEventSelector);\n};\n", "export * from './ExperimentalWebviewProvider';\n", "import { Message, Transaction } from '@multiversx/sdk-core';\nimport { IDAppProviderAccount } from '@multiversx/sdk-dapp-utils/out';\nimport { providerNotInitializedError } from '@multiversx/sdk-dapp-utils/out/helpers/providerNotInitializedError';\nimport { WebviewProvider } from '@multiversx/sdk-webview-provider/out/WebviewProvider';\nimport { logoutAction } from 'reduxStore/commonActions';\nimport { store } from 'reduxStore/store';\nimport { loginWithNativeAuthToken } from 'services/nativeAuth/helpers/loginWithNativeAuthToken';\nimport { removeAllTransactionsToSign } from 'services/transactions';\nimport { IDappProvider } from 'types/dappProvider.types';\nimport { setExternalProviderAsAccountProvider } from '../accountProvider';\n\n/**\n * This is an experimental provider that uses @multiversx/webview-provider to handle the communication between .\n * Please do not use this provider or use it with caution.\n * It will be renamed to WebviewProvider once it is stable.\n * */\nexport class ExperimentalWebviewProvider implements IDappProvider {\n  private static _instance: ExperimentalWebviewProvider;\n  private readonly _provider: WebviewProvider;\n\n  static getInstance() {\n    if (!ExperimentalWebviewProvider._instance) {\n      ExperimentalWebviewProvider._instance = new ExperimentalWebviewProvider();\n    }\n    return ExperimentalWebviewProvider._instance;\n  }\n\n  getAccount(): IDAppProviderAccount | null {\n    const data = this._provider.getAccount();\n    return { address: data?.address ?? '' };\n  }\n\n  setAccount(account: IDAppProviderAccount): void {\n    this._provider.setAccount(account);\n  }\n\n  constructor() {\n    this._provider = WebviewProvider.getInstance({\n      resetStateCallback: () => store.dispatch(logoutAction())\n    });\n  }\n\n  init = async () => {\n    return await this._provider.init();\n  };\n\n  login = async () => {\n    const data = await this._provider.login();\n    return { address: data?.address ?? '' };\n  };\n\n  logout = async () => {\n    store.dispatch(logoutAction());\n    return await this._provider.logout();\n  };\n\n  relogin = async () => {\n    const accessToken = await this._provider.relogin();\n\n    if (!accessToken) {\n      console.error('Unable to re-login. Missing accessToken.');\n      return null;\n    }\n\n    loginWithNativeAuthToken(accessToken);\n    setExternalProviderAsAccountProvider();\n    return accessToken;\n  };\n\n  signTransactions = async (\n    transactionsToSign: Transaction[]\n  ): Promise<Transaction[] | null> => {\n    const response = await this._provider.signTransactions(transactionsToSign);\n\n    if (!response) {\n      removeAllTransactionsToSign();\n      this._provider.cancelAction();\n      return null;\n    }\n\n    return response;\n  };\n\n  signTransaction = async (transaction: Transaction) => {\n    return await this._provider.signTransaction(transaction);\n  };\n\n  signMessage = async (message: Message): Promise<Message | null> => {\n    return await this._provider.signMessage(message);\n  };\n\n  cancelAction = async () => {\n    return await this._provider.cancelAction();\n  };\n\n  isInitialized = () => {\n    return this._provider.isInitialized();\n  };\n\n  isConnected = () => {\n    return this._provider.isConnected();\n  };\n\n  sendCustomRequest = async (payload: {\n    request: { method: string; params: any };\n  }) => {\n    this._provider.sendPostMessage({\n      type: payload.request.method as any,\n      payload: payload.request.params\n    });\n  };\n\n  getAddress = providerNotInitializedError('getAddress');\n}\n", "import { loginAction } from 'reduxStore/commonActions';\nimport { setTokenLogin } from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\nimport { LoginMethodsEnum } from 'types';\nimport { decodeNativeAuthToken } from './decodeNativeAuthToken';\n\nexport function loginWithNativeAuthToken(\n  token: string,\n  dispatch = store.dispatch\n) {\n  const nativeAuthInfo = decodeNativeAuthToken(token);\n\n  if (nativeAuthInfo == null) {\n    return;\n  }\n\n  const { signature, address } = nativeAuthInfo;\n\n  if (signature && token && address) {\n    dispatch(\n      setTokenLogin({\n        loginToken: token,\n        signature,\n        nativeAuthToken: token\n      })\n    );\n\n    dispatch(\n      loginAction({\n        address,\n        loginMethod: LoginMethodsEnum.extra\n      })\n    );\n  }\n}\n", "export * from './clearTransactions';\nexport * from './sendTransactions';\nexport * from './signTransactions';\n\nexport * from './isCrossShardTransaction';\n\nexport * from './utils';\n", "import { buildBatchId } from 'hooks/transactions/helpers/buildBatchId';\nimport { accountSelector } from 'reduxStore/selectors';\nimport {\n  clearSignedTransaction,\n  clearAllTransactionsToSign,\n  clearAllSignedTransactions,\n  clearBatchTransactions,\n  removeTransactionToast\n} from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\n\nexport function removeTransactionsToSign(sessionId: string) {\n  store.dispatch(clearSignedTransaction(sessionId));\n}\nexport function removeSignedTransaction(sessionId: string) {\n  store.dispatch(clearSignedTransaction(sessionId));\n\n  const account = accountSelector(store.getState());\n  store.dispatch(\n    clearBatchTransactions({\n      batchId: buildBatchId({\n        sessionId,\n        address: account?.address ?? ''\n      })\n    })\n  );\n}\n\nexport function deleteTransactionToast(sessionId: string) {\n  store.dispatch(removeTransactionToast(sessionId));\n  removeSignedTransaction(sessionId);\n}\n\nexport function removeAllSignedTransactions() {\n  store.dispatch(clearAllSignedTransactions());\n}\n\nexport function removeAllTransactionsToSign() {\n  store.dispatch(clearAllTransactionsToSign());\n}\n\nexport function removeBatchTransactions(batchId: string) {\n  store.dispatch(clearBatchTransactions({ batchId }));\n}\n", "import { Transaction } from '@multiversx/sdk-core/out';\nimport {\n  SendTransactionReturnType,\n  SendTransactionsPropsType,\n  SimpleTransactionType\n} from 'types';\nimport { getDefaultCallbackUrl } from 'utils/window';\nimport { signTransactions } from './signTransactions';\nimport { transformTransactionsToSign } from './utils/transformTransactionsToSign';\n\nexport async function sendTransactions({\n  transactions,\n  transactionsDisplayInfo,\n  redirectAfterSign = true,\n  callbackRoute = getDefaultCallbackUrl(),\n  signWithoutSending = false,\n  completedTransactionsDelay,\n  sessionInformation,\n  skipGuardian,\n  minGasLimit,\n  hasConsentPopup\n}: SendTransactionsPropsType): Promise<SendTransactionReturnType> {\n  try {\n    const transactionsPayload = Array.isArray(transactions)\n      ? transactions\n      : [transactions];\n\n    const transactionsToSign = await transformTransactionsToSign({\n      transactions: transactionsPayload as SimpleTransactionType[],\n      minGasLimit\n    });\n\n    return signTransactions({\n      transactions: transactionsToSign as Transaction[],\n      minGasLimit,\n      callbackRoute,\n      transactionsDisplayInfo,\n      customTransactionInformation: {\n        redirectAfterSign,\n        completedTransactionsDelay,\n        sessionInformation,\n        skipGuardian,\n        signWithoutSending,\n        hasConsentPopup\n      }\n    });\n  } catch (err) {\n    console.error('error signing transaction', err as any);\n    return { error: err as any, sessionId: null };\n  }\n}\n", "import { chainIDSelector } from 'reduxStore/selectors/networkConfigSelectors';\nimport {\n  setNotificationModal,\n  setSignTransactionsCancelMessage,\n  setTransactionsDisplayInfo,\n  setTransactionsToSign\n} from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\nimport {\n  NotificationTypesEnum,\n  SendTransactionReturnType,\n  SignTransactionsPropsType\n} from 'types';\nimport { isGuardianTx } from 'utils/transactions/isGuardianTx';\n\nexport async function signTransactions({\n  transactions,\n  callbackRoute,\n  customTransactionInformation,\n  transactionsDisplayInfo\n}: SignTransactionsPropsType): Promise<SendTransactionReturnType> {\n  const appState = store.getState();\n  const sessionId = Date.now().toString();\n  const storeChainId = chainIDSelector(appState);\n\n  const transactionsPayload = Array.isArray(transactions)\n    ? transactions\n    : [transactions];\n\n  const hasValidChainId = transactionsPayload?.every(\n    (tx) => tx.getChainID().valueOf() === storeChainId.valueOf()\n  );\n  if (!hasValidChainId) {\n    const notificationPayload = {\n      type: NotificationTypesEnum.warning,\n      iconClassName: 'text-warning',\n      title: 'Network change detected',\n      description: 'The application tried to change the transaction network'\n    };\n    store.dispatch(setNotificationModal(notificationPayload));\n    return { error: 'Invalid ChainID', sessionId: null };\n  }\n\n  const signTransactionsPayload = {\n    sessionId,\n    callbackRoute,\n    customTransactionInformation: {\n      ...(customTransactionInformation ?? {}),\n      signWithoutSending:\n        customTransactionInformation?.signWithoutSending ?? true\n    },\n    transactions: transactionsPayload.map((tx) => {\n      const transaction = tx.toPlainObject();\n\n      // TODO: Remove when the protocol supports usernames for guardian transactions\n      if (isGuardianTx({ data: transaction.data, onlySetGuardian: true })) {\n        return transaction;\n      }\n\n      return {\n        ...transaction,\n        senderUsername: tx.getSenderUsername().valueOf(),\n        receiverUsername: tx.getReceiverUsername().valueOf()\n      };\n    })\n  };\n  store.dispatch(setSignTransactionsCancelMessage(null));\n  store.dispatch(setTransactionsToSign(signTransactionsPayload));\n  store.dispatch(\n    setTransactionsDisplayInfo({ sessionId, transactionsDisplayInfo })\n  );\n  return { sessionId };\n}\n", "import { Transaction } from '@multiversx/sdk-core';\nimport { SimpleTransactionType } from 'types';\nimport { transformAndSignTransactions } from '../transformAndSignTransactions';\n\nexport const transformTransactionsToSign = async ({\n  transactions,\n  minGasLimit\n}: {\n  transactions: (SimpleTransactionType | Transaction)[];\n  minGasLimit?: number;\n}) => {\n  const areComplexTransactions = transactions.every(\n    (tx) => Object.getPrototypeOf(tx).toPlainObject != null\n  );\n\n  let transactionsToSign = transactions;\n\n  if (!areComplexTransactions) {\n    transactionsToSign = await transformAndSignTransactions({\n      transactions: transactions as SimpleTransactionType[],\n      minGasLimit\n    });\n  }\n\n  return transactionsToSign;\n};\n", "import { Address, Transaction } from '@multiversx/sdk-core';\nimport BigNumber from 'bignumber.js';\n\nimport {\n  EXTRA_GAS_LIMIT_GUARDED_TX,\n  GAS_LIMIT,\n  GAS_PER_DATA_BYTE,\n  GAS_PRICE\n} from 'constants/index';\nimport { newTransaction } from 'models/newTransaction';\nimport { addressSelector, chainIDSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\nimport { SendSimpleTransactionPropsType } from 'types';\n\nimport { getAccount } from 'utils/account/getAccount';\nimport { getLatestNonce } from 'utils/account/getLatestNonce';\nimport { computeTransactionNonce } from './computeTransactionNonce';\n\nenum ErrorCodesEnum {\n  'invalidReceiver' = 'Invalid Receiver address',\n  'unknownError' = 'Unknown Error. Please check the transactions and try again'\n}\n\nfunction calculateGasLimit({\n  data,\n  isGuarded\n}: {\n  data?: string;\n  isGuarded?: boolean;\n}) {\n  const guardedAccountGasLimit = isGuarded ? EXTRA_GAS_LIMIT_GUARDED_TX : 0;\n  const bNconfigGasLimit = new BigNumber(GAS_LIMIT).plus(\n    guardedAccountGasLimit\n  );\n  const bNgasPerDataByte = new BigNumber(GAS_PER_DATA_BYTE);\n  const bNgasValue = data\n    ? bNgasPerDataByte.times(Buffer.from(data).length)\n    : 0;\n  const bNgasLimit = bNconfigGasLimit.plus(bNgasValue);\n  const gasLimit = bNgasLimit.toString(10);\n  return gasLimit;\n}\n\nexport async function transformAndSignTransactions({\n  transactions\n}: SendSimpleTransactionPropsType): Promise<Transaction[]> {\n  const address = addressSelector(store.getState());\n  const account = await getAccount(address);\n  const accountNonce = getLatestNonce(account);\n  return transactions.map((tx) => {\n    const {\n      value,\n      receiver,\n      data = '',\n      chainID,\n      version = 1,\n      options,\n      gasPrice = GAS_PRICE,\n      gasLimit = calculateGasLimit({\n        data: tx.data,\n        isGuarded: account?.isGuarded\n      }),\n      guardian,\n      guardianSignature,\n      nonce: transactionNonce = 0\n    } = tx;\n    let validatedReceiver = receiver;\n\n    try {\n      const addr = new Address(receiver);\n      validatedReceiver = addr.hex();\n    } catch (err) {\n      throw ErrorCodesEnum.invalidReceiver;\n    }\n\n    const computedNonce = computeTransactionNonce({\n      accountNonce,\n      transactionNonce\n    });\n\n    const storeChainId = chainIDSelector(store.getState()).valueOf().toString();\n    const transactionsChainId = chainID || storeChainId;\n    return newTransaction({\n      value,\n      receiver: validatedReceiver,\n      data,\n      gasPrice,\n      gasLimit: Number(gasLimit),\n      nonce: Number(computedNonce.valueOf().toString()),\n      sender: new Address(address).hex(),\n      chainID: transactionsChainId,\n      version,\n      options,\n      guardian,\n      guardianSignature\n    });\n  });\n}\n", "import { Transaction } from '@multiversx/sdk-core/out';\nimport BigNumber from 'bignumber.js';\nimport { GAS_PER_DATA_BYTE, GAS_PRICE_MODIFIER } from 'constants/index';\nimport { calculateFeeLimit } from 'utils/operations/calculateFeeLimit';\n\nexport function calcTotalFee(transactions: Transaction[], minGasLimit: number) {\n  let totalFee = new BigNumber(0);\n\n  transactions.forEach((tx) => {\n    const fee = calculateFeeLimit({\n      gasPerDataByte: String(GAS_PER_DATA_BYTE),\n      gasPriceModifier: String(GAS_PRICE_MODIFIER),\n      minGasLimit: String(minGasLimit),\n      gasLimit: tx.getGasLimit().valueOf().toString(),\n      gasPrice: tx.getGasPrice().valueOf().toString(),\n      data: tx.getData().toString(),\n      chainId: tx.getChainID().valueOf()\n    });\n    totalFee = totalFee.plus(new BigNumber(fee));\n  });\n\n  return totalFee;\n}\n", "import { useEffect, useState } from 'react';\n\nimport { Transaction } from '@multiversx/sdk-core/out';\nimport { ExtensionProvider } from '@multiversx/sdk-extension-provider';\nimport { MetamaskProvider } from '@multiversx/sdk-metamask-provider/out/metamaskProvider';\nimport { PasskeyProvider } from '@multiversx/sdk-passkey-provider/out';\nimport { useGetAccount } from 'hooks/account';\nimport { useGetAccountProvider } from 'hooks/account/useGetAccountProvider';\nimport { useParseSignedTransactions } from 'hooks/transactions/useParseSignedTransactions';\nimport { CrossWindowProvider } from 'lib/sdkWebWalletCrossWindowProvider';\n\nimport { IframeProvider } from 'lib/sdkWebWalletIframeProvider';\nimport { ExperimentalWebviewProvider } from 'providers/experimentalWebViewProvider';\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport {\n  signTransactionsCancelMessageSelector,\n  transactionsToSignSelector\n} from 'reduxStore/selectors';\nimport {\n  clearAllTransactionsToSign,\n  clearTransactionsInfoForSessionId,\n  setSignTransactionsCancelMessage\n} from 'reduxStore/slices';\nimport { useSetTransactionNonces } from './helpers';\n\nexport const useSignTransactionsCommonData = () => {\n  const dispatch = useDispatch();\n  const { provider } = useGetAccountProvider();\n  const { nonce } = useGetAccount();\n  const [error, setError] = useState<string | null>(null);\n  const [hasTransactions, setHasTransactions] = useState<boolean>();\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const setTransactionNonces = useSetTransactionNonces();\n  const transactionsToSign = useSelector(transactionsToSignSelector);\n  const signTransactionsCancelMessage = useSelector(\n    signTransactionsCancelMessageSelector\n  );\n\n  const updateTransactionNonces = async () => {\n    const hasTransactionsToSign = Boolean(transactionsToSign?.transactions);\n    const transactionsWithFixedNonce = transactionsToSign?.transactions ?? [];\n\n    if (hasTransactionsToSign) {\n      const transactionsWithIncrementalNonces = transactionsToSign\n        ?.customTransactionInformation?.skipUpdateNonces\n        ? transactionsWithFixedNonce\n        : await setTransactionNonces(transactionsWithFixedNonce);\n\n      setTransactions(transactionsWithIncrementalNonces);\n    }\n\n    setHasTransactions(hasTransactionsToSign);\n  };\n\n  useEffect(() => {\n    updateTransactionNonces();\n  }, [transactionsToSign, nonce]);\n\n  const clearTransactionStatusMessage = () => {\n    setError(null);\n    dispatch(setSignTransactionsCancelMessage(null));\n  };\n\n  const onAbort = (sessionId?: string) => {\n    clearTransactionStatusMessage();\n    clearSignInfo(sessionId);\n  };\n\n  useParseSignedTransactions(onAbort);\n\n  function clearSignInfo(sessionId?: string) {\n    const isExtensionProvider = provider instanceof ExtensionProvider;\n    const isPasskeyProvider = provider instanceof PasskeyProvider;\n    const isCrossWindowProvider = provider instanceof CrossWindowProvider;\n    const isIframeProvider = provider instanceof IframeProvider;\n    const isMetamaskProvider = provider instanceof MetamaskProvider;\n    const isExperimentalWebviewProvider =\n      provider instanceof ExperimentalWebviewProvider;\n\n    dispatch(clearAllTransactionsToSign());\n    dispatch(clearTransactionsInfoForSessionId(sessionId));\n\n    if (\n      !isExtensionProvider &&\n      !isCrossWindowProvider &&\n      !isIframeProvider &&\n      !isPasskeyProvider &&\n      !isMetamaskProvider\n    ) {\n      return;\n    }\n\n    clearTransactionStatusMessage();\n\n    if (isExtensionProvider) {\n      ExtensionProvider.getInstance()?.cancelAction?.();\n    }\n\n    if (isPasskeyProvider) {\n      PasskeyProvider.getInstance()?.cancelAction?.();\n    }\n\n    if (isMetamaskProvider) {\n      MetamaskProvider.getInstance()?.cancelAction?.();\n    }\n\n    if (isCrossWindowProvider) {\n      CrossWindowProvider.getInstance()?.cancelAction?.();\n    }\n\n    if (isIframeProvider) {\n      IframeProvider.getInstance()?.cancelAction?.();\n    }\n\n    if (isExperimentalWebviewProvider) {\n      ExperimentalWebviewProvider.getInstance()?.cancelAction?.();\n    }\n  }\n\n  return {\n    error,\n    canceledTransactionsMessage: signTransactionsCancelMessage,\n    clearTransactionStatusMessage,\n    onAbort,\n    setError,\n    hasTransactions,\n    transactionsToSign: transactionsToSign\n      ? {\n          ...transactionsToSign,\n          transactions\n        }\n      : transactionsToSign\n  };\n};\n", "import { Transaction } from '@multiversx/sdk-core';\nimport { getScamAddressData } from 'apiCalls/utils/getScamAddressData';\n\nimport { useGetAccountInfo } from 'hooks/account/useGetAccountInfo';\nimport { useGetAccountProvider } from 'hooks/account/useGetAccountProvider';\nimport { useSignMultipleTransactions } from 'hooks/transactions/useSignMultipleTransactions';\n\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport { egldLabelSelector, walletAddressSelector } from 'reduxStore/selectors';\nimport {\n  moveTransactionsToSignedState,\n  setSignTransactionsError\n} from 'reduxStore/slices';\nimport {\n  ActiveLedgerTransactionType,\n  DeviceSignedTransactions,\n  LoginMethodsEnum,\n  MultiSignTransactionType,\n  Nullable,\n  TransactionBatchStatusesEnum\n} from 'types';\nimport { getIsProviderEqualTo } from 'utils/account/getIsProviderEqualTo';\nimport { safeRedirect } from 'utils/redirect';\nimport { parseTransactionAfterSigning } from 'utils/transactions/parseTransactionAfterSigning';\nimport { getWindowLocation } from 'utils/window/getWindowLocation';\nimport { checkNeedsGuardianSigning, useGetLedgerProvider } from './helpers';\nimport { getShouldMoveTransactionsToSignedState } from './helpers/getShouldMoveTransactionsToSignedState';\nimport { useClearTransactionsToSignWithWarning } from './helpers/useClearTransactionsToSignWithWarning';\nimport { useSignTransactionsCommonData } from './useSignTransactionsCommonData';\n\nexport interface UseSignTransactionsWithDevicePropsType {\n  onCancel: () => void;\n  verifyReceiverScam?: boolean;\n  hasGuardianScreen?: boolean;\n}\n\nexport interface UseSignTransactionsWithDeviceReturnType {\n  allTransactions: MultiSignTransactionType[];\n  onSignTransaction: () => Promise<void>;\n  onNext: () => void;\n  onPrev: () => void;\n  onAbort: () => void;\n  waitingForDevice: boolean;\n  isLastTransaction: boolean;\n  currentStep: number;\n  signedTransactions?: DeviceSignedTransactions;\n  setSignedTransactions?: React.Dispatch<\n    React.SetStateAction<DeviceSignedTransactions | undefined>\n  >;\n  currentTransaction: ActiveLedgerTransactionType | null;\n  callbackRoute?: string;\n}\n\nexport function useSignTransactionsWithDevice(\n  props: UseSignTransactionsWithDevicePropsType\n): UseSignTransactionsWithDeviceReturnType {\n  const { onCancel, verifyReceiverScam = true, hasGuardianScreen } = props;\n  const { transactionsToSign, hasTransactions } =\n    useSignTransactionsCommonData();\n  const walletAddress = useSelector(walletAddressSelector);\n  const getLedgerProvider = useGetLedgerProvider();\n\n  const egldLabel = useSelector(egldLabelSelector);\n  const { account } = useGetAccountInfo();\n  const { address, isGuarded, activeGuardianAddress } = account;\n  const { provider, providerType } = useGetAccountProvider();\n  const dispatch = useDispatch();\n  const clearTransactionsToSignWithWarning =\n    useClearTransactionsToSignWithWarning();\n\n  const {\n    transactions,\n    sessionId,\n    callbackRoute,\n    customTransactionInformation\n  } = transactionsToSign || {};\n\n  function handleTransactionSignError(errorMessage: string) {\n    if (sessionId) {\n      dispatch(\n        moveTransactionsToSignedState({\n          sessionId,\n          status: TransactionBatchStatusesEnum.cancelled\n        })\n      );\n    }\n\n    dispatch(setSignTransactionsError(errorMessage));\n  }\n\n  const { pathname } = getWindowLocation();\n  const locationIncludesCallbackRoute =\n    callbackRoute != null && pathname.includes(callbackRoute);\n\n  const allowGuardian = !customTransactionInformation?.skipGuardian;\n\n  async function handleTransactionsSignSuccess(\n    newSignedTransactions: Transaction[]\n  ) {\n    const shouldMoveTransactionsToSignedState =\n      getShouldMoveTransactionsToSignedState(newSignedTransactions);\n\n    if (!shouldMoveTransactionsToSignedState) {\n      return;\n    }\n\n    const { needs2FaSigning, guardTransactions } = checkNeedsGuardianSigning({\n      transactions: newSignedTransactions,\n      sessionId,\n      callbackRoute,\n      isGuarded: isGuarded && allowGuardian,\n      walletAddress\n    });\n\n    let signedTransactionsArray = newSignedTransactions.map((tx) =>\n      parseTransactionAfterSigning(tx)\n    );\n\n    if (needs2FaSigning) {\n      const guardedTransactions = await guardTransactions();\n      signedTransactionsArray = guardedTransactions\n        ? guardedTransactions.map((tx) => parseTransactionAfterSigning(tx))\n        : [];\n    }\n\n    if (!sessionId) {\n      return;\n    }\n\n    dispatch(\n      moveTransactionsToSignedState({\n        sessionId: sessionId,\n        status: TransactionBatchStatusesEnum.signed,\n        transactions: signedTransactionsArray\n      })\n    );\n\n    if (\n      callbackRoute != null &&\n      customTransactionInformation?.redirectAfterSign &&\n      !locationIncludesCallbackRoute\n    ) {\n      safeRedirect({ url: callbackRoute });\n    }\n  }\n\n  function handleCancel() {\n    onCancel();\n    clearTransactionsToSignWithWarning(sessionId);\n  }\n\n  async function handleSignTransaction(\n    transaction: Nullable<Transaction>\n  ): Promise<Nullable<Transaction | undefined>> {\n    const connectedProvider =\n      providerType !== LoginMethodsEnum.ledger\n        ? provider\n        : await getLedgerProvider();\n\n    if (!transaction) {\n      return null;\n    }\n\n    const signedTransaction = await connectedProvider.signTransaction(\n      transaction\n    );\n\n    return signedTransaction;\n  }\n\n  const signMultipleTxReturnValues = useSignMultipleTransactions({\n    address,\n    egldLabel,\n    activeGuardianAddress:\n      isGuarded && allowGuardian ? activeGuardianAddress : undefined,\n    transactionsToSign: hasTransactions ? transactions : [],\n    onGetScamAddressData: verifyReceiverScam ? getScamAddressData : null,\n    isLedger: getIsProviderEqualTo(LoginMethodsEnum.ledger),\n    hasGuardianScreen,\n    onCancel: handleCancel,\n    onSignTransaction: handleSignTransaction,\n    onTransactionsSignError: handleTransactionSignError,\n    onTransactionsSignSuccess: handleTransactionsSignSuccess\n  });\n\n  return {\n    ...signMultipleTxReturnValues,\n    callbackRoute,\n    waitingForDevice: signMultipleTxReturnValues.waitingForDevice\n  };\n}\n", "import { TRANSACTION_CANCELLED } from 'constants/errorsMessages';\nimport { useDispatch } from 'reduxStore/DappProviderContext';\nimport {\n  clearAllTransactionsToSign,\n  clearTransactionsInfoForSessionId,\n  setSignTransactionsCancelMessage\n} from 'reduxStore/slices';\n\nexport function useClearTransactionsToSignWithWarning() {\n  const dispatch = useDispatch();\n\n  return (sessionId?: string) => {\n    dispatch(clearAllTransactionsToSign());\n    dispatch(clearTransactionsInfoForSessionId(sessionId));\n    dispatch(setSignTransactionsCancelMessage(TRANSACTION_CANCELLED));\n  };\n}\n", "import {\n  useSignTransactionsWithDevice,\n  UseSignTransactionsWithDevicePropsType,\n  UseSignTransactionsWithDeviceReturnType\n} from './useSignTransactionsWithDevice';\n\nexport function useSignTransactionsWithLedger(\n  props: UseSignTransactionsWithDevicePropsType\n): UseSignTransactionsWithDeviceReturnType {\n  return useSignTransactionsWithDevice(props);\n}\n", "import { useEffect } from 'react';\nimport { useGetSignedTransactions } from 'hooks/transactions/useGetSignedTransactions';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport { transactionStatusSelector } from 'reduxStore/selectors';\nimport { RootState } from 'reduxStore/store';\nimport {\n  removeAllSignedTransactions,\n  removeAllTransactionsToSign\n} from 'services';\nimport {\n  LoginMethodsEnum,\n  TransactionBatchStatusesEnum\n} from 'types/enums.types';\nimport { getIsProviderEqualTo } from 'utils/account/getIsProviderEqualTo';\nimport {\n  getIsTransactionFailed,\n  getIsTransactionPending,\n  getIsTransactionSuccessful,\n  getIsTransactionTimedOut\n} from 'utils/transactions/transactionStateByStatus';\n\nexport interface UseTrackTransactionStatusArgsType {\n  transactionId: string | null;\n  onSuccess?: (transactionId: string | null) => void;\n  onFail?: (transactionId: string | null, errorMessage?: string) => void;\n  onTimedOut?: (transactionId: string | null) => void;\n  onCancelled?: (transactionId: string | null) => void;\n}\n\nexport function useTrackTransactionStatus({\n  transactionId: txId,\n  onSuccess,\n  onFail,\n  onCancelled,\n  onTimedOut\n}: UseTrackTransactionStatusArgsType) {\n  const { signedTransactionsArray } = useGetSignedTransactions();\n  const isWalletProvider = getIsProviderEqualTo(LoginMethodsEnum.wallet);\n\n  const [lastSessionId] =\n    signedTransactionsArray.length > 0\n      ? signedTransactionsArray[signedTransactionsArray.length - 1]\n      : [];\n\n  /**\n   * Web wallet restores sessionId, which is lost when redirecting,\n   * so we extract it from signedTransactions\n   */\n  const walletSessionId = txId ?? lastSessionId ?? null;\n\n  const transactionId = isWalletProvider ? walletSessionId : txId;\n\n  const transactionsBatch = useSelector((state: RootState) =>\n    transactionStatusSelector(state, transactionId)\n  );\n\n  const { status, transactions, errorMessage } = transactionsBatch;\n\n  const isPending = getIsTransactionPending(status);\n  const isFailed = getIsTransactionFailed(status);\n  const isTimedOut = getIsTransactionTimedOut(status);\n  const isSuccessful = getIsTransactionSuccessful(status);\n\n  const isCancelled = status === TransactionBatchStatusesEnum.cancelled;\n\n  /**\n   * Because wallet restores the session upon return,\n   * we make sure to execute the callback actions\n   * once, and then clear all transactions from store to\n   * prevent re-execution\n   */\n  function preventWalletDoubleCallback() {\n    if (isWalletProvider) {\n      removeAllSignedTransactions();\n      removeAllTransactionsToSign();\n    }\n  }\n\n  useEffect(() => {\n    if (isSuccessful && onSuccess) {\n      onSuccess(transactionId);\n    }\n  }, [isSuccessful]);\n\n  useEffect(() => {\n    if (isFailed && onFail) {\n      onFail(transactionId, errorMessage);\n      preventWalletDoubleCallback();\n    }\n  }, [isFailed]);\n\n  useEffect(() => {\n    if (isCancelled && onCancelled) {\n      onCancelled(transactionId);\n      preventWalletDoubleCallback();\n    }\n  }, [isCancelled]);\n\n  useEffect(() => {\n    if (isTimedOut) {\n      if (onTimedOut) {\n        onTimedOut(transactionId);\n      } else {\n        onFail?.(transactionId, 'timeout');\n      }\n    }\n  }, [isTimedOut]);\n\n  if (transactionId == null) {\n    return {};\n  }\n\n  if (transactionsBatch == null) {\n    return { errorMessage: 'No transaction to track' };\n  }\n\n  return {\n    isPending,\n    isSuccessful,\n    isFailed,\n    isCancelled,\n    errorMessage,\n    status,\n    transactions\n  };\n}\n", "export * from './transactions';\nexport * from './nativeAuth';\n", "export * from './nativeAuth';\n", "import { useState, useEffect } from 'react';\n\nexport const useDebounce = (value: any, timeout: number) => {\n  const [state, setState] = useState(value);\n\n  const effect = () => {\n    const handler = setTimeout(() => setState(value), timeout);\n\n    return () => clearTimeout(handler);\n  };\n\n  useEffect(effect, [value]);\n\n  return state;\n};\n", "export { useExtensionLogin } from './useExtensionLogin';\nexport { useOperaLogin } from './useOperaLogin';\nexport { useCrossWindowLogin } from './useCrossWindowLogin';\nexport { useWebWalletLogin } from './useWebWalletLogin';\nexport { useGetModalLoginMethods } from './useGetModalLoginMethods';\nexport { useLedgerLogin } from './useLedgerLogin';\nexport { useXaliasLogin } from './useXaliasLogin';\nexport { useWalletConnectV2Login } from './useWalletConnectV2Login';\nexport { useMetamaskLogin } from './useMetamaskLogin';\nexport { usePasskeyLogin } from './usePasskeyLogin';\n", "import { useState } from 'react';\nimport { ExtensionProvider } from '@multiversx/sdk-extension-provider';\n\nimport { SECOND_LOGIN_ATTEMPT_ERROR } from 'constants/errorsMessages';\nimport { setAccountProvider } from 'providers/accountProvider';\nimport { loginAction } from 'reduxStore/commonActions';\nimport { useDispatch } from 'reduxStore/DappProviderContext';\nimport {\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType,\n  OnProviderLoginType\n} from 'types';\nimport { LoginMethodsEnum } from 'types/enums.types';\nimport { getIsLoggedIn } from 'utils/getIsLoggedIn';\nimport { optionalRedirect } from 'utils/internal';\nimport { addOriginToLocationPath } from 'utils/window';\nimport { getDefaultCallbackUrl } from 'utils/window';\nimport { clearInitiatedLogins } from './helpers';\nimport { useLoginService } from './useLoginService';\n\nexport type UseExtensionLoginReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType\n];\n\nexport const useExtensionLogin = ({\n  callbackRoute,\n  token: tokenToSign,\n  nativeAuth,\n  onLoginRedirect\n}: OnProviderLoginType): UseExtensionLoginReturnType => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const hasNativeAuth = nativeAuth != null;\n  const loginService = useLoginService(nativeAuth);\n  let token = tokenToSign;\n\n  const dispatch = useDispatch();\n  const isLoggedIn = getIsLoggedIn();\n\n  async function initiateLogin() {\n    if (isLoggedIn) {\n      throw new Error(SECOND_LOGIN_ATTEMPT_ERROR);\n    }\n\n    clearInitiatedLogins();\n\n    setIsLoading(true);\n    const provider: ExtensionProvider = ExtensionProvider.getInstance();\n\n    try {\n      const isSuccessfullyInitialized: boolean = await provider.init();\n\n      if (!isSuccessfullyInitialized) {\n        console.warn(\n          'Something went wrong trying to redirect to wallet login..'\n        );\n        return;\n      }\n\n      const defaultCallbackUrl = getDefaultCallbackUrl();\n      const callbackUrl: string = encodeURIComponent(\n        addOriginToLocationPath(callbackRoute ?? defaultCallbackUrl)\n      );\n\n      if (hasNativeAuth && !token) {\n        token = await loginService.getNativeAuthLoginToken();\n\n        // Fetching block failed\n        if (!token) {\n          console.warn('Fetching block failed. Login cancelled.');\n          return;\n        }\n      }\n\n      if (token) {\n        loginService.setLoginToken(token);\n      }\n\n      const providerLoginData = {\n        callbackUrl,\n        ...(token && { token })\n      };\n\n      const { signature, address } = await provider.login(providerLoginData);\n\n      setAccountProvider(provider);\n\n      if (!address) {\n        setIsLoading(false);\n        console.warn('Login cancelled.');\n        setError('Login cancelled');\n        return;\n      }\n\n      if (signature && token) {\n        loginService.setTokenLoginInfo({\n          signature,\n          address\n        });\n      }\n\n      dispatch(\n        loginAction({ address, loginMethod: LoginMethodsEnum.extension })\n      );\n\n      optionalRedirect({\n        callbackRoute,\n        onLoginRedirect,\n        options: { signature, address }\n      });\n    } catch (error) {\n      console.error('error logging in', error);\n      // TODO: can be any or typed error\n      setError('error logging in' + (error as any).message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const loginFailed = Boolean(error);\n\n  return [\n    initiateLogin,\n    {\n      loginFailed,\n      error,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    }\n  ];\n};\n", "import { isLoggedInSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport function getIsLoggedIn() {\n  return isLoggedInSelector(store.getState());\n}\n", "export * from './clearInitiatedLogins';\n", "import { CrossWindowProvider } from 'lib/sdkWebWalletCrossWindowProvider';\nimport { IframeProvider } from 'lib/sdkWebWalletIframeProvider';\nimport { LoginMethodsEnum } from 'types';\n\nexport const clearInitiatedLogins = (props?: {\n  skipLoginMethod: LoginMethodsEnum;\n}) => {\n  Object.values(LoginMethodsEnum).forEach((method) => {\n    if (method === props?.skipLoginMethod) {\n      return;\n    }\n    switch (method) {\n      case LoginMethodsEnum.crossWindow: {\n        const crossWindowProvider = CrossWindowProvider.getInstance();\n        if (crossWindowProvider.isInitialized()) {\n          crossWindowProvider.dispose();\n        }\n        break;\n      }\n      case LoginMethodsEnum.iframe: {\n        const iframeProvider = IframeProvider.getInstance();\n        if (iframeProvider.isInitialized()) {\n          iframeProvider.dispose();\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  });\n\n  return null;\n};\n", "import { useRef } from 'react';\nimport { Address, Message } from '@multiversx/sdk-core';\nimport { useGetAccount } from 'hooks/account';\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport { networkSelector, tokenLoginSelector } from 'reduxStore/selectors';\nimport { setTokenLogin } from 'reduxStore/slices';\nimport { nativeAuth } from 'services/nativeAuth';\nimport { getNativeAuthConfig } from 'services/nativeAuth/methods';\nimport { NativeAuthConfigType, OnProviderLoginType } from 'types';\n\nconst getApiAddress = (\n  apiAddress: string,\n  config?: OnProviderLoginType['nativeAuth']\n) => {\n  if (!config) {\n    return null;\n  }\n  if (config === true) {\n    return apiAddress;\n  }\n  return config.apiAddress ?? apiAddress;\n};\n\nexport const useLoginService = (config?: OnProviderLoginType['nativeAuth']) => {\n  const network = useSelector(networkSelector);\n  const tokenLogin = useSelector(tokenLoginSelector);\n  const tokenRef = useRef(tokenLogin?.loginToken);\n\n  const apiAddress = getApiAddress(network.apiAddress, config);\n\n  const configuration = getNativeAuthConfig({\n    ...(config === true ? {} : config),\n    ...(apiAddress ? { apiAddress } : {})\n  });\n\n  const hasNativeAuth = Boolean(config);\n\n  const client = nativeAuth(configuration);\n  const { address } = useGetAccount();\n  const dispatch = useDispatch();\n\n  const setLoginToken = (loginToken: string) => {\n    tokenRef.current = loginToken;\n    dispatch(\n      setTokenLogin({\n        ...tokenLogin,\n        loginToken,\n        ...(apiAddress ? { nativeAuthConfig: configuration } : {})\n      })\n    );\n  };\n\n  const getNativeAuthLoginToken = () => {\n    try {\n      return client.initialize();\n    } catch (error) {\n      console.error('Unable to get block. Login failed.', error);\n      return;\n    }\n  };\n\n  const setTokenLoginInfo = ({\n    address,\n    signature\n  }: {\n    address: string;\n    signature: string;\n  }) => {\n    const loginToken = tokenRef.current;\n\n    if (!loginToken) {\n      throw 'Token not found. Call `setLoginToken` first.';\n    }\n\n    if (!hasNativeAuth) {\n      dispatch(\n        setTokenLogin({\n          loginToken,\n          signature\n        })\n      );\n      return;\n    }\n\n    const nativeAuthToken = client.getToken({\n      address,\n      token: loginToken,\n      signature\n    });\n\n    dispatch(\n      setTokenLogin({\n        loginToken,\n        signature,\n        nativeAuthToken,\n        ...(apiAddress ? { nativeAuthConfig: configuration } : {})\n      })\n    );\n\n    return nativeAuthToken;\n  };\n\n  // TODO: @StanislavSava verify and maybe refactor to separate function\n  const refreshNativeAuthTokenLogin = async ({\n    signMessageCallback,\n    nativeAuthClientConfig\n  }: {\n    signMessageCallback: (\n      messageToSign: Message,\n      options: Record<any, any>\n    ) => Promise<Message>;\n    nativeAuthClientConfig?: NativeAuthConfigType;\n  }) => {\n    const nativeAuthClient = nativeAuth(\n      nativeAuthClientConfig || configuration\n    );\n\n    const loginToken = await nativeAuthClient.initialize({\n      noCache: Boolean(nativeAuthClientConfig)\n    });\n\n    tokenRef.current = loginToken;\n\n    if (!loginToken) {\n      return;\n    }\n\n    const messageToSign = new Message({\n      address: new Address(address),\n      data: Buffer.from(`${address}${loginToken}`)\n    });\n\n    const signedMessage = await signMessageCallback(messageToSign, {});\n\n    if (!signedMessage?.signature) {\n      throw 'Message not signed';\n    }\n\n    const nativeAuthToken = setTokenLoginInfo({\n      address,\n      signature: Buffer.from(signedMessage.signature).toString('hex')\n    });\n\n    return nativeAuthToken;\n  };\n\n  return {\n    configuration,\n    setLoginToken,\n    getNativeAuthLoginToken,\n    setTokenLoginInfo,\n    refreshNativeAuthTokenLogin\n  };\n};\n", "import { useState } from 'react';\nimport { OperaProvider } from '@multiversx/sdk-opera-provider';\n\nimport { SECOND_LOGIN_ATTEMPT_ERROR } from 'constants/errorsMessages';\nimport { setAccountProvider } from 'providers/accountProvider';\nimport { loginAction } from 'reduxStore/commonActions';\nimport { useDispatch } from 'reduxStore/DappProviderContext';\nimport {\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType,\n  OnProviderLoginType\n} from 'types';\nimport { LoginMethodsEnum } from 'types/enums.types';\nimport { getIsLoggedIn } from 'utils/getIsLoggedIn';\nimport { optionalRedirect } from 'utils/internal';\nimport { getDefaultCallbackUrl } from 'utils/window';\nimport { getWindowLocation } from 'utils/window/getWindowLocation';\nimport { clearInitiatedLogins } from './helpers';\nimport { useLoginService } from './useLoginService';\n\nexport type UseOperaLoginReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType\n];\n\nexport const useOperaLogin = ({\n  callbackRoute,\n  token: tokenToSign,\n  nativeAuth,\n  onLoginRedirect\n}: OnProviderLoginType): UseOperaLoginReturnType => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const hasNativeAuth = nativeAuth != null;\n  const loginService = useLoginService(nativeAuth);\n  let token = tokenToSign;\n\n  const dispatch = useDispatch();\n  const isLoggedIn = getIsLoggedIn();\n\n  async function initiateLogin() {\n    if (isLoggedIn) {\n      throw new Error(SECOND_LOGIN_ATTEMPT_ERROR);\n    }\n\n    clearInitiatedLogins();\n\n    setIsLoading(true);\n    const provider: OperaProvider = OperaProvider.getInstance();\n\n    try {\n      const isSuccessfullyInitialized: boolean = await provider.init();\n\n      if (!isSuccessfullyInitialized) {\n        console.warn(\n          'Something went wrong trying to redirect to wallet login..'\n        );\n        return;\n      }\n\n      const { origin } = getWindowLocation();\n      const defaulCallbackUrl = getDefaultCallbackUrl();\n      const callbackUrl: string = encodeURIComponent(\n        `${origin}${callbackRoute ?? defaulCallbackUrl}`\n      );\n\n      if (hasNativeAuth && !token) {\n        token = await loginService.getNativeAuthLoginToken();\n\n        // Fetching block failed\n        if (!token) {\n          console.warn('Fetching block failed. Login cancelled.');\n          return;\n        }\n      }\n\n      if (token) {\n        loginService.setLoginToken(token);\n      }\n\n      const providerLoginData = {\n        callbackUrl,\n        ...(token && { token })\n      };\n\n      await provider.login(providerLoginData);\n\n      setAccountProvider(provider);\n\n      const { signature, address } = provider.account;\n\n      if (!address) {\n        setIsLoading(false);\n        console.warn('Login cancelled.');\n        return;\n      }\n\n      if (signature && token) {\n        loginService.setTokenLoginInfo({\n          signature,\n          address\n        });\n      }\n\n      dispatch(loginAction({ address, loginMethod: LoginMethodsEnum.opera }));\n\n      optionalRedirect({\n        callbackRoute,\n        onLoginRedirect,\n        options: { signature, address }\n      });\n    } catch (error) {\n      console.error('error loging in', error);\n      // TODO: can be any or typed error\n      setError('error logging in' + (error as any).message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const loginFailed = Boolean(error);\n\n  return [\n    initiateLogin,\n    {\n      loginFailed,\n      error,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    }\n  ];\n};\n", "import { useState } from 'react';\nimport { processModifiedAccount } from 'components/ProviderInitializer/helpers/processModifiedAccount';\nimport { isBrowserWithPopupConfirmation } from 'constants/browser';\nimport { SECOND_LOGIN_ATTEMPT_ERROR } from 'constants/errorsMessages';\nimport { CrossWindowProvider } from 'lib/sdkWebWalletCrossWindowProvider';\nimport { setAccountProvider } from 'providers/accountProvider';\nimport { loginAction } from 'reduxStore/commonActions';\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport { networkSelector } from 'reduxStore/selectors/networkConfigSelectors';\nimport { setAccount, setAddress } from 'reduxStore/slices';\nimport {\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType,\n  OnProviderLoginType\n} from 'types';\nimport { LoginMethodsEnum } from 'types/enums.types';\nimport { getLatestNonce } from 'utils/account/getLatestNonce';\nimport { getIsLoggedIn } from 'utils/getIsLoggedIn';\nimport { optionalRedirect } from 'utils/internal';\nimport { getWindowLocation } from 'utils/window/getWindowLocation';\nimport { clearInitiatedLogins } from './helpers';\nimport { useLoginService } from './useLoginService';\n\nexport type UseCrossWindowLoginReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType\n];\n\nexport const useCrossWindowLogin = ({\n  callbackRoute,\n  token: tokenToSign,\n  nativeAuth,\n  onLoginRedirect,\n  hasConsentPopup,\n  walletAddress\n}: OnProviderLoginType & {\n  hasConsentPopup?: boolean;\n  walletAddress?: string;\n}): UseCrossWindowLoginReturnType => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const hasNativeAuth = nativeAuth != null;\n  const loginService = useLoginService(nativeAuth);\n  let token = tokenToSign;\n  const network = useSelector(networkSelector);\n\n  const dispatch = useDispatch();\n  const isLoggedIn = getIsLoggedIn();\n\n  async function initiateLogin() {\n    if (isLoggedIn) {\n      throw new Error(SECOND_LOGIN_ATTEMPT_ERROR);\n    }\n\n    clearInitiatedLogins({\n      skipLoginMethod: LoginMethodsEnum.crossWindow\n    });\n\n    setIsLoading(true);\n    const isSuccessfullyInitialized: boolean =\n      await CrossWindowProvider.getInstance().init();\n    const provider: CrossWindowProvider =\n      CrossWindowProvider.getInstance().setWalletUrl(\n        walletAddress ?? network.walletAddress\n      );\n\n    try {\n      if (!isSuccessfullyInitialized) {\n        console.warn(\n          'Something went wrong trying to redirect to wallet login..'\n        );\n        return;\n      }\n\n      const { origin, pathname } = getWindowLocation();\n      const callbackUrl: string = encodeURIComponent(\n        `${origin}${callbackRoute ?? pathname}`\n      );\n\n      if (hasNativeAuth && !token) {\n        token = await loginService.getNativeAuthLoginToken();\n\n        // Fetching block failed\n        if (!token) {\n          console.warn('Fetching block failed. Login cancelled.');\n          return;\n        }\n      }\n\n      if (token) {\n        loginService.setLoginToken(token);\n      }\n\n      const providerLoginData = {\n        callbackUrl,\n        ...(token && { token })\n      };\n\n      const needsConsent = isBrowserWithPopupConfirmation && hasNativeAuth;\n\n      if (needsConsent || hasConsentPopup) {\n        provider.setShouldShowConsentPopup(true);\n      }\n\n      const { signature, address, multisig, impersonate } =\n        await provider.login(providerLoginData);\n\n      setAccountProvider(provider);\n\n      if (!address) {\n        setIsLoading(false);\n        console.warn('Login cancelled.');\n        return;\n      }\n\n      const account = await processModifiedAccount({\n        loginToken: token,\n        extraInfoData: { multisig, impersonate },\n        address,\n        signature,\n        loginService\n      });\n\n      if (!account) {\n        return;\n      }\n\n      dispatch(\n        loginAction({\n          address: account.address,\n          loginMethod: LoginMethodsEnum.crossWindow\n        })\n      );\n\n      dispatch(setAddress(account.address));\n\n      dispatch(\n        setAccount({\n          ...account,\n          nonce: getLatestNonce(account)\n        })\n      );\n\n      optionalRedirect({\n        callbackRoute,\n        onLoginRedirect,\n        options: { signature, address: account.address }\n      });\n    } catch (error) {\n      console.error('error loging in', error);\n      // TODO: can be any or typed error\n      setError('error logging in' + (error as any).message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const loginFailed = Boolean(error);\n\n  return [\n    initiateLogin,\n    {\n      loginFailed,\n      error,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    }\n  ];\n};\n", "import { useState } from 'react';\nimport { SECOND_LOGIN_ATTEMPT_ERROR } from 'constants/errorsMessages';\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport { networkSelector } from 'reduxStore/selectors';\nimport { setWalletLogin, setCustomWalletAddress } from 'reduxStore/slices';\nimport { newWalletProvider } from 'utils';\nimport { getIsLoggedIn } from 'utils/getIsLoggedIn';\nimport { getWindowLocation } from 'utils/window/getWindowLocation';\nimport {\n  AccountInfoSliceNetworkType,\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType,\n  OnProviderLoginType\n} from '../../types';\nimport { sanitizeCallbackUrl } from '../../utils/sanitizeCallbackUrl';\nimport { useLoginService } from './useLoginService';\n\nexport interface UseWebWalletLoginPropsType\n  extends Omit<OnProviderLoginType, 'onLoginRedirect'> {\n  redirectDelayMilliseconds?: number;\n  /**\n   * @param {string} customWalletAddress if set, will be used as main `walletAddress`\n   * @description\n   * The `customWalletAddress` property is used to override the default `walletAddress`.\n   * This is useful when you want to use a custom wallet provider.\n   * It overrides the network's wallet address, including the wallet address from the custom network config specified in the `DappProvider`.\n   * @example\n   * <WebWalletLoginButton\n      {...otherLoginProps}\n      customWalletAddress=\"https://custom-web-wallet.com\"\n     >\n   */\n  customWalletAddress?: AccountInfoSliceNetworkType['customWalletAddress'];\n}\n\nexport type UseWebWalletLoginReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType\n];\n\nexport const useWebWalletLogin = ({\n  callbackRoute,\n  token: tokenToSign,\n  nativeAuth,\n  redirectDelayMilliseconds = 100,\n  customWalletAddress\n}: UseWebWalletLoginPropsType): UseWebWalletLoginReturnType => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const network = useSelector(networkSelector);\n  const dispatch = useDispatch();\n  const isLoggedIn = getIsLoggedIn();\n  const hasNativeAuth = Boolean(nativeAuth);\n  const loginService = useLoginService(nativeAuth);\n  let token = tokenToSign;\n\n  async function initiateLogin() {\n    if (isLoggedIn) {\n      throw new Error(SECOND_LOGIN_ATTEMPT_ERROR);\n    }\n\n    dispatch(setCustomWalletAddress(customWalletAddress));\n\n    try {\n      setIsLoading(true);\n      const provider = newWalletProvider(\n        customWalletAddress ?? network.walletAddress\n      );\n\n      const now = new Date();\n      const expires: number = now.setMinutes(now.getMinutes() + 3) / 1000;\n      const walletLoginData = {\n        data: {},\n        expires: expires\n      };\n\n      if (hasNativeAuth && !token) {\n        token = await loginService.getNativeAuthLoginToken();\n        // Fetching block failed\n        if (!token) {\n          console.warn('Login cancelled.');\n          return;\n        }\n      }\n\n      if (token) {\n        loginService.setLoginToken(token);\n      }\n\n      const { origin } = getWindowLocation();\n      const targetUrl = window?.location\n        ? `${origin}${callbackRoute}`\n        : `${callbackRoute}`;\n      const params = new URLSearchParams(document?.location.search);\n\n      // skip login when an address param is prefilled in URL\n      const skipLogin = params.get('address');\n\n      if (!skipLogin) {\n        dispatch(setWalletLogin(walletLoginData));\n      }\n\n      const sanitizedCallbackUrl = sanitizeCallbackUrl(targetUrl);\n      const callbackUrl = encodeURIComponent(sanitizedCallbackUrl);\n\n      const loginData = {\n        callbackUrl,\n        ...(token && { token }),\n        redirectDelayMilliseconds\n      };\n\n      await provider.login(loginData);\n    } catch (error) {\n      console.error(error);\n      setError('error logging in' + (error as any).message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const loginFailed = Boolean(error);\n\n  return [\n    initiateLogin,\n    {\n      error,\n      loginFailed,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    }\n  ];\n};\n", "export * from './account';\nexport * from './buildUrlParams';\nexport * from './clearNavigationHistory';\nexport * from './dateTime';\nexport * from './decoders';\nexport * from './environment';\nexport * from './getIsLoggedIn';\nexport * from './isWindowAvailable';\nexport * from './logout';\nexport * from './math';\nexport * from './network';\nexport * from './operations';\nexport * from './parseNavigationParams';\nexport * from './platform';\nexport * from './progress';\nexport * from './redirect';\nexport * from './removeSearchParamsFromUrl';\nexport * from './retryMultipleTimes';\nexport * from './smartContracts';\nexport * from './storage';\nexport * from './switchTrue';\nexport * from './toasts';\nexport * from './transactions';\nexport * from './validation';\nexport * from './websocket';\nexport * from './window';\nexport * from './getHasNativeAuth';\nexport * from './waitForChainID';\n", "export function buildUrlParams(\n  search: string,\n  urlParams: {\n    [key: string]: string;\n  }\n) {\n  const urlSearchParams: any = new URLSearchParams(search);\n  const params = Object.fromEntries(urlSearchParams);\n  const nextUrlParams = new URLSearchParams({\n    ...params,\n    ...urlParams\n  }).toString();\n  return { nextUrlParams, params };\n}\n", "export * from './isWebEnvironment';\nexport * from './isMobileEnvironment';\n", "import platform from 'platform';\n\nexport function isMobileEnvironment() {\n  return platform?.os?.family === 'iOS' || platform?.os?.family === 'Android';\n}\n", "/**\n * Decreases the remaining animation of the transaction toast progressively\n * @param positionPercent The toast animation position (%)\n */\nexport const progressiveDecrement = (positionPercent: number) => {\n  return Math.exp(positionPercent / 100);\n};\n", "export * from './getChainID';\nexport * from './getNetworkConfig';\nexport * from './getEgldLabel';\n", "import { chainIDSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport function getChainID() {\n  return chainIDSelector(store.getState());\n}\n", "import { networkSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport function getNetworkConfig() {\n  return networkSelector(store.getState());\n}\n", "import { egldLabelSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport function getEgldLabel() {\n  return egldLabelSelector(store.getState());\n}\n", "export * from './detectCurrentPlatform';\nexport * from './getIsExtensionAvailable';\nexport * from './getIsMetamaskAvailable';\n", "import { safeWindow } from 'lib/sdkDappUtils';\nimport { PlatformsEnum } from 'types/enums.types';\n\nexport const detectCurrentPlatform = () => {\n  if ((safeWindow as any)?.ReactNativeWebView) {\n    return PlatformsEnum.reactNative;\n  }\n  if ((safeWindow as any)?.webkit) {\n    return PlatformsEnum.ios;\n  }\n\n  return PlatformsEnum.web;\n};\n", "type SafeWindowType<T extends Window = Window> = {\n  [K in keyof T]?: T[K];\n};\n\nexport const getIsExtensionAvailable = () => {\n  const safeWindow =\n    typeof window !== 'undefined' ? window : ({} as SafeWindowType);\n  return Boolean(safeWindow?.elrondWallet);\n};\n", "import { MetamaskProvider } from '@multiversx/sdk-metamask-provider/out/metamaskProvider';\n\nexport const getIsMetamaskAvailable = () => {\n  return MetamaskProvider.isMetamaskInstalled();\n};\n", "export * from './getRemainingValue';\n", "import { progressiveDecrement } from '../math';\n\nexport const SAME_SHARD_MAX_TOAST_WIDTH_PERCENT_DECREASE = 75;\nexport const CROSS_SHARD_MAX_TOAST_WIDTH_PERCENT_DECREASE = 25;\nexport const PROGRESS_INTERVAL_DURATION_MS = 100;\n\ninterface GetRemainingValuePropsType {\n  remaining: number;\n  totalSeconds: number;\n  isCrossShard: boolean;\n}\n\nexport const getRemainingValue = ({\n  remaining,\n  totalSeconds,\n  isCrossShard\n}: GetRemainingValuePropsType) => {\n  const widthPercent = isCrossShard\n    ? CROSS_SHARD_MAX_TOAST_WIDTH_PERCENT_DECREASE\n    : SAME_SHARD_MAX_TOAST_WIDTH_PERCENT_DECREASE;\n  const intervalSec = PROGRESS_INTERVAL_DURATION_MS / 1000;\n  const linearDecrease = 1 / (totalSeconds * intervalSec);\n\n  const algoDecrement = Math.min(\n    progressiveDecrement(remaining) - 1,\n    linearDecrease\n  );\n\n  const decrement =\n    remaining >= 100 - widthPercent ? linearDecrease : algoDecrement;\n\n  return remaining - decrement;\n};\n", "export interface SwitchTrueType {\n  default: any;\n  [key: string]: any;\n}\n\ntype ReturnKeys = 'true' | 'false';\n\nexport function switchTrue(object: SwitchTrueType) {\n  const { default: defaultValue, ...rest } = object;\n  const obj = { default: defaultValue, ...rest };\n  const result = Object.keys(obj).reduce((acc, cur) => {\n    return {\n      ...acc,\n      [cur === 'default' ? 'true' : cur]: (obj as any)[cur as ReturnKeys]\n    };\n  }, {} as Record<ReturnKeys, any>);\n  return result['true'];\n}\n", "export * from './customToastsActions';\n", "import { addCustomToast, removeCustomToast } from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\nimport { CustomToastType } from '../../types/toasts.types';\n\n/**\n * React components cannot be sent trough Custom Events nor trough Redux\n * So a local dictionary is created here for registerd components\n */\nconst componentsDictionary: Record<string, () => JSX.Element> = {};\n/**\n * Callbacks cannot be sent trough Custom Events nor trough Redux\n * So a local dictionary is created here for registered callbacks\n */\nconst componentsCloseHandlersDictionary: Record<string, () => void> = {};\n\nexport const getRegisteredCustomIconComponents = (id: string) =>\n  componentsDictionary[id];\n\nexport const getRegisteredToastCloseHandler = (id: string) =>\n  componentsCloseHandlersDictionary[id];\n\nexport const addNewCustomToast = (props: CustomToastType) => {\n  if (props.component != null) {\n    const { component, onClose, ...rest } = props;\n    const data = store.dispatch(\n      addCustomToast({\n        ...rest,\n        // do not send component to Redux\n        component: null,\n        onClose: undefined\n      })\n    );\n\n    componentsDictionary[data?.payload.toastId] = component;\n    if (onClose) {\n      componentsCloseHandlersDictionary[data?.payload.toastId] = onClose;\n    }\n\n    return data?.payload;\n  }\n  return store.dispatch(addCustomToast(props)).payload;\n};\n\nexport const deleteCustomToast = (toastId: string) =>\n  store.dispatch(removeCustomToast(toastId));\n", "export * from './getWebsocketUrl';\n", "import axios from 'axios';\n\nexport async function getWebsocketUrl(apiAddress: string) {\n  try {\n    const { data } = await axios.get<{ url: string }>(\n      `${apiAddress}/websocket/config`\n    );\n    return `wss://${data.url}`;\n  } catch (err) {\n    console.error(err);\n    throw new Error('Can not get websocket url');\n  }\n}\n", "export * from './getHasNativeAuth';\n", "import isObject from 'lodash/isObject';\nimport { safeWindow } from 'lib/sdkDappUtils';\nimport { OnProviderLoginType } from '../../types/login.types';\n\nconst isDevelopment = safeWindow?.location?.origin?.includes('localhost');\n\nexport const getHasNativeAuth = (\n  nativeAuth: OnProviderLoginType['nativeAuth']\n) => {\n  const hasNativeAuth = isObject(nativeAuth);\n\n  if (!hasNativeAuth) {\n    return Boolean(nativeAuth);\n  }\n\n  const nativeAuthClone = { ...nativeAuth };\n  const preventWalletConnectV2Signing = Boolean(isDevelopment);\n\n  if (preventWalletConnectV2Signing) {\n    delete nativeAuthClone.origin;\n  }\n\n  const isNativeAuthConfigured = Object.keys(nativeAuthClone).length > 0;\n  return isNativeAuthConfigured;\n};\n", "import { chainIDSelector } from 'reduxStore/selectors';\nimport { store } from 'reduxStore/store';\n\nexport const waitForChainID = ({\n  maxRetries\n}: {\n  maxRetries: number;\n}): Promise<string | null> =>\n  new Promise((resolve, reject) => {\n    let retries = 0;\n\n    // Function to periodically check the value of chainID\n    const checkChainID = () => {\n      const chainID = chainIDSelector(store.getState());\n\n      if (chainID) {\n        resolve(chainID);\n        return;\n      }\n\n      if (retries < maxRetries) {\n        retries++;\n        setTimeout(checkChainID, 1000);\n        return;\n      }\n\n      reject(null);\n    };\n\n    checkChainID();\n  });\n", "export const sanitizeCallbackUrl = (\n  targetURL: string,\n  vulnerableItems: string[] = ['address']\n) => {\n  const url = new URL(targetURL);\n  const params = new URLSearchParams(url.search);\n\n  vulnerableItems.forEach((vulnerableItem) => params.delete(vulnerableItem));\n\n  const questionMark = Array.from(params.values()).length > 0 ? '?' : '';\n\n  const pathname =\n    url.pathname === '/' && !targetURL.endsWith('/') ? '' : url.pathname;\n\n  if (url.protocol === 'vscode:') {\n    return targetURL;\n  }\n\n  return `${url.origin}${pathname}${questionMark}${params.toString()}${\n    url.hash\n  }`;\n};\n", "import { useState } from 'react';\nimport { SECOND_LOGIN_ATTEMPT_ERROR } from 'constants/index';\nimport { getIsNativeAuthSingingForbidden } from 'services/nativeAuth/helpers';\nimport { useDappModal } from 'UI/DappModal';\nimport { useGetIsLoggedIn } from '../account';\n\nexport interface UseGetModalLoginMethodsPropsType {\n  hideButtonWhenModalOpens?: boolean;\n  onContentHide?: (props?: any) => void;\n  onContentShow?: (props?: any) => void;\n  onModalCloses?: (props?: any) => void;\n  onModalOpens?: (props?: any) => void;\n  token: string | undefined;\n  wrapContentInsideModal: boolean;\n}\n\nexport const useGetModalLoginMethods = ({\n  hideButtonWhenModalOpens,\n  onContentHide,\n  onContentShow,\n  onModalCloses,\n  onModalOpens,\n  token,\n  wrapContentInsideModal\n}: UseGetModalLoginMethodsPropsType) => {\n  const isLoggedIn = useGetIsLoggedIn();\n  const [showContent, setShowContent] = useState(false);\n  const { handleShowModal, handleHideModal, showModal } = useDappModal();\n  const disabledConnectButton = getIsNativeAuthSingingForbidden(token);\n  const shouldRenderButton = !hideButtonWhenModalOpens || !showContent;\n\n  const handleCloseModal = () => {\n    setShowContent(false);\n    onContentHide?.();\n\n    if (wrapContentInsideModal) {\n      handleHideModal();\n      onModalCloses?.();\n    } else if (onModalCloses) {\n      console.warn(\n        'Deprecated: \"onModalCloses\" must be used only when \"wrapContentInsideModal\" is set to \"true\". Use \"onContentHide\" instead.'\n      );\n\n      onModalCloses();\n    }\n  };\n\n  const handleOpenModal = () => {\n    if (isLoggedIn) {\n      throw new Error(SECOND_LOGIN_ATTEMPT_ERROR);\n    }\n\n    // Hide the content if already open\n    if (showContent) {\n      return handleCloseModal();\n    }\n\n    setShowContent(true);\n    onContentShow?.();\n\n    if (wrapContentInsideModal) {\n      handleShowModal();\n      onModalOpens?.();\n    } else if (onModalOpens) {\n      console.warn(\n        'Deprecated: \"onModalOpens\" must be used only when \"wrapContentInsideModal\" is set to \"true\". Use \"onContentShow\" instead.'\n      );\n\n      onModalOpens();\n    }\n  };\n\n  return {\n    disabledConnectButton,\n    handleCloseModal,\n    handleOpenModal,\n    shouldRenderButton,\n    showContent,\n    showModal\n  };\n};\n", "export * from './getIsNativeAuthSingingForbidden';\nexport * from './decodeLoginToken';\nexport * from './decodeNativeAuthToken';\nexport * from './getAuthorizationInfo';\nexport * from './getLatestBlockHash';\n", "import { MULTIVERSX_ORIGIN } from 'constants/index';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport { tokenLoginSelector } from 'reduxStore/selectors';\nimport { decodeLoginToken } from './decodeLoginToken';\n\nexport const getIsNativeAuthSingingForbidden = (token?: string) => {\n  const tokenLogin = useSelector(tokenLoginSelector);\n  const loginToken = tokenLogin?.loginToken ?? token;\n\n  if (!loginToken) {\n    return;\n  }\n\n  const decoded = decodeLoginToken(loginToken);\n\n  if (!decoded) {\n    return;\n  }\n\n  return decoded.origin.toLowerCase().startsWith(MULTIVERSX_ORIGIN);\n};\n", "import { getHumanReadableTokenExpirationTime } from 'components/LogoutListener/helpers/useNativeAuthLogoutWarning/helpers';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport { tokenLoginSelector } from 'reduxStore/selectors';\nimport { WithClassnameType } from 'UI/types';\nimport { decodeLoginToken } from './decodeLoginToken';\n\nexport const getAuthorizationInfo = (\n  token?: string,\n  className?: WithClassnameType['className']\n) => {\n  const tokenLogin = useSelector(tokenLoginSelector);\n  const loginToken = tokenLogin?.loginToken ?? token;\n\n  if (!loginToken) {\n    return;\n  }\n\n  const decoded = decodeLoginToken(loginToken);\n\n  if (!decoded) {\n    return;\n  }\n\n  return {\n    className,\n    url: decoded.origin,\n    duration: getHumanReadableTokenExpirationTime(decoded.ttl * 1000)\n  };\n};\n", "export * from './getHumanReadableTokenExpirationTime';\n", "import BigNumber from 'bignumber.js';\n\nexport const getHumanReadableTokenExpirationTime = (milliseconds: number) => {\n  const seconds = new BigNumber(milliseconds)\n    .dividedBy(1000)\n    .integerValue(BigNumber.ROUND_FLOOR);\n\n  const minutes = new BigNumber(seconds)\n    .dividedBy(60)\n    .integerValue(BigNumber.ROUND_FLOOR);\n\n  const hours = new BigNumber(minutes)\n    .dividedBy(60)\n    .integerValue(BigNumber.ROUND_FLOOR);\n\n  const overOneHour = hours.modulo(60).isGreaterThan(1);\n  const overOneMinute = minutes.modulo(60).isGreaterThan(1);\n  const underOneMinute = minutes.modulo(60).isLessThan(1);\n\n  if (overOneHour) {\n    return `${hours} hours`;\n  }\n\n  if (overOneMinute) {\n    return `${minutes} minutes`;\n  }\n\n  if (underOneMinute) {\n    return 'less than 1 minute';\n  }\n\n  return `${minutes} minute`;\n};\n", "export * from './components';\nexport * from './hooks';\nexport * from './dappModal.types';\n", "export { DappModal } from './DappModal';\nexport { DappModalBody } from './DappModalBody';\nexport { DappModalFooter } from './DappModalFooter';\nexport { DappModalHeader } from './DappModalHeader';\n", "import React, { KeyboardEvent, ReactNode } from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\nimport { createPortal } from 'react-dom';\nimport { DataTestIdsEnum } from 'constants/index';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { WithClassnameType } from '../../types';\nimport { DappModalConfig } from '../dappModal.types';\nimport { DappModalBody } from './DappModalBody';\nimport { DappModalFooter } from './DappModalFooter';\nimport { DappModalHeader } from './DappModalHeader';\n\nexport interface DappModalPropsType extends WithClassnameType {\n  children?: ReactNode;\n  closeOnEscape?: boolean;\n  config?: DappModalConfig;\n  id?: string;\n  onHide?: () => void;\n  parentElement?: Element;\n  visible?: boolean;\n}\n\nconst defaultConfig: DappModalConfig = {\n  showHeader: true,\n  showFooter: false,\n  headerText: '',\n  footerText: ''\n};\n\nconst DappModalComponent = ({\n  'data-testid': dataTestId = DataTestIdsEnum.dappModal,\n  children,\n  className = 'dapp-modal-dialog-wrapper',\n  closeOnEscape,\n  config = defaultConfig,\n  id = 'dapp-modal',\n  onHide,\n  parentElement,\n  visible,\n  styles\n}: DappModalPropsType & WithStylesImportType) => {\n  const [isBrowser, setIsBrowser] = useState(false);\n\n  useEffect(() => {\n    setIsBrowser(true);\n  }, []);\n\n  if (!visible) {\n    return null;\n  }\n\n  const {\n    showHeader,\n    showFooter,\n    headerText,\n    footerText,\n    modalDialogClassName = 'dapp-modal-dialog',\n    modalContentClassName = 'dapp-modal-dialog-content',\n    modalHeaderClassName = 'dapp-modal-dialog-header',\n    modalHeaderTextClassName = 'dapp-modal-dialog-header-text',\n    modalCloseButtonClassName = 'dapp-modal-dialog-close-button',\n    modalBodyClassName = 'dapp-modal-dialog-content-body',\n    modalFooterClassName = 'dapp-modal-dialog-footer',\n    customModalHeader,\n    customModalFooter\n  } = config;\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLDivElement>) => {\n    if (event.key === 'Escape' && closeOnEscape) {\n      onHide?.();\n    }\n  };\n\n  return (\n    <>\n      {isBrowser &&\n        createPortal(\n          <div\n            id={id}\n            role='dialog'\n            aria-modal='true'\n            className={classNames(\n              modalDialogClassName,\n              styles?.dappModal,\n              className\n            )}\n            data-testid={dataTestId}\n            onKeyDown={handleKeyDown}\n          >\n            <div\n              className={classNames(\n                styles?.dappModalContent,\n                modalContentClassName\n              )}\n            >\n              <DappModalHeader\n                visible={showHeader}\n                headerText={headerText}\n                customHeader={customModalHeader}\n                className={modalHeaderClassName}\n                headerTextClassName={modalHeaderTextClassName}\n                closeButtonClassName={modalCloseButtonClassName}\n                onHide={onHide}\n              />\n\n              <DappModalBody className={modalBodyClassName}>\n                {children}\n              </DappModalBody>\n\n              <DappModalFooter\n                visible={showFooter}\n                customFooter={customModalFooter}\n                footerText={footerText}\n                className={modalFooterClassName}\n              />\n            </div>\n          </div>,\n          parentElement ?? document?.body\n        )}\n    </>\n  );\n};\n\nexport const DappModal = withStyles(DappModalComponent, {\n  ssrStyles: () => import('UI/DappModal/dappModalStyles.scss'),\n  clientStyles: () => require('UI/DappModal/dappModalStyles.scss').default\n});\n", "import React, { FunctionComponent } from 'react';\nimport { useStyles } from './useStyles';\n\ntype StylesType = typeof import('*.scss');\n\nexport type WithStylesImportType = {\n  globalStyles?: Record<any, any>;\n  styles?: Record<any, any>;\n};\n\nexport function withStyles<TProps>(\n  Component: FunctionComponent<TProps & WithStylesImportType>,\n  imports: {\n    ssrGlobalStyles?: () => Promise<StylesType>;\n    ssrStyles?: () => Promise<StylesType>;\n    clientStyles?: () => StylesType;\n  }\n) {\n  return (props: TProps) => {\n    const { globalStyles, styles } = useStyles({\n      ssrGlobalImportCallback: imports.ssrGlobalStyles,\n      ssrImportCallback: imports.ssrStyles,\n      clientImportCallback: imports.clientStyles\n    });\n\n    return (\n      <Component\n        {...props}\n        globalStyles={globalStyles ?? {}}\n        styles={styles ?? {}}\n      />\n    );\n  };\n}\n", "import React, { useEffect } from 'react';\nimport { isSSR } from 'utils/isSSR';\n\ntype StylesType = typeof import('*.scss');\n\nexport type WithStylesImportType = {\n  globalStyles?: Record<any, any>;\n  styles?: Record<any, any>;\n};\n\nconst defaultServerGlobalImport = async () =>\n  await import('assets/sass/main.scss');\nconst defaultClientGlobalImport = () =>\n  require('assets/sass/main.scss').default;\n\nconst ssr = isSSR();\nexport function useStyles({\n  ssrGlobalImportCallback,\n  ssrImportCallback,\n  clientImportCallback\n}: {\n  ssrGlobalImportCallback?: () => Promise<StylesType>;\n  ssrImportCallback?: () => Promise<StylesType>;\n  clientImportCallback?: () => StylesType;\n}) {\n  const [globalStyles, setGlobalStyles] = React.useState<Record<any, any>>(\n    ssr ? undefined : defaultClientGlobalImport()\n  );\n  const [styles, setStyles] = React.useState<Record<any, any> | undefined>(\n    ssr ? undefined : clientImportCallback?.()\n  );\n\n  const importStyles = async () => {\n    (ssrGlobalImportCallback\n      ? ssrGlobalImportCallback()\n      : defaultServerGlobalImport()\n    ).then((styles: StylesType) => setGlobalStyles(styles.default));\n\n    ssrImportCallback?.().then((styles: StylesType) =>\n      setStyles(styles.default)\n    );\n  };\n\n  useEffect(() => {\n    if (ssr) {\n      importStyles();\n    }\n  }, []);\n\n  return {\n    globalStyles,\n    styles\n  };\n}\n", "import { isWindowAvailable } from './isWindowAvailable';\n\nexport const isSSR = () => !isWindowAvailable();\n", "import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { WithClassnameType } from '../../types';\n\nexport interface DappModalBodyPropsType extends WithClassnameType {\n  children?: ReactNode;\n}\n\nconst DappModalBodyComponent = ({\n  className,\n  children,\n  styles\n}: DappModalBodyPropsType & WithStylesImportType) => {\n  return (\n    <div className={classNames(styles?.dappModalBody, className)}>\n      {children}\n    </div>\n  );\n};\n\nexport const DappModalBody = withStyles(DappModalBodyComponent, {\n  ssrStyles: () => import('UI/DappModal/dappModalStyles.scss'),\n  clientStyles: () => require('UI/DappModal/dappModalStyles.scss').default\n});\n", "import React from 'react';\nimport classNames from 'classnames';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { WithClassnameType } from '../../types';\n\nexport interface DappModalFooterPropsType extends WithClassnameType {\n  visible?: boolean;\n  footerText?: string;\n  customFooter?: JSX.Element;\n}\n\nconst DappModalFooterComponent = ({\n  visible,\n  customFooter,\n  className,\n  footerText,\n  styles\n}: DappModalFooterPropsType & WithStylesImportType) => {\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <div className={classNames(styles?.dappModalFooter, className)}>\n      {customFooter ?? <div>{footerText}</div>}\n    </div>\n  );\n};\n\nexport const DappModalFooter = withStyles(DappModalFooterComponent, {\n  ssrStyles: () => import('UI/DappModal/dappModalStyles.scss'),\n  clientStyles: () => require('UI/DappModal/dappModalStyles.scss').default\n});\n", "import React from 'react';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { WithClassnameType } from '../../types';\n\nexport interface DappModalHeaderPropsType extends WithClassnameType {\n  visible?: boolean;\n  headerText?: string;\n  customHeader?: JSX.Element | string;\n  closeButtonClassName?: string;\n  headerTextClassName?: string;\n  onHide?: () => void;\n}\n\nconst DappModalHeaderComponent = ({\n  visible,\n  headerText,\n  customHeader,\n  className,\n  closeButtonClassName,\n  headerTextClassName,\n  onHide,\n  globalStyles,\n  styles\n}: DappModalHeaderPropsType & WithStylesImportType) => {\n  if (!visible) {\n    return null;\n  }\n\n  return customHeader ? (\n    <div className={classNames(styles?.dappModalHeader, className)}>\n      {customHeader}\n    </div>\n  ) : (\n    <div className={classNames(styles?.dappModalHeader, className)}>\n      <div\n        className={classNames(styles?.dappModalHeaderText, headerTextClassName)}\n      >\n        {headerText}\n      </div>\n\n      <button\n        onClick={onHide}\n        className={classNames(\n          styles?.dappModalCloseButton,\n          globalStyles?.btn,\n          globalStyles?.btnLight,\n          closeButtonClassName\n        )}\n      >\n        <FontAwesomeIcon size='lg' icon={faTimes} />\n      </button>\n    </div>\n  );\n};\n\nexport const DappModalHeader = withStyles(DappModalHeaderComponent, {\n  ssrStyles: () => import('UI/DappModal/dappModalStyles.scss'),\n  clientStyles: () => require('UI/DappModal/dappModalStyles.scss').default\n});\n", "export * from './useDappModal';\n", "import { useEffect, useState } from 'react';\n\nimport { DappModalInteractionConfig } from '../dappModal.types';\n\nexport const useDappModal = (props?: DappModalInteractionConfig) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const handleShowModal = () => {\n    setShowModal(true);\n  };\n\n  const handleHideModal = () => {\n    setShowModal(false);\n  };\n\n  useEffect(() => {\n    if (props?.visible === true) {\n      handleShowModal();\n    } else if (props?.visible === false) {\n      handleHideModal();\n    }\n  }, [props?.visible]);\n\n  return {\n    handleShowModal,\n    handleHideModal,\n    showModal\n  };\n};\n", "export interface DappModalConfig {\n  customModalFooter?: JSX.Element;\n  customModalHeader?: JSX.Element;\n  footerText?: string;\n  headerText?: string;\n  modalBodyClassName?: string;\n  modalCloseButtonClassName?: string;\n  modalContentClassName?: string;\n  modalDialogClassName?: string;\n  modalFooterClassName?: string;\n  modalHeaderClassName?: string;\n  modalHeaderTextClassName?: string;\n  showFooter?: boolean;\n  showHeader?: boolean;\n}\n\nexport interface DappModalInteractionConfig {\n  visible?: boolean;\n}\n", "import { useEffect, useState } from 'react';\nimport { HWProvider } from '@multiversx/sdk-hw-provider';\nimport { SECOND_LOGIN_ATTEMPT_ERROR } from 'constants/errorsMessages';\nimport { getAccountProvider, getLedgerConfiguration } from 'providers';\nimport { setAccountProvider } from 'providers/accountProvider';\nimport { loginAction } from 'reduxStore/commonActions';\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport { ledgerAccountSelector } from 'reduxStore/selectors';\nimport {\n  setLedgerAccount,\n  setLedgerLogin,\n  updateLedgerAccount\n} from 'reduxStore/slices';\nimport { LoginMethodsEnum } from 'types/enums.types';\nimport { getLedgerErrorCodes, optionalRedirect } from 'utils/internal';\nimport {\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType,\n  OnProviderLoginType\n} from '../../types';\nimport { getIsLoggedIn } from '../../utils';\nimport { clearInitiatedLogins } from './helpers';\nimport { useAddressScreens } from './useAddressScreens';\nimport { useLoginService } from './useLoginService';\nconst failInitializeErrorText = 'Check if the MultiversX App is open on Ledger';\n\nexport interface UseLedgerLoginPropsType extends OnProviderLoginType {\n  addressesPerPage?: number;\n}\n\nexport interface SelectedAddress {\n  address: string;\n  index: number;\n}\n\nexport interface LedgerLoginHookCustomStateType {\n  accounts: string[];\n  showAddressList: boolean;\n  startIndex: number;\n  selectedAddress: SelectedAddress | null;\n  version: string;\n  contractDataEnabled: boolean;\n  onGoToSpecificPage: (page: number) => void;\n  onGoToPrevPage: () => void;\n  onGoToNextPage: () => void;\n  onSelectAddress: (address: SelectedAddress | null) => void;\n  onConfirmSelectedAddress: () => void;\n}\n\nexport type LedgerLoginHookReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType,\n  LedgerLoginHookCustomStateType\n];\n\nexport const useLedgerLogin = ({\n  callbackRoute,\n  token: tokenToSign,\n  addressesPerPage: configuredAddressesPerPage,\n  nativeAuth,\n  onLoginRedirect\n}: UseLedgerLoginPropsType): LedgerLoginHookReturnType => {\n  const ledgerAccount = useSelector(ledgerAccountSelector);\n  const hwProvider = getAccountProvider() as unknown as HWProvider;\n  const dispatch = useDispatch();\n  const isLoggedIn = getIsLoggedIn();\n  const hasNativeAuth = nativeAuth != null;\n  const loginService = useLoginService(nativeAuth);\n  let token = tokenToSign;\n\n  const {\n    accounts,\n    setAccounts,\n    isLoading,\n    setIsLoading,\n    setShowAddressList,\n    showAddressList,\n    startIndex,\n    selectedAddress,\n    onGoToPrevPage,\n    onGoToNextPage,\n    onGoToSpecificPage,\n    onSelectAddress,\n    error,\n    setError,\n    defaultAddressesPerPage\n  } = useAddressScreens();\n\n  const addressesPerPage =\n    configuredAddressesPerPage ?? defaultAddressesPerPage;\n\n  const [version, setVersion] = useState('');\n  const [contractDataEnabled, setContractDataEnabled] = useState(false);\n\n  const dispatchLoginActions = ({\n    address,\n    index,\n    signature\n  }: {\n    address: string;\n    index: number;\n    signature?: string;\n  }) => {\n    dispatch(setLedgerLogin({ index, loginType: LoginMethodsEnum.ledger }));\n\n    if (signature) {\n      loginService.setTokenLoginInfo({ signature, address });\n    }\n\n    dispatch(loginAction({ address, loginMethod: LoginMethodsEnum.ledger }));\n\n    optionalRedirect({\n      callbackRoute,\n      onLoginRedirect,\n      options: { address, signature }\n    });\n  };\n\n  const onLoginFailed = (err: any, customMessage = '') => {\n    // Show errors only if the user initiated the login process (isLoading is true)\n    if (isLoading) {\n      const { errorMessage, defaultErrorMessage } = getLedgerErrorCodes(err);\n\n      const message =\n        errorMessage ?? defaultErrorMessage ?? failInitializeErrorText;\n\n      setError(`${message}.${customMessage}`);\n      setIsLoading(false);\n      dispatch(setLedgerAccount(null));\n    }\n  };\n\n  const isHWProviderInitialized = async () => {\n    try {\n      if (hwProvider instanceof HWProvider && hwProvider.isInitialized()) {\n        return hwProvider.isConnected();\n      }\n    } catch (e) {\n      onLoginFailed(e);\n    }\n\n    return false;\n  };\n\n  const initHWProvider = async () => {\n    const isInitialized = await isHWProviderInitialized();\n\n    if (isInitialized) {\n      setError('');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      const hwWalletP = new HWProvider();\n      const initialized = await hwWalletP.init();\n\n      if (initialized) {\n        setAccountProvider(hwWalletP);\n      }\n\n      setError('');\n      setIsLoading(false);\n    } catch (e) {\n      onLoginFailed(e);\n    }\n  };\n\n  const loginUser = async () => {\n    const isInitialized = await isHWProviderInitialized();\n\n    if (!selectedAddress || !isInitialized) {\n      return onLoginFailed(failInitializeErrorText);\n    }\n\n    const { index } = selectedAddress;\n\n    if (hasNativeAuth && !token) {\n      token = await loginService.getNativeAuthLoginToken();\n      // Fetching block failed\n      if (!token) {\n        console.warn('Fetching block failed. Login cancelled.');\n        return;\n      }\n    }\n\n    if (token) {\n      loginService.setLoginToken(token);\n\n      try {\n        const loginInfo = await hwProvider.tokenLogin({\n          token: Buffer.from(`${token}{}`),\n          addressIndex: index\n        });\n\n        dispatchLoginActions({\n          address: loginInfo.address,\n          index,\n          signature: loginInfo.signature.toString('hex')\n        });\n      } catch (err) {\n        onLoginFailed(err, '. Update MultiversX App to continue.');\n      }\n    } else {\n      try {\n        const { address } = await hwProvider.login({ addressIndex: index });\n\n        dispatchLoginActions({\n          address,\n          index\n        });\n      } catch (err) {\n        onLoginFailed(err);\n\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const onConfirmSelectedAddress = async () => {\n    try {\n      setIsLoading(true);\n\n      if (selectedAddress == null) {\n        return false;\n      }\n\n      if (ledgerAccount) {\n        dispatch(updateLedgerAccount(selectedAddress));\n      } else {\n        dispatch(\n          setLedgerAccount({\n            ...selectedAddress,\n            version,\n            hasContractDataEnabled: contractDataEnabled\n          })\n        );\n      }\n\n      setIsLoading(false);\n      await loginUser();\n    } catch (err) {\n      onLoginFailed(err);\n    }\n\n    setShowAddressList(false);\n\n    return true;\n  };\n\n  const fetchAccounts = async () => {\n    const isInitialized = await isHWProviderInitialized();\n\n    if (!isInitialized) {\n      return onLoginFailed(error);\n    }\n\n    try {\n      setIsLoading(true);\n\n      const accounts = await hwProvider.getAccounts(\n        startIndex,\n        addressesPerPage\n      );\n\n      const ledgerData = await getLedgerConfiguration(hwProvider);\n      setVersion(ledgerData.version);\n      setContractDataEnabled(ledgerData.dataEnabled);\n      setAccounts(accounts);\n      setIsLoading(false);\n    } catch (err) {\n      onLoginFailed(err);\n    }\n  };\n\n  const onStartLogin = async () => {\n    if (isLoggedIn) {\n      throw new Error(SECOND_LOGIN_ATTEMPT_ERROR);\n    }\n\n    clearInitiatedLogins();\n    setError('');\n\n    try {\n      setIsLoading(true);\n      const isInitialized = await isHWProviderInitialized();\n\n      if (!isInitialized) {\n        return onLoginFailed(failInitializeErrorText);\n      }\n\n      if (ledgerAccount != null) {\n        if (!selectedAddress) {\n          return onLoginFailed(failInitializeErrorText);\n        }\n\n        const { address } = await hwProvider.login({\n          addressIndex: selectedAddress.index.valueOf()\n        });\n\n        if (!address) {\n          return onLoginFailed('Login cancelled.');\n        }\n\n        dispatch(\n          loginAction({ address, loginMethod: LoginMethodsEnum.ledger })\n        );\n\n        optionalRedirect({\n          callbackRoute,\n          onLoginRedirect\n        });\n      } else {\n        if (!accounts?.length) {\n          await fetchAccounts();\n        }\n\n        setShowAddressList(true);\n      }\n\n      setIsLoading(false);\n    } catch (err) {\n      onLoginFailed(err);\n    }\n  };\n\n  // Need to initialise the HWProvider before starting the login process\n  // and fetch the accounts immediately afterward only once or if the address page changes\n  const initProviderAndAccounts = async () => {\n    try {\n      let isInitialized = await isHWProviderInitialized();\n\n      if (!isInitialized) {\n        await initHWProvider();\n      }\n\n      isInitialized = await isHWProviderInitialized();\n\n      if (!isInitialized) {\n        return onLoginFailed(failInitializeErrorText);\n      }\n\n      if (accounts.length === 0 || startIndex >= 0) {\n        await fetchAccounts();\n      }\n    } catch (err) {\n      onLoginFailed(err);\n    }\n  };\n\n  useEffect(() => {\n    initProviderAndAccounts();\n  }, [startIndex, showAddressList, hwProvider]);\n\n  useEffect(() => {\n    const shouldShowAddressList = accounts?.length > 0 && !showAddressList;\n\n    if (shouldShowAddressList) {\n      setShowAddressList(true);\n    }\n  }, [accounts]);\n\n  const loginFailed = Boolean(error);\n\n  return [\n    onStartLogin,\n    {\n      loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed,\n      error,\n      isLoading: isLoading && !loginFailed\n    },\n    {\n      accounts,\n      showAddressList,\n      startIndex,\n      selectedAddress,\n      version,\n      contractDataEnabled,\n      onGoToPrevPage,\n      onGoToNextPage,\n      onGoToSpecificPage,\n      onSelectAddress,\n      onConfirmSelectedAddress\n    }\n  ];\n};\n", "import { useState } from 'react';\nimport {\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType\n} from '../../types';\n\nconst defaultAddressesPerPage = 10;\n\nexport interface SelectedAddress {\n  address: string;\n  index: number;\n}\n\nexport interface LedgerLoginHookCustomStateType {\n  accounts: string[];\n  showAddressList: boolean;\n  startIndex: number;\n  selectedAddress: SelectedAddress | null;\n  onGoToPrevPage: () => void;\n  onGoToNextPage: () => void;\n  onSelectAddress: (address: SelectedAddress | null) => void;\n  onConfirmSelectedAddress: () => void;\n}\n\nexport type LedgerLoginHookReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType,\n  LedgerLoginHookCustomStateType\n];\n\nexport const useAddressScreens = () => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [startIndex, setStartIndex] = useState(0);\n  const [accounts, setAccounts] = useState<string[]>([]);\n  const [selectedAddress, setSelectedAddress] =\n    useState<SelectedAddress | null>(null);\n\n  const [showAddressList, setShowAddressList] = useState(false);\n\n  const onSelectAddress = (newSelectedAddress: SelectedAddress | null) => {\n    setSelectedAddress(newSelectedAddress);\n  };\n\n  const onGoToNextPage = () => {\n    setSelectedAddress(null);\n    setStartIndex((current) => current + 1);\n  };\n\n  const onGoToSpecificPage = (page: number) => {\n    setSelectedAddress(null);\n    setStartIndex(page);\n  };\n\n  const onGoToPrevPage = () => {\n    setSelectedAddress(null);\n    setStartIndex((current) => (current === 0 ? 0 : current - 1));\n  };\n\n  return {\n    accounts,\n    defaultAddressesPerPage,\n    error,\n    isLoading,\n    onGoToNextPage,\n    onGoToPrevPage,\n    onGoToSpecificPage,\n    onSelectAddress,\n    selectedAddress,\n    setAccounts,\n    setError,\n    setIsLoading,\n    setShowAddressList,\n    showAddressList,\n    startIndex\n  };\n};\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport { xAliasAddressSelector } from 'reduxStore/selectors';\nimport {\n  UseWebWalletLoginPropsType,\n  useWebWalletLogin,\n  UseWebWalletLoginReturnType\n} from './useWebWalletLogin';\n\nexport const useXaliasLogin = (\n  props: UseWebWalletLoginPropsType\n): UseWebWalletLoginReturnType => {\n  const xAliasAddress = useSelector(xAliasAddressSelector);\n  return useWebWalletLogin({\n    ...props,\n    customWalletAddress: props.customWalletAddress ?? xAliasAddress\n  });\n};\n", "import { useEffect, useRef, useState } from 'react';\n\nimport { useGetAccountProvider } from 'hooks/account';\nimport { useUpdateEffect } from 'hooks/useUpdateEffect';\nimport { setAccountProvider } from 'providers/accountProvider';\nimport { emptyProvider, getProviderType } from 'providers/utils';\nimport { loginAction } from 'reduxStore/commonActions';\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport { loginMethodSelector, logoutRouteSelector } from 'reduxStore/selectors';\nimport {\n  walletConnectDeepLinkSelector,\n  walletConnectV2OptionsSelector,\n  walletConnectV2ProjectIdSelector,\n  walletConnectV2RelaySelector\n} from 'reduxStore/selectors/networkConfigSelectors';\nimport { setWalletConnectLogin } from 'reduxStore/slices';\nimport { LoginMethodsEnum } from 'types/enums.types';\nimport { getHasNativeAuth } from 'utils/getHasNativeAuth';\nimport { getIsLoggedIn } from 'utils/getIsLoggedIn';\nimport { optionalRedirect } from 'utils/internal';\nimport { logout } from 'utils/logout';\nimport { waitForChainID } from 'utils/waitForChainID';\nimport {\n  PairingTypes,\n  SessionEventTypes,\n  WalletConnectOptionalMethodsEnum,\n  WalletConnectV2Provider\n} from 'utils/walletconnect/__mocks__/sdkWalletconnectProvider';\nimport { getWindowLocation } from 'utils/window/getWindowLocation';\nimport {\n  LoginHookGenericStateType,\n  OnProviderLoginType\n} from '../../types/login.types';\nimport { clearInitiatedLogins } from './helpers';\nimport { useLoginService } from './useLoginService';\n\nexport enum WalletConnectV2Error {\n  invalidAddress = 'Invalid address',\n  invalidConfig = 'Invalid WalletConnect setup',\n  invalidTopic = 'Expired connection',\n  sessionExpired = 'Unable to connect to existing session',\n  connectError = 'Unable to connect',\n  userRejected = 'User rejected connection proposal',\n  userRejectedExisting = 'User rejected existing connection proposal',\n  errorLogout = 'Unable to remove existing pairing',\n  invalidChainID = 'Invalid chainID'\n}\n\nexport interface InitWalletConnectV2Type extends OnProviderLoginType {\n  logoutRoute?: string;\n  customRequestMethods?: Array<string>;\n}\n\nexport interface WalletConnectV2LoginHookCustomStateType {\n  uriDeepLink: string;\n  cancelLogin: () => Promise<void>;\n  connectExisting: (pairing: PairingTypes.Struct) => Promise<void>;\n  removeExistingPairing: (topic: string) => Promise<void>;\n  walletConnectUri?: string;\n  wcPairings?: PairingTypes.Struct[];\n}\n\nexport type WalletConnectV2LoginHookReturnType = [\n  (loginProvider?: boolean) => Promise<void>,\n  LoginHookGenericStateType,\n  WalletConnectV2LoginHookCustomStateType\n];\n\nexport const useWalletConnectV2Login = ({\n  callbackRoute,\n  token: tokenToSign,\n  nativeAuth,\n  onLoginRedirect,\n  logoutRoute: providerLogoutRoute,\n  customRequestMethods = []\n}: InitWalletConnectV2Type): WalletConnectV2LoginHookReturnType => {\n  const dispatch = useDispatch();\n  const hasNativeAuth = getHasNativeAuth(nativeAuth);\n  const loginService = useLoginService(hasNativeAuth ? nativeAuth : false);\n  let token = tokenToSign;\n\n  const [error, setError] = useState<string>('');\n  const [wcUri, setWcUri] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [wcPairings, setWcPairings] = useState<\n    PairingTypes.Struct[] | undefined\n  >([]);\n  const [sessionProvider, setSessionProvider] =\n    useState<WalletConnectV2Provider | null>(null);\n  const { provider } = useGetAccountProvider();\n  const walletConnectV2RelayAddress = useSelector(walletConnectV2RelaySelector);\n  const walletConnectV2ProjectId = useSelector(\n    walletConnectV2ProjectIdSelector\n  );\n\n  const walletConnectV2Options = useSelector(walletConnectV2OptionsSelector);\n  const walletConnectDeepLink = useSelector(walletConnectDeepLinkSelector);\n  const dappLogoutRoute = useSelector(logoutRouteSelector);\n  const loginMethod = useSelector(loginMethodSelector);\n  const providerRef = useRef<any>(provider);\n  const isInitialisingRef = useRef<boolean>(false);\n  const mounted = useRef(false);\n  const logoutRoute = providerLogoutRoute ?? dappLogoutRoute ?? '/';\n  const dappMethods: string[] = [\n    WalletConnectOptionalMethodsEnum.CANCEL_ACTION,\n    ...customRequestMethods\n  ];\n\n  if (tokenToSign) {\n    dappMethods.push(WalletConnectOptionalMethodsEnum.SIGN_LOGIN_TOKEN);\n  }\n\n  if (hasNativeAuth) {\n    dappMethods.push(WalletConnectOptionalMethodsEnum.SIGN_NATIVE_AUTH_TOKEN);\n  }\n\n  const uriDeepLink = !isLoading\n    ? `${walletConnectDeepLink}?wallet-connect=${encodeURIComponent(wcUri)}`\n    : '';\n\n  const loginFailed = Boolean(error);\n  const isLoggedIn = getIsLoggedIn();\n\n  const handleOnLogout = () => {\n    logout(logoutRoute);\n  };\n\n  const handleOnEvent = (event: SessionEventTypes['event']) => {\n    console.log('WalletConnect Session Event: ', event);\n  };\n\n  const handleOnLogin = async () => {\n    try {\n      if (isInitialisingRef.current || providerRef.current == null) {\n        return;\n      }\n\n      if (!mounted.current) {\n        try {\n          await providerRef.current?.logout();\n        } catch {\n          console.warn('Unable to logout');\n        }\n\n        return;\n      }\n\n      const address = await providerRef.current?.getAddress?.();\n\n      if (!address) {\n        console.warn('Login cancelled.');\n        return;\n      }\n\n      const signature = await providerRef.current?.getSignature();\n      const loginActionData = {\n        address: address,\n        loginMethod: LoginMethodsEnum.walletconnectv2\n      };\n\n      const loginData = {\n        logoutRoute: logoutRoute,\n        loginType: 'walletconnectv2',\n        callbackRoute: callbackRoute ?? getWindowLocation().href\n      };\n\n      dispatch(setWalletConnectLogin(loginData));\n\n      if (signature) {\n        loginService.setTokenLoginInfo({ signature, address });\n      }\n\n      dispatch(loginAction(loginActionData));\n      optionalRedirect({\n        callbackRoute,\n        onLoginRedirect,\n        options: { address, signature }\n      });\n    } catch (err) {\n      setError(WalletConnectV2Error.userRejected);\n      console.error(err);\n    }\n  };\n\n  const cancelLogin = async () => {\n    const providerType = getProviderType(providerRef.current);\n\n    if (providerType !== LoginMethodsEnum.walletconnectv2) {\n      return;\n    }\n\n    try {\n      const connectedSessions =\n        providerRef.current?.walletConnector?.session?.getAll() ?? [];\n\n      if (connectedSessions.length > 0) {\n        await providerRef.current?.logout();\n      }\n\n      providerRef.current = emptyProvider;\n      setSessionProvider(null);\n    } catch {\n      console.warn('Unable to logout');\n    }\n\n    return;\n  };\n\n  const connectExisting = async (pairing: PairingTypes.Struct) => {\n    if (!walletConnectV2RelayAddress || !walletConnectV2ProjectId) {\n      setError(WalletConnectV2Error.invalidConfig);\n      return;\n    }\n\n    if (!pairing || !pairing.topic) {\n      setError(WalletConnectV2Error.invalidTopic);\n      return;\n    }\n\n    try {\n      const providerType = providerRef.current\n        ? getProviderType(providerRef.current)\n        : false;\n\n      if (providerType !== LoginMethodsEnum.walletconnectv2) {\n        // Prevent redirecting to wallet login hook\n        await initiateLogin();\n\n        return;\n      }\n\n      setIsLoading(true);\n      await cancelLogin();\n\n      if (hasNativeAuth && !token) {\n        token = await loginService.getNativeAuthLoginToken();\n        // Fetching block failed\n        if (!token) {\n          console.warn('Fetching block failed. Login cancelled.');\n          return;\n        }\n      }\n\n      if (token) {\n        loginService.setLoginToken(token);\n      }\n\n      await initiateLogin(false);\n\n      const { approval } = await providerRef.current?.connect({\n        topic: pairing.topic,\n        methods: dappMethods\n      });\n\n      try {\n        await providerRef.current?.login({ approval, token });\n      } catch (err) {\n        console.error(WalletConnectV2Error.userRejectedExisting, err);\n        setError(WalletConnectV2Error.userRejectedExisting);\n        setIsLoading(true);\n        await initiateLogin();\n      }\n    } catch (err) {\n      console.error(WalletConnectV2Error.sessionExpired, err);\n      setError(WalletConnectV2Error.sessionExpired);\n    } finally {\n      setWcPairings(providerRef.current?.pairings);\n    }\n  };\n\n  const removeExistingPairing = async (topic: string) => {\n    try {\n      if (topic) {\n        await providerRef.current?.logout({\n          topic\n        });\n      }\n    } catch (err) {\n      console.error(WalletConnectV2Error.errorLogout, err);\n      setError(WalletConnectV2Error.errorLogout);\n    } finally {\n      const newPairings = await providerRef.current?.getPairings();\n      setWcPairings(newPairings);\n    }\n  };\n\n  async function initiateLogin(loginProvider = true) {\n    clearInitiatedLogins();\n\n    const chainId = await waitForChainID({ maxRetries: 15 });\n\n    if (!chainId) {\n      console.error(WalletConnectV2Error.invalidChainID);\n      setError(WalletConnectV2Error.invalidChainID);\n      return;\n    }\n\n    if (!walletConnectV2ProjectId || !walletConnectV2RelayAddress) {\n      console.error(WalletConnectV2Error.invalidConfig);\n      setError(WalletConnectV2Error.invalidConfig);\n      return;\n    }\n\n    const isLoggedIn = getIsLoggedIn();\n    const cannotLogin = mounted.current === false && !isLoggedIn;\n    const isInitialized = providerRef.current?.isInitialized?.();\n\n    if (isInitialisingRef.current || cannotLogin || isInitialized) {\n      return;\n    }\n\n    isInitialisingRef.current = true;\n\n    if (providerRef.current?.walletConnector) {\n      await providerRef.current.init();\n\n      setSessionProvider(providerRef.current);\n\n      isInitialisingRef.current = false;\n\n      if (loginProvider) {\n        await generateWcUri();\n      }\n\n      return;\n    }\n\n    const providerHandlers = {\n      onClientLogin: handleOnLogin,\n      onClientLogout: handleOnLogout,\n      onClientEvent: handleOnEvent\n    };\n\n    const newProvider = new WalletConnectV2Provider(\n      providerHandlers,\n      chainId,\n      walletConnectV2RelayAddress,\n      walletConnectV2ProjectId,\n      walletConnectV2Options\n    );\n\n    await newProvider.init();\n    setSessionProvider(newProvider);\n    providerRef.current = newProvider;\n    isInitialisingRef.current = false;\n\n    if (loginProvider) {\n      setWcPairings(newProvider.pairings);\n      await generateWcUri();\n    }\n\n    return;\n  }\n\n  async function generateWcUri() {\n    if (!providerRef.current) {\n      return;\n    }\n\n    if (!walletConnectV2RelayAddress || !walletConnectV2ProjectId) {\n      setError(WalletConnectV2Error.invalidConfig);\n      return;\n    }\n\n    try {\n      // Do not do any other actions if component is not mounted\n      if (!mounted.current) {\n        return;\n      }\n\n      const { uri, approval } = await providerRef.current?.connect({\n        methods: dappMethods\n      });\n\n      const hasUri = Boolean(uri);\n\n      if (!hasUri) {\n        return;\n      }\n\n      setWcUri(uri);\n\n      if (walletConnectV2Options?.logger === 'debug') {\n        console.log('WalletConnect uri: ', uri);\n      }\n\n      if (hasNativeAuth && !token) {\n        token = await loginService.getNativeAuthLoginToken();\n        // Fetching block failed\n        if (!token) {\n          console.warn('Fetching block failed. Login cancelled.');\n          return;\n        }\n      }\n\n      if (token) {\n        loginService.setLoginToken(token);\n      }\n\n      const providerType = providerRef.current\n        ? getProviderType(providerRef.current)\n        : false;\n\n      if (providerType !== LoginMethodsEnum.walletconnectv2) {\n        // Prevent redirecting to wallet login hook\n        setIsLoading(true);\n        await initiateLogin();\n        return;\n      }\n\n      try {\n        await providerRef.current?.login({ approval, token });\n      } catch (err) {\n        console.error(WalletConnectV2Error.userRejected, err);\n        setError(WalletConnectV2Error.userRejected);\n        setIsLoading(true);\n      }\n    } catch (err) {\n      console.error(WalletConnectV2Error.connectError, err);\n    }\n  }\n\n  useUpdateEffect(() => {\n    providerRef.current = provider;\n  }, [provider]);\n\n  useEffect(() => {\n    mounted.current = true;\n\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(!wcUri);\n  }, [wcUri]);\n\n  useEffect(() => {\n    if (!sessionProvider) {\n      return;\n    }\n\n    // Check if a new session has been created is already connected\n    const isConnected =\n      Boolean(sessionProvider.session) ||\n      loginMethod === LoginMethodsEnum.walletconnectv2;\n\n    // Set new provider only if account is logged in and if walletConnect session is available\n    if (isConnected && isLoggedIn) {\n      setAccountProvider(sessionProvider);\n    }\n  }, [sessionProvider, isLoggedIn]);\n\n  return [\n    initiateLogin,\n    {\n      error,\n      loginFailed,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    },\n    {\n      uriDeepLink,\n      walletConnectUri: wcUri,\n      cancelLogin,\n      connectExisting,\n      removeExistingPairing,\n      wcPairings\n    }\n  ];\n};\n", "import { useState } from 'react';\n\nimport { MetamaskProvider } from '@multiversx/sdk-metamask-provider/out/metamaskProvider';\nimport { SECOND_LOGIN_ATTEMPT_ERROR } from 'constants/errorsMessages';\nimport { setAccountProvider } from 'providers/accountProvider';\nimport { loginAction } from 'reduxStore/commonActions';\nimport { useDispatch } from 'reduxStore/DappProviderContext';\nimport {\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType,\n  OnProviderLoginType\n} from 'types';\nimport { LoginMethodsEnum } from 'types/enums.types';\nimport { getIsLoggedIn } from 'utils/getIsLoggedIn';\nimport { optionalRedirect } from 'utils/internal';\nimport { addOriginToLocationPath } from 'utils/window';\nimport { getDefaultCallbackUrl } from 'utils/window';\nimport { clearInitiatedLogins } from './helpers';\nimport { useLoginService } from './useLoginService';\n\nexport type UseMetamaskLoginReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType\n];\n\nexport const useMetamaskLogin = ({\n  callbackRoute,\n  token: tokenToSign,\n  nativeAuth,\n  onLoginRedirect\n}: OnProviderLoginType): UseMetamaskLoginReturnType => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const hasNativeAuth = nativeAuth != null;\n  const loginService = useLoginService(nativeAuth);\n  let token = tokenToSign;\n\n  const dispatch = useDispatch();\n  const isLoggedIn = getIsLoggedIn();\n\n  async function initiateLogin() {\n    if (isLoggedIn) {\n      throw new Error(SECOND_LOGIN_ATTEMPT_ERROR);\n    }\n\n    clearInitiatedLogins();\n\n    setIsLoading(true);\n    const provider: MetamaskProvider = MetamaskProvider.getInstance();\n\n    try {\n      const isSuccessfullyInitialized: boolean = await provider.init();\n\n      if (!isSuccessfullyInitialized) {\n        console.warn(\n          'Something went wrong trying to redirect to wallet login..'\n        );\n        return;\n      }\n\n      const defaultCallbackUrl = getDefaultCallbackUrl();\n      const callbackUrl: string = encodeURIComponent(\n        addOriginToLocationPath(callbackRoute ?? defaultCallbackUrl)\n      );\n\n      if (hasNativeAuth && !token) {\n        token = await loginService.getNativeAuthLoginToken();\n\n        // Fetching block failed\n        if (!token) {\n          console.warn('Fetching block failed. Login cancelled.');\n          return;\n        }\n      }\n\n      if (token) {\n        loginService.setLoginToken(token);\n      }\n\n      const providerLoginData = {\n        callbackUrl,\n        ...(token && { token })\n      };\n\n      await provider.login(providerLoginData);\n\n      setAccountProvider(provider);\n\n      const { signature, address } = provider.account;\n\n      if (!address) {\n        setIsLoading(false);\n        console.warn('Login cancelled.');\n        setError('Login cancelled');\n        return;\n      }\n\n      if (signature && token) {\n        loginService.setTokenLoginInfo({\n          signature,\n          address\n        });\n      }\n\n      dispatch(\n        loginAction({ address, loginMethod: LoginMethodsEnum.metamask })\n      );\n\n      optionalRedirect({\n        callbackRoute,\n        onLoginRedirect,\n        options: { signature, address }\n      });\n    } catch (error) {\n      console.error('error logging in', error);\n      // TODO: can be any or typed error\n      setError('error logging in' + (error as any).message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const loginFailed = Boolean(error);\n\n  return [\n    initiateLogin,\n    {\n      loginFailed,\n      error,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    }\n  ];\n};\n", "import { useState } from 'react';\nimport { PasskeyProvider } from '@multiversx/sdk-passkey-provider/out';\nimport { SECOND_LOGIN_ATTEMPT_ERROR } from 'constants/errorsMessages';\nimport { setAccountProvider } from 'providers/accountProvider';\nimport { loginAction } from 'reduxStore/commonActions';\nimport { useDispatch } from 'reduxStore/DappProviderContext';\nimport {\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType,\n  OnProviderLoginType\n} from 'types';\nimport { LoginMethodsEnum } from 'types/enums.types';\nimport { getIsLoggedIn } from 'utils/getIsLoggedIn';\nimport { optionalRedirect } from 'utils/internal';\nimport { addOriginToLocationPath } from 'utils/window';\nimport { getDefaultCallbackUrl } from 'utils/window';\nimport { clearInitiatedLogins } from './helpers';\nimport { useLoginService } from './useLoginService';\n\ntype CreateAccountFunctionType = (\n  walletName: string\n) => Promise<{ address: string }>;\n\nexport type UsePasskeyLoginReturnType = [\n  InitiateLoginFunctionType,\n  CreateAccountFunctionType,\n  LoginHookGenericStateType\n];\n\nexport const usePasskeyLogin = ({\n  callbackRoute,\n  token: tokenToSign,\n  nativeAuth,\n  onLoginRedirect\n}: OnProviderLoginType): UsePasskeyLoginReturnType => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const hasNativeAuth = nativeAuth != null;\n  const loginService = useLoginService(nativeAuth);\n  let token = tokenToSign;\n\n  const dispatch = useDispatch();\n  const isLoggedIn = getIsLoggedIn();\n\n  async function initiateLogin() {\n    if (isLoggedIn) {\n      throw new Error(SECOND_LOGIN_ATTEMPT_ERROR);\n    }\n\n    clearInitiatedLogins();\n\n    setIsLoading(true);\n    const provider: PasskeyProvider = PasskeyProvider.getInstance();\n\n    try {\n      const isSuccessfullyInitialized: boolean = await provider.init();\n\n      if (!isSuccessfullyInitialized) {\n        console.warn(\n          'Something went wrong trying to redirect to wallet login..'\n        );\n        return;\n      }\n\n      const defaultCallbackUrl = getDefaultCallbackUrl();\n      const callbackUrl: string = encodeURIComponent(\n        addOriginToLocationPath(callbackRoute ?? defaultCallbackUrl)\n      );\n\n      if (hasNativeAuth && !token) {\n        token = await loginService.getNativeAuthLoginToken();\n\n        // Fetching block failed\n        if (!token) {\n          console.warn('Fetching block failed. Login cancelled.');\n          return;\n        }\n      }\n\n      if (token) {\n        loginService.setLoginToken(token);\n      }\n\n      const providerLoginData = {\n        callbackUrl,\n        ...(token && { token })\n      };\n\n      await provider.login(providerLoginData);\n\n      setAccountProvider(provider);\n\n      const { signature, address } = provider.account;\n\n      if (!address) {\n        setIsLoading(false);\n        console.warn('Login cancelled.');\n        setError('Login cancelled');\n        return;\n      }\n\n      if (signature && token) {\n        loginService.setTokenLoginInfo({\n          signature,\n          address\n        });\n      }\n\n      dispatch(loginAction({ address, loginMethod: LoginMethodsEnum.passkey }));\n\n      optionalRedirect({\n        callbackRoute,\n        onLoginRedirect,\n        options: { signature, address }\n      });\n    } catch (error) {\n      console.error('error logging in', error);\n      // TODO: can be any or typed error\n      setError('Error logging in: ' + (error as any).message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const createAccount = async (walletName: string) => {\n    const provider: PasskeyProvider = PasskeyProvider.getInstance();\n    await provider.init();\n    return await provider.createAccount({\n      walletName\n    });\n  };\n\n  const loginFailed = Boolean(error);\n\n  return [\n    initiateLogin,\n    createAccount,\n    {\n      loginFailed,\n      error,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    }\n  ];\n};\n", "export * from './useGetWebsocketUrl';\nexport * from './useRegisterWebsocketListener';\n", "import { useEffect, useState } from 'react';\n\nimport { getWebsocketUrl } from 'utils/websocket/getWebsocketUrl';\n\nexport function useGetWebsocketUrl(apiAddress: string) {\n  const [url, setUrl] = useState<string>();\n  const [error, setError] = useState<unknown>();\n\n  async function getUrl() {\n    try {\n      const fetchedUrl = await getWebsocketUrl(apiAddress);\n      setUrl(fetchedUrl);\n    } catch (err) {\n      setError(err);\n    }\n  }\n\n  useEffect(() => {\n    getUrl();\n  }, []);\n\n  return { data: url, error, getUrl };\n}\n", "import { useEffect } from 'react';\nimport { BatchTransactionsWSResponseType } from 'types';\nimport { useGetBatchWebsocketEvent, useGetWebsocketEvent } from '../account';\nimport { useInitializeWebsocketConnection } from './useInitializeWebsocketConnection';\n\nexport function useRegisterWebsocketListener(\n  onMessage: (message: string) => void,\n  onBatchMessage?: (data: BatchTransactionsWSResponseType) => void\n) {\n  useInitializeWebsocketConnection();\n  const websocketEvent = useGetWebsocketEvent();\n  const websocketBatchEvent = useGetBatchWebsocketEvent();\n\n  useEffect(() => {\n    const message = websocketEvent?.message;\n\n    if (message) {\n      onMessage(message);\n    }\n  }, [onMessage, websocketEvent]);\n\n  useEffect(() => {\n    const data = websocketBatchEvent?.data;\n\n    if (data) {\n      onBatchMessage?.(data);\n    }\n  }, [onBatchMessage, websocketBatchEvent]);\n}\n", "import { useCallback, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { useGetAccount } from 'hooks/account/useGetAccount';\nimport { useDispatch } from 'reduxStore/DappProviderContext';\nimport { setWebsocketBatchEvent, setWebsocketEvent } from 'reduxStore/slices';\nimport { BatchTransactionsWSResponseType } from 'types';\nimport { retryMultipleTimes } from 'utils/retryMultipleTimes';\nimport { getWebsocketUrl } from 'utils/websocket/getWebsocketUrl';\nimport { useGetNetworkConfig } from '../useGetNetworkConfig';\nimport {\n  websocketConnection,\n  WebsocketConnectionStatusEnum\n} from './websocketConnection';\n\nconst TIMEOUT = 3000;\nconst RECONNECTION_ATTEMPTS = 3;\nconst RETRY_INTERVAL = 500;\nconst MESSAGE_DELAY = 1000;\nconst BATCH_UPDATED_EVENT = 'batchUpdated';\nconst CONNECT = 'connect';\nconst DISCONNECT = 'disconnect';\n\nexport function useInitializeWebsocketConnection() {\n  const messageTimeout = useRef<NodeJS.Timeout | null>(null);\n  const batchTimeout = useRef<NodeJS.Timeout | null>(null);\n  const { address } = useGetAccount();\n  const dispatch = useDispatch();\n  const { network } = useGetNetworkConfig();\n\n  const handleMessageReceived = (message: string) => {\n    if (messageTimeout.current) {\n      clearTimeout(messageTimeout.current);\n    }\n\n    messageTimeout.current = setTimeout(() => {\n      dispatch(setWebsocketEvent(message));\n    }, MESSAGE_DELAY);\n  };\n\n  const handleBatchUpdate = (data: BatchTransactionsWSResponseType) => {\n    if (batchTimeout.current) {\n      clearTimeout(batchTimeout.current);\n    }\n\n    batchTimeout.current = setTimeout(() => {\n      dispatch(setWebsocketBatchEvent(data));\n    }, MESSAGE_DELAY);\n  };\n\n  const unsubscribeWS = () => {\n    websocketConnection.current?.close();\n    websocketConnection.current = null;\n    websocketConnection.status = WebsocketConnectionStatusEnum.NOT_INITIALIZED;\n\n    if (messageTimeout.current) {\n      clearTimeout(messageTimeout.current);\n    }\n  };\n\n  const initializeWebsocketConnection = useCallback(\n    retryMultipleTimes(\n      async () => {\n        if (!address) {\n          return;\n        }\n\n        // If there are many components that use this hook, the initialize method is triggered many times.\n        // To avoid multiple connections to the same endpoint, we have to guard the initialization before the logic started\n        websocketConnection.status = WebsocketConnectionStatusEnum.PENDING;\n\n        const websocketUrl =\n          network.websocketUrl ?? (await getWebsocketUrl(network.apiAddress));\n\n        if (websocketUrl == null) {\n          console.warn('Can not get websocket url');\n          return;\n        }\n\n        websocketConnection.current = io(websocketUrl, {\n          forceNew: true,\n          reconnectionAttempts: RECONNECTION_ATTEMPTS,\n          timeout: TIMEOUT,\n          query: {\n            address\n          }\n        });\n\n        websocketConnection.status = WebsocketConnectionStatusEnum.COMPLETED;\n\n        websocketConnection.current.onAny(handleMessageReceived);\n\n        websocketConnection.current.on(BATCH_UPDATED_EVENT, handleBatchUpdate);\n\n        websocketConnection.current.on(CONNECT, () => {\n          console.log('Websocket connected.');\n        });\n\n        websocketConnection.current.on(DISCONNECT, () => {\n          if (address) {\n            // Make sure we are still logged in before retrying to connect to the websocket\n            console.warn('Websocket disconnected. Trying to reconnect...');\n\n            setTimeout(() => {\n              if (address) {\n                // Make sure we are still logged in when the timeout is finished\n                console.log('Websocket reconnecting...');\n                websocketConnection.current?.connect();\n              }\n            }, RETRY_INTERVAL);\n          }\n        });\n      },\n      {\n        retries: 2,\n        delay: RETRY_INTERVAL\n      }\n    ),\n    [address]\n  );\n\n  useEffect(() => {\n    if (\n      address &&\n      websocketConnection.status ===\n        WebsocketConnectionStatusEnum.NOT_INITIALIZED &&\n      !websocketConnection.current?.active\n    ) {\n      initializeWebsocketConnection();\n      return;\n    }\n\n    if (!address) {\n      // Close the websocket connection when we are not logged in\n      unsubscribeWS();\n    }\n  }, [address, initializeWebsocketConnection]);\n\n  useEffect(() => {\n    return () => {\n      unsubscribeWS();\n    };\n  }, []);\n}\n", "import { Socket } from 'socket.io-client';\n\nexport enum WebsocketConnectionStatusEnum {\n  NOT_INITIALIZED = 'not_initialized',\n  PENDING = 'pending',\n  COMPLETED = 'completed'\n}\n\nexport const websocketConnection: {\n  current: Socket | null;\n  // Use the connection status to avoid multiple websocket connections\n  status: WebsocketConnectionStatusEnum;\n} = {\n  current: null,\n  status: WebsocketConnectionStatusEnum.NOT_INITIALIZED\n};\n", "export { useTransactionsToasts } from './useTransactionsToasts';\nexport { useGetToasts } from './useGetToasts';\n", "import { useMemo } from 'react';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport {\n  transactionsInfoSelectors,\n  transactionToastsSelector\n} from 'reduxStore/selectors';\nimport { TransactionBatchStatusesEnum } from 'types';\nimport { useGetSignedTransactions } from '../transactions';\n\nexport const useTransactionsToasts = () => {\n  const transactionsToasts = useSelector(transactionToastsSelector);\n  const transactionsInfo = useSelector(transactionsInfoSelectors);\n  const { signedTransactions } = useGetSignedTransactions();\n\n  const transactionsToastsInfo = useMemo(() => {\n    return transactionsToasts.map((toast) => {\n      const status = signedTransactions[toast.toastId]?.status;\n\n      return {\n        sessionId: toast.toastId,\n        baseTransactionsInfo: transactionsInfo[toast.toastId] ?? {},\n        customTransactionsInfo:\n          signedTransactions[toast.toastId]?.customTransactionInformation\n            ?.sessionInformation ?? {},\n        status,\n        isPending:\n          status !== TransactionBatchStatusesEnum.success &&\n          status !== TransactionBatchStatusesEnum.fail &&\n          status !== TransactionBatchStatusesEnum.cancelled\n      };\n    });\n  }, [transactionsToasts, signedTransactions, transactionsInfo]);\n\n  const pendingTransactionsToastsInfo = useMemo(() => {\n    return transactionsToastsInfo.filter((toast) => toast.isPending);\n  }, [transactionsToastsInfo]);\n\n  return {\n    transactionsToastsInfo,\n    pendingTransactionsToastsInfo\n  };\n};\n", "import { useSelector } from 'reduxStore/DappProviderContext';\nimport {\n  customToastsSelector,\n  transactionToastsSelector\n} from 'reduxStore/selectors';\n\nexport const useGetToasts = () => {\n  const customToasts = useSelector(customToastsSelector);\n  const transactionToasts = useSelector(transactionToastsSelector);\n\n  return {\n    customToasts,\n    transactionToasts\n  };\n};\n", "export * from './useGetEgldPrice';\n", "import useSwr from 'swr';\n\nimport { getEconomics } from 'apiCalls';\nimport { ECONOMICS_ENDPOINT } from 'apiCalls/endpoints';\n\nexport function useGetEgldPrice() {\n  const fetcher = (url: string) =>\n    getEconomics(url).then((response) => response.data);\n\n  const { data, error } = useSwr(ECONOMICS_ENDPOINT, fetcher);\n\n  return {\n    price: data?.price,\n    error\n  };\n}\n", "export * from './transactions';\nexport * from './accounts';\nexport * from './configuration';\nexport * from './economics';\nexport * from './utils';\nexport * from './endpoints';\n", "export * from './getAccountFromApi';\nexport * from './useGetAccountFromApi';\n", "export * from './getEconomicsInfo';\nexport * from './useGetEconomicsInfoFromApi';\n", "import axios from 'axios';\nimport { ECONOMICS_ENDPOINT } from 'apiCalls/endpoints';\nimport { getCleanApiAddress } from 'apiCalls/utils/getCleanApiAddress';\n\nexport interface EconomicsInfoType {\n  totalSupply: number;\n  circulatingSupply: number;\n  staked: number;\n  price: number;\n  marketCap: number;\n  apr: number;\n  topUpApr: number;\n}\n\nexport function getEconomics(url = ECONOMICS_ENDPOINT) {\n  const apiAddress = getCleanApiAddress();\n  const configUrl = `${apiAddress}/${url}`;\n\n  return axios.get<EconomicsInfoType>(configUrl);\n}\n\nexport async function getEconomicsInfo() {\n  try {\n    const { data } = await getEconomics();\n    return data;\n  } catch (err) {\n    console.error('err fetching economics info', err);\n    return null;\n  }\n}\n", "import { ECONOMICS_ENDPOINT } from '../endpoints';\nimport { useApiFetch } from '../utils';\n\nexport const useGetEconomicsInfoFromApi = () =>\n  useApiFetch({ apiEndpoint: ECONOMICS_ENDPOINT });\n", "import React, { useEffect, useMemo } from 'react';\nimport { faWarning } from '@fortawesome/free-solid-svg-icons';\nimport { StatusMessageComponent } from 'components/TransactionStatusToast/StatusMessageComponent';\nimport { StatusIconType } from 'components/TransactionStatusToast/transactionStatusToast.types';\nimport {\n  CANCEL_TRANSACTION_TOAST_DEFAULT_DURATION,\n  CANCEL_TRANSACTION_TOAST_ID,\n  DEFAULT_TRANSACTION_STATUS_MESSAGE\n} from 'constants/index';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport { dappConfigSelector } from 'reduxStore/selectors';\nimport { addNewCustomToast } from 'utils/toasts/customToastsActions';\nimport { WithClassnameType } from '../../types';\n\n// TODO: Rename to \"TransactionStatusToastPropsType\" when sdk-dapp@3.0.0\nexport interface TransactionStatusToastType extends WithClassnameType {\n  signError: string | null;\n  canceledTransactionsMessage: string | null;\n  onDelete?: () => void;\n}\n\nexport const TransactionStatusToast = ({\n  signError,\n  canceledTransactionsMessage,\n  onDelete\n}: TransactionStatusToastType) => {\n  const dappConfig = useSelector(dappConfigSelector);\n\n  const message = useMemo(() => {\n    return (\n      signError ||\n      canceledTransactionsMessage ||\n      DEFAULT_TRANSACTION_STATUS_MESSAGE\n    );\n  }, [signError, canceledTransactionsMessage]);\n\n  const type = useMemo(() => {\n    if (signError) {\n      return StatusIconType.ERROR;\n    } else if (canceledTransactionsMessage) {\n      return StatusIconType.WARNING;\n    }\n\n    return StatusIconType.INFO;\n  }, [signError, canceledTransactionsMessage]);\n\n  useEffect(() => {\n    addNewCustomToast({\n      toastId: `${CANCEL_TRANSACTION_TOAST_ID}-${Date.now()}`,\n      title: 'Transaction canceled',\n      duration:\n        dappConfig.cancelTransactionToastDuration ??\n        CANCEL_TRANSACTION_TOAST_DEFAULT_DURATION,\n      component: () => <StatusMessageComponent type={type} message={message} />,\n      onClose: () => onDelete?.(),\n      icon: faWarning\n    });\n  }, []);\n\n  return null;\n};\n", "import React from 'react';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { StatusIcon } from './StatusIcon';\nimport { StatusIconType } from './transactionStatusToast.types';\n\nexport interface StatusMessageComponentPropsType {\n  type: StatusIconType;\n  message?: string;\n}\n\nconst StatusMessage = ({\n  type,\n  message,\n  styles\n}: StatusMessageComponentPropsType & WithStylesImportType) => (\n  <div className={styles?.transactionsStatusToastContent}>\n    <StatusIcon type={type} />\n    {message}\n  </div>\n);\n\nexport const StatusMessageComponent = withStyles(StatusMessage, {\n  ssrStyles: () =>\n    import(\n      'components/TransactionStatusToast/transactionStatusToastStyles.scss'\n    ),\n  clientStyles: () =>\n    require('components/TransactionStatusToast/transactionStatusToastStyles.scss')\n      .default\n});\n", "import React from 'react';\nimport { faInfo, faTimes, faWarning } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { StatusIconType } from './transactionStatusToast.types';\n\nexport interface StatusIconPropsType {\n  type: StatusIconType;\n}\n\nconst StatusIconComponent = ({\n  type,\n  globalStyles,\n  styles\n}: StatusIconPropsType & WithStylesImportType) => {\n  switch (type) {\n    case StatusIconType.INFO:\n      return (\n        <div\n          className={classNames(\n            styles?.transactionsStatusToastIcon,\n            globalStyles?.success\n          )}\n        >\n          <FontAwesomeIcon icon={faInfo} className={styles?.svg} size='5x' />\n        </div>\n      );\n\n    case StatusIconType.WARNING:\n      return (\n        <div\n          className={classNames(\n            styles?.transactionsStatusToastIcon,\n            globalStyles?.warning,\n            styles?.warningIcon\n          )}\n        >\n          <FontAwesomeIcon icon={faWarning} className={styles?.svg} size='5x' />\n        </div>\n      );\n\n    case StatusIconType.ERROR:\n      return (\n        <div\n          className={classNames(\n            styles?.transactionsStatusToastIcon,\n            globalStyles?.danger,\n            styles?.errorIcon\n          )}\n        >\n          <FontAwesomeIcon icon={faTimes} className={styles?.svg} size='5x' />\n        </div>\n      );\n    default:\n      return null;\n  }\n};\n\nexport const StatusIcon = withStyles(StatusIconComponent, {\n  ssrStyles: () =>\n    import(\n      'components/TransactionStatusToast/transactionStatusToastStyles.scss'\n    ),\n  clientStyles: () =>\n    require('components/TransactionStatusToast/transactionStatusToastStyles.scss')\n      .default\n});\n", "export enum StatusIconType {\n  INFO = 'info',\n  ERROR = 'error',\n  WARNING = 'warning'\n}\n", "import React from 'react';\nimport {\n  useGetAccount,\n  useGetAccountProvider,\n  useGetSignTransactionsError,\n  useSignTransactionsCommonData\n} from 'hooks';\nimport { SignPropsType } from 'UI/SignTransactionsModals/types/signTransactionsModals.types';\nimport { getDefaultCallbackUrl } from 'utils/window';\nimport { ExtraConfirmationScreenPropsType } from './confirmationScreen.types';\nimport {\n  TransactionStatusToast,\n  TransactionStatusToastType\n} from './TransactionStatusToast';\n\nexport const DeviceConfirmationScreen = ({\n  Screen,\n  GuardianScreen,\n  verifyReceiverScam,\n  className\n}: ExtraConfirmationScreenPropsType) => {\n  if (!Screen) {\n    return null;\n  }\n\n  const {\n    transactionsToSign,\n    error,\n    hasTransactions,\n    onAbort,\n    canceledTransactionsMessage\n  } = useSignTransactionsCommonData();\n\n  const signTransactionsError = useGetSignTransactionsError();\n  const { providerType } = useGetAccountProvider();\n  const { isGuarded } = useGetAccount();\n\n  const handleClose = () => {\n    onAbort(transactionsToSign?.sessionId);\n  };\n\n  const signError = error || signTransactionsError;\n\n  const signProps: SignPropsType = {\n    handleClose,\n    GuardianScreen,\n    isGuarded,\n    error: signError,\n    sessionId: transactionsToSign?.sessionId,\n    transactions: transactionsToSign?.transactions ?? [],\n    providerType,\n    callbackRoute: transactionsToSign?.callbackRoute || getDefaultCallbackUrl(),\n    className,\n    verifyReceiverScam\n  };\n\n  const transactionStatusToastProps: TransactionStatusToastType = {\n    signError,\n    canceledTransactionsMessage,\n    onDelete: handleClose\n  };\n\n  const shouldShowTransactionStatusToast =\n    Boolean(signError) || Boolean(canceledTransactionsMessage);\n\n  if (!shouldShowTransactionStatusToast && !hasTransactions) {\n    return null;\n  }\n\n  return shouldShowTransactionStatusToast ? (\n    <TransactionStatusToast {...transactionStatusToastProps} />\n  ) : (\n    <Screen {...signProps} />\n  );\n};\n", "import { SignPropsType } from '../types/signTransactionsModals.types';\n\nexport interface ExtraConfirmationScreenPropsType {\n  Screen?: (signProps: SignPropsType) => JSX.Element;\n  GuardianScreen?: SignPropsType['GuardianScreen'];\n  verifyReceiverScam?: boolean;\n  className?: string;\n}\n", "export * from './SignWaitingScreenModal';\n", "import React, { MouseEvent } from 'react';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport classNames from 'classnames';\nimport { DataTestIdsEnum } from 'constants/index';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { useClearTransactionsToSignWithWarning } from 'hooks/transactions/helpers/useClearTransactionsToSignWithWarning';\nimport { SignModalPropsType } from 'types';\nimport { ModalContainer } from 'UI/ModalContainer/ModalContainer';\nimport { PageState } from 'UI/PageState';\n\nexport interface SignWaitingScreenModalPropsType extends SignModalPropsType {\n  title: string;\n  description: string;\n}\n\nconst SignWaitingScreenModalComponent = ({\n  handleClose,\n  error,\n  title,\n  description,\n  sessionId,\n  className = 'dapp-extension-modal',\n  modalContentClassName,\n  globalStyles,\n  styles\n}: SignWaitingScreenModalPropsType & WithStylesImportType) => {\n  const clearTransactionsToSignWithWarning =\n    useClearTransactionsToSignWithWarning();\n\n  const classes = {\n    wrapper: classNames(styles?.modalContainer, styles?.extension, className),\n    icon: globalStyles?.textWhite,\n    closeBtn: classNames(\n      globalStyles?.btn,\n      globalStyles?.btnCloseLink,\n      globalStyles?.btnDark,\n      globalStyles?.textWhite,\n      globalStyles?.mt2\n    )\n  };\n\n  const close = (event: MouseEvent) => {\n    event.preventDefault();\n    handleClose();\n    clearTransactionsToSignWithWarning(sessionId);\n  };\n\n  return (\n    <ModalContainer\n      onClose={handleClose}\n      modalConfig={{\n        modalDialogClassName: classes.wrapper\n      }}\n      visible\n    >\n      <PageState\n        icon={error ? faTimes : null}\n        iconClass={classes.icon}\n        className={modalContentClassName}\n        iconBgClass={error ? globalStyles?.bgDanger : globalStyles?.bgWarning}\n        iconSize='3x'\n        title={title}\n        description={description}\n        action={\n          <button\n            id='closeButton'\n            data-testid={DataTestIdsEnum.closeButton}\n            onClick={close}\n            className={classes.closeBtn}\n          >\n            Close\n          </button>\n        }\n      />\n    </ModalContainer>\n  );\n};\n\nexport const SignWaitingScreenModal = withStyles(\n  SignWaitingScreenModalComponent,\n  {\n    ssrStyles: () =>\n      import(\n        'UI/SignTransactionsModals/components/SignWaitingScreenModal/signWaitingScreenModal.styles.scss'\n      ),\n    clientStyles: () =>\n      require('UI/SignTransactionsModals/components/SignWaitingScreenModal/signWaitingScreenModal.styles.scss')\n        .default\n  }\n);\n", "import React, { ReactNode } from 'react';\nimport {\n  DappModal,\n  DappModalConfig,\n  DappModalInteractionConfig,\n  useDappModal\n} from 'UI/DappModal';\nimport { WithClassnameType } from '../types';\n\nexport interface ModalContainerPropsType extends WithClassnameType {\n  children: ReactNode;\n  closeOnEscape?: boolean;\n  modalConfig?: DappModalConfig;\n  modalInteractionConfig?: DappModalInteractionConfig;\n  onClose?: () => void;\n  visible?: boolean;\n}\n\nexport const ModalContainer = (props: ModalContainerPropsType) => {\n  const { showModal } = useDappModal({ visible: props.visible });\n\n  const hideModalHandler = () => {\n    props.onClose?.();\n  };\n\n  return (\n    <DappModal\n      className={props.className}\n      closeOnEscape={props.closeOnEscape}\n      config={props.modalConfig}\n      onHide={hideModalHandler}\n      visible={showModal}\n    >\n      {props.children}\n    </DappModal>\n  );\n};\n", "export * from './PageState';\n", "import React, { ReactNode, useMemo } from 'react';\nimport { IconProp, SizeProp } from '@fortawesome/fontawesome-svg-core';\nimport { IconDefinition } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { WithClassnameType } from '../types';\n\n// TODO: Rename to \"PageStatePropsType\" when sdk-dapp@3.0.0\nexport interface PageStateProps extends WithClassnameType {\n  title?: ReactNode;\n  icon?: IconProp | IconDefinition | null;\n  iconClass?: string;\n  iconSize?: SizeProp;\n  iconBgClass?: string;\n  action?: ReactNode;\n  description?: string | ReactNode;\n}\n\nconst PageStateComponent = ({\n  icon,\n  title,\n  action,\n  iconClass,\n  'data-testid': dataTestId,\n  description,\n  iconBgClass,\n  iconSize = '5x',\n  className = 'dapp-page-state',\n  globalStyles,\n  styles\n}: PageStateProps & WithStylesImportType) => {\n  const classes = useMemo(\n    () => ({\n      wrapper: classNames(\n        styles?.state,\n        globalStyles?.mAuto,\n        globalStyles?.p4,\n        globalStyles?.textCenter,\n        className\n      ),\n      iconContainer: classNames(globalStyles?.iconState, globalStyles?.mxAuto, {\n        [iconBgClass ?? '']: Boolean(iconBgClass)\n      }),\n      iconClass: classNames(iconClass != null && iconClass),\n      title: classNames(globalStyles?.h4, globalStyles?.my4),\n      description: globalStyles?.mb3\n    }),\n    [globalStyles, styles, className, iconBgClass, iconClass]\n  );\n\n  return (\n    <div className={classes.wrapper} data-testid={dataTestId}>\n      {icon && (\n        <span className={classes.iconContainer}>\n          <FontAwesomeIcon\n            icon={icon}\n            className={classes.iconClass}\n            size={iconSize}\n          />\n        </span>\n      )}\n\n      {title && <p className={classes.title}>{title}</p>}\n\n      {description && <div className={classes.description}>{description}</div>}\n\n      {action}\n    </div>\n  );\n};\n\nexport const PageState = withStyles(PageStateComponent, {\n  ssrStyles: () => import('UI/PageState/pageState.styles.scss'),\n  clientStyles: () => require('UI/PageState/pageState.styles.scss').default\n});\n"],
  "mappings": "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",
  "names": []
}
