{
  "version": 3,
  "sources": ["../../src/UI/ledger/LedgerLoginContainer/LedgerLoginContainer.tsx"],
  "sourcesContent": ["import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { ModalContainer } from 'UI/ModalContainer';\nimport { OnProviderLoginType } from '../../../types';\nimport { WithClassnameType } from '../../types';\nimport { LedgerLoginContent } from './LedgerLoginContent';\nimport { InnerLedgerComponentsClassesType } from './types';\n\nexport interface LedgerLoginContainerPropsType\n  extends OnProviderLoginType,\n    WithClassnameType {\n  closeOnEscape?: boolean;\n  onClose?: () => void;\n  customSpinnerComponent?: ReactNode;\n  customContentComponent?: ReactNode;\n  innerLedgerComponentsClasses?: InnerLedgerComponentsClassesType;\n  showLoginContent?: boolean;\n  showLoginModal?: boolean;\n  showProgressBar?: boolean;\n  showScamPhishingAlert?: boolean;\n  wrapContentInsideModal?: boolean;\n}\n\nconst LedgerLoginContainerComponent = (\n  props: LedgerLoginContainerPropsType & WithStylesImportType\n) => {\n  const {\n    onClose,\n    className,\n    showLoginContent,\n    wrapContentInsideModal,\n    styles\n  } = props;\n\n  if (showLoginContent === false) {\n    return null;\n  }\n\n  if (!wrapContentInsideModal) {\n    return <LedgerLoginContent {...props} />;\n  }\n\n  return (\n    <ModalContainer\n      closeOnEscape={props.closeOnEscape}\n      modalConfig={{\n        headerText: 'Login with ledger',\n        showHeader: true,\n        modalContentClassName: styles?.ledgerModalDialogContent,\n        modalHeaderClassName: styles?.ledgerModalHeader,\n        modalHeaderTextClassName: styles?.ledgerModalHeaderText,\n        modalCloseButtonClassName: styles?.ledgerModalCloseButton,\n        modalBodyClassName: styles?.ledgerModalBody,\n        modalDialogClassName: classNames(\n          styles?.ledgerLoginContainer,\n          className\n        )\n      }}\n      onClose={onClose}\n      visible={props.showLoginModal}\n    >\n      <LedgerLoginContent {...props} />\n    </ModalContainer>\n  );\n};\n\nexport const LedgerLoginContainer = withStyles(LedgerLoginContainerComponent, {\n  ssrStyles: () =>\n    import('UI/ledger/LedgerLoginContainer/ledgerLoginContainerStyles.scss'),\n  clientStyles: () =>\n    require('UI/ledger/LedgerLoginContainer/ledgerLoginContainerStyles.scss')\n      .default\n});\n"],
  "mappings": "wNAAA,yBACA,0BAuBA,GAAM,GAAgC,AACpC,GACG,CACH,GAAM,CACJ,UACA,YACA,mBACA,yBACA,UACE,EAEJ,MAAI,KAAqB,GAChB,KAGJ,EAKH,gBAAC,GACC,cAAe,EAAM,cACrB,YAAa,CACX,WAAY,oBACZ,WAAY,GACZ,sBAAuB,iBAAQ,yBAC/B,qBAAsB,iBAAQ,kBAC9B,yBAA0B,iBAAQ,sBAClC,0BAA2B,iBAAQ,uBACnC,mBAAoB,iBAAQ,gBAC5B,qBAAsB,EACpB,iBAAQ,qBACR,CACF,CACF,EACA,QAAS,EACT,QAAS,EAAM,gBAEf,gBAAC,OAAuB,EAAO,CACjC,EAvBO,gBAAC,OAAuB,EAAO,CAyB1C,EAEa,EAAuB,EAAW,EAA+B,CAC5E,UAAW,IACT,OAAO,mEACT,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
