{
  "version": 3,
  "sources": ["../../src/UI/ledger/LedgerLoginContainer/LedgerLoginContent/LedgerLoginContent.tsx"],
  "sourcesContent": ["import React from 'react';\n\nimport { useGetAccountInfo, useLedgerLogin } from 'hooks';\nimport { getIsNativeAuthSingingForbidden } from 'services/nativeAuth/helpers';\nimport { LedgerLoginContainerPropsType } from '../LedgerLoginContainer';\nimport {\n  LedgerLoginContentBody,\n  LedgerLoginContentBodyProps\n} from '../LedgerLoginContentBody';\nimport { LedgerProgressBar } from '../LedgerProgressBar';\nimport { LedgerScamPhishingAlert } from '../LedgerScamPhishingAlert';\n\nexport const LedgerLoginContent = ({\n  callbackRoute,\n  customSpinnerComponent,\n  customContentComponent,\n  innerLedgerComponentsClasses,\n  nativeAuth,\n  onLoginRedirect,\n  showProgressBar = true,\n  showScamPhishingAlert = true,\n  token\n}: Partial<LedgerLoginContainerPropsType>) => {\n  const { ledgerAccount } = useGetAccountInfo();\n  const [\n    onStartLogin,\n    { error, isLoading },\n    {\n      accounts,\n      onConfirmSelectedAddress,\n      onGoToSpecificPage,\n      onGoToNextPage,\n      onGoToPrevPage,\n      onSelectAddress,\n      selectedAddress,\n      showAddressList,\n      startIndex\n    }\n  ] = useLedgerLogin({ callbackRoute, token, onLoginRedirect, nativeAuth });\n\n  const disabledConnectButton = getIsNativeAuthSingingForbidden(token);\n\n  const {\n    addressTableClassNames,\n    confirmAddressClassNames,\n    ledgerConnectClassNames,\n    ledgerLoadingClassNames,\n    ledgerProgressBarClassNames,\n    ledgerScamPhishingAlertClassName\n  } = innerLedgerComponentsClasses || {};\n\n  const ledgerLoginContentBodyProps: LedgerLoginContentBodyProps = {\n    accounts,\n    addressTableClassNames,\n    confirmAddressClassNames,\n    customContentComponent,\n    customSpinnerComponent,\n    disabledConnectButton,\n    error,\n    isLoading,\n    ledgerAccount,\n    ledgerConnectClassNames,\n    ledgerLoadingClassNames,\n    onConfirmSelectedAddress,\n    onGoToSpecificPage,\n    onGoToNextPage,\n    onGoToPrevPage,\n    onSelectAddress,\n    onStartLogin,\n    selectedAddress,\n    showAddressList,\n    startIndex,\n    token\n  };\n\n  return (\n    <>\n      <LedgerScamPhishingAlert\n        ledgerScamPhishingAlertClassName={ledgerScamPhishingAlertClassName}\n        showScamPhishingAlert={showScamPhishingAlert}\n        token={token}\n      />\n      <LedgerProgressBar\n        error={error}\n        ledgerAccount={ledgerAccount}\n        ledgerProgressBarClassNames={ledgerProgressBarClassNames}\n        showAddressList={showAddressList}\n        showProgressBar={showProgressBar}\n      />\n      <LedgerLoginContentBody {...ledgerLoginContentBodyProps} />\n    </>\n  );\n};\n"],
  "mappings": "0RAAA,yBAYO,GAAM,GAAqB,CAAC,CACjC,gBACA,yBACA,yBACA,+BACA,aACA,kBACA,kBAAkB,GAClB,wBAAwB,GACxB,WAC4C,CAC5C,GAAM,CAAE,iBAAkB,EAAkB,EACtC,CACJ,EACA,CAAE,QAAO,aACT,CACE,WACA,2BACA,qBACA,iBACA,iBACA,kBACA,kBACA,kBACA,eAEA,EAAe,CAAE,gBAAe,QAAO,kBAAiB,YAAW,CAAC,EAElE,EAAwB,EAAgC,CAAK,EAE7D,CACJ,yBACA,2BACA,0BACA,0BACA,8BACA,oCACE,GAAgC,CAAC,EA0BrC,MACE,iCACE,gBAAC,GACC,iCAAkC,EAClC,sBAAuB,EACvB,MAAO,EACT,EACA,gBAAC,GACC,MAAO,EACP,cAAe,EACf,4BAA6B,EAC7B,gBAAiB,EACjB,gBAAiB,EACnB,EACA,gBAAC,OAtC4D,CAC/D,WACA,yBACA,2BACA,yBACA,yBACA,wBACA,QACA,YACA,gBACA,0BACA,0BACA,2BACA,qBACA,iBACA,iBACA,kBACA,eACA,kBACA,kBACA,aACA,OACF,EAgB6D,CAC3D,CAEJ",
  "names": []
}
