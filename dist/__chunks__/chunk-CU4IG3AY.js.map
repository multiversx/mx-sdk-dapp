{
  "version": 3,
  "sources": ["../../src/UI/SignTransactionsModals/SignWithWalletConnectModal/SignWithWalletConnectModal.tsx"],
  "sourcesContent": ["import React from 'react';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport classNames from 'classnames';\nimport { CANCEL_ACTION_NAME, DataTestIdsEnum } from 'constants/index';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { useGetAccountProvider } from 'hooks/account/useGetAccountProvider';\nimport { useClearTransactionsToSignWithWarning } from 'hooks/transactions/helpers/useClearTransactionsToSignWithWarning';\nimport { useCancelWalletConnectAction } from 'hooks/transactions/useCancelWalletConnectAction';\nimport { getProviderType } from 'providers/utils';\nimport { SignModalPropsType } from 'types';\nimport { LoginMethodsEnum } from 'types/enums.types';\nimport { ModalContainer } from 'UI/ModalContainer/ModalContainer';\nimport { PageState } from 'UI/PageState';\nimport { WalletConnectConnectionStatus } from 'UI/walletConnect/WalletConnectConnectionStatus';\n\nconst SignWithWalletConnectModalComponent = ({\n  error,\n  handleClose,\n  transactions,\n  sessionId,\n  className = 'dapp-wallet-connect-modal',\n  modalContentClassName,\n  globalStyles,\n  styles\n}: SignModalPropsType & WithStylesImportType) => {\n  const clearTransactionsToSignWithWarning =\n    useClearTransactionsToSignWithWarning();\n\n  const classes = {\n    wrapper: classNames(\n      styles?.modalContainer,\n      styles?.walletConnect,\n      className\n    ),\n    icon: globalStyles?.textWhite,\n    closeBtn: classNames(\n      globalStyles?.btn,\n      globalStyles?.btnCloseLink,\n      globalStyles?.btnDark,\n      globalStyles?.textWhite,\n      globalStyles?.mt2\n    )\n  };\n\n  const { provider } = useGetAccountProvider();\n  const providerType = getProviderType(provider);\n\n  const hasMultipleTransactions = transactions && transactions?.length > 1;\n  const isSigningWithWalletConnectV2 =\n    providerType === LoginMethodsEnum.walletconnectv2;\n\n  const description = `Check your phone to sign the transaction${\n    hasMultipleTransactions ? 's' : ''\n  }`;\n\n  const { cancelWalletConnectAction } =\n    useCancelWalletConnectAction(CANCEL_ACTION_NAME);\n\n  const close = async () => {\n    clearTransactionsToSignWithWarning(sessionId);\n    await cancelWalletConnectAction();\n    handleClose();\n  };\n\n  const Description = () => (\n    <>\n      {isSigningWithWalletConnectV2 ? (\n        <WalletConnectConnectionStatus description={description} />\n      ) : (\n        description\n      )}\n    </>\n  );\n\n  return (\n    <ModalContainer\n      onClose={handleClose}\n      modalConfig={{\n        modalDialogClassName: classes.wrapper\n      }}\n      visible\n    >\n      <PageState\n        icon={error ? faTimes : null}\n        iconClass={classes.icon}\n        className={modalContentClassName}\n        iconBgClass={error ? globalStyles?.bgDanger : globalStyles?.bgWarning}\n        iconSize='3x'\n        title='Confirm on the xPortal App'\n        description={error ? error : <Description />}\n        action={\n          <button\n            id='closeButton'\n            data-testid={DataTestIdsEnum.closeButton}\n            onClick={close}\n            className={classes.closeBtn}\n          >\n            Cancel\n          </button>\n        }\n      />\n    </ModalContainer>\n  );\n};\n\nexport const SignWithWalletConnectModal = withStyles(\n  SignWithWalletConnectModalComponent,\n  {\n    ssrStyles: () =>\n      import(\n        'UI/SignTransactionsModals/SignWithWalletConnectModal/signWithWalletConnectModalStyles.scss'\n      ),\n    clientStyles: () =>\n      require('UI/SignTransactionsModals/SignWithWalletConnectModal/signWithWalletConnectModalStyles.scss')\n        .default\n  }\n);\n"],
  "mappings": "ufAAA,IAGA,IAHA,qBACA,4DACA,0BAQA,IAKA,GAAM,GAAsC,CAAC,CAC3C,QACA,cACA,eACA,YACA,YAAY,4BACZ,wBACA,eACA,YAC+C,CAC/C,GAAM,GACJ,EAAsC,EAElC,EAAU,CACd,QAAS,EACP,iBAAQ,eACR,iBAAQ,cACR,CACF,EACA,KAAM,iBAAc,UACpB,SAAU,EACR,iBAAc,IACd,iBAAc,aACd,iBAAc,QACd,iBAAc,UACd,iBAAc,GAChB,CACF,EAEM,CAAE,YAAa,EAAsB,EACrC,EAAe,EAAgB,CAAQ,EAEvC,EAA0B,GAAgB,kBAAc,QAAS,EACjE,EACJ,IAAiB,kBAEb,EAAc,2CAClB,EAA0B,IAAM,KAG5B,CAAE,6BACN,EAA6B,CAAkB,EAE3C,EAAQ,IAAY,0BACxB,EAAmC,CAAS,EAC5C,KAAM,GAA0B,EAChC,EAAY,CACd,GAEM,EAAc,IAClB,gCACG,EACC,gBAAC,GAA8B,YAAa,EAAa,EAEzD,CAEJ,EAGF,MACE,iBAAC,GACC,QAAS,EACT,YAAa,CACX,qBAAsB,EAAQ,OAChC,EACA,QAAO,IAEP,gBAAC,GACC,KAAM,EAAQ,EAAU,KACxB,UAAW,EAAQ,KACnB,UAAW,EACX,YAAa,EAAQ,iBAAc,SAAW,iBAAc,UAC5D,SAAS,KACT,MAAM,6BACN,YAAa,GAAgB,gBAAC,MAAY,EAC1C,OACE,gBAAC,UACC,GAAG,cACH,cAAa,cACb,QAAS,EACT,UAAW,EAAQ,UACpB,QAED,EAEJ,CACF,CAEJ,EAEa,GAA6B,EACxC,EACA,CACE,UAAW,IACT,OACE,+FAEJ,aAAc,IACZ,WACG,OACP,CACF",
  "names": []
}
