{
  "version": 3,
  "sources": ["../../src/reduxStore/selectors/networkConfigSelectors.ts"],
  "sourcesContent": ["import { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const networkConfigSelector = (state: RootState) => state.networkConfig;\n\nexport const chainIDSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.chainId\n);\n\nexport const roundDurationSelectorSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.roundDuration\n);\n\nexport const walletConnectBridgeAddressSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectBridgeAddress\n);\n\nexport const walletConnectV2RelaySelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectV2RelayAddress\n);\n\nexport const walletConnectV2ProjectIdSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectV2ProjectId\n);\n\nexport const walletConnectV2OptionsSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectV2Options\n);\n\nexport const walletConnectDeepLinkSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network.walletConnectDeepLink\n);\n\nexport const networkSelector = createDeepEqualSelector(\n  networkConfigSelector,\n  (state) => state.network\n);\n\nexport const apiAddressSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.apiAddress\n);\n\nexport const explorerAddressSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.explorerAddress\n);\n\nexport const walletAddressSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.customWalletAddress ?? state.walletAddress\n);\n\nexport const xAliasAddressSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.xAliasAddress\n);\n\nexport const egldLabelSelector = createDeepEqualSelector(\n  networkSelector,\n  (state) => state.egldLabel\n);\n"],
  "mappings": "8FAAA,GAGa,GAEA,EAKA,EAKA,EAKA,EAKA,EAKA,EAKA,EAKA,EAKA,EAKA,EAKA,EAKA,EAKA,EAjEb,aACA,IAEO,AAAM,EAAwB,AAAC,GAAqB,EAAM,cAEpD,EAAkB,EAC7B,EACA,AAAC,GAAU,EAAM,QAAQ,OAC3B,EAEa,EAAgC,EAC3C,EACA,AAAC,GAAU,EAAM,QAAQ,aAC3B,EAEa,EAAqC,EAChD,EACA,AAAC,GAAU,EAAM,QAAQ,0BAC3B,EAEa,EAA+B,EAC1C,EACA,AAAC,GAAU,EAAM,QAAQ,2BAC3B,EAEa,EAAmC,EAC9C,EACA,AAAC,GAAU,EAAM,QAAQ,wBAC3B,EAEa,EAAiC,EAC5C,EACA,AAAC,GAAU,EAAM,QAAQ,sBAC3B,EAEa,EAAgC,EAC3C,EACA,AAAC,GAAU,EAAM,QAAQ,qBAC3B,EAEa,EAAkB,EAC7B,EACA,AAAC,GAAU,EAAM,OACnB,EAEa,EAAqB,EAChC,EACA,AAAC,GAAU,EAAM,UACnB,EAEa,EAA0B,EACrC,EACA,AAAC,GAAU,EAAM,eACnB,EAEa,EAAwB,EACnC,EACA,AAAC,GAAO,CAzDV,MAyDa,WAAM,sBAAN,OAA6B,EAAM,cAChD,EAEa,EAAwB,EACnC,EACA,AAAC,GAAU,EAAM,aACnB,EAEa,EAAoB,EAC/B,EACA,AAAC,GAAU,EAAM,SACnB",
  "names": []
}
