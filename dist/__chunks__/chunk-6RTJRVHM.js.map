{
  "version": 3,
  "sources": ["../../src/UI/CopyButton/helpers/copyToClipboard.tsx"],
  "sourcesContent": ["import { isWindowAvailable } from 'utils/isWindowAvailable';\n\nfunction fallbackCopyTextToClipboard(text: string) {\n  let success = false;\n\n  const textArea = document?.createElement('textarea');\n  textArea.value = text;\n  textArea.style.position = 'fixed';\n  document?.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    document?.execCommand('copy');\n    success = true;\n  } catch (err) {\n    console.error('Fallback: Oops, unable to copy', err);\n  }\n\n  document?.body.removeChild(textArea);\n\n  return success;\n}\n\nexport async function copyTextToClipboard(text: string) {\n  if (!isWindowAvailable()) {\n    return false;\n  }\n\n  let success = false;\n\n  if (!navigator.clipboard) {\n    success = fallbackCopyTextToClipboard(text);\n  } else {\n    success = await navigator.clipboard.writeText(text).then(\n      function done() {\n        return true;\n      },\n      function error(err) {\n        console.error('Async: Could not copy text: ', err);\n        return false;\n      }\n    );\n  }\n\n  return success;\n}\n"],
  "mappings": "yFAAA,QAEA,WAAqC,EAAc,CACjD,GAAI,GAAU,GAER,EAAW,+BAAU,cAAc,YACzC,EAAS,MAAQ,EACjB,EAAS,MAAM,SAAW,QAC1B,yBAAU,KAAK,YAAY,GAC3B,EAAS,MAAM,EACf,EAAS,OAAO,EAEhB,GAAI,CACF,yBAAU,YAAY,QACtB,EAAU,EACZ,OAAS,EAAP,CACA,QAAQ,MAAM,iCAAkC,CAAG,CACrD,CAEA,gCAAU,KAAK,YAAY,GAEpB,CACT,CAEA,WAA0C,EAAc,gCACtD,GAAI,CAAC,EAAkB,EACrB,MAAO,GAGT,GAAI,GAAU,GAEd,MAAK,WAAU,UAGb,EAAU,KAAM,WAAU,UAAU,UAAU,CAAI,EAAE,KAClD,UAAgB,CACd,MAAO,EACT,EACA,SAAe,EAAK,CAClB,eAAQ,MAAM,+BAAgC,CAAG,EAC1C,EACT,CACF,EAVA,EAAU,EAA4B,CAAI,EAarC,CACT",
  "names": []
}
