{
  "version": 3,
  "sources": ["../../src/UI/SignTransactionsModals/SignWithOperaModal/SignWithOperaModal.tsx"],
  "sourcesContent": ["import React, { MouseEvent } from 'react';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport classNames from 'classnames';\nimport { DataTestIdsEnum } from 'constants/index';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { useClearTransactionsToSignWithWarning } from 'hooks/transactions/helpers/useClearTransactionsToSignWithWarning';\nimport { SignModalPropsType } from 'types';\nimport { ModalContainer } from 'UI/ModalContainer/ModalContainer';\nimport { PageState } from 'UI/PageState';\n\nconst SignWithOperaModalComponent = ({\n  handleClose,\n  error,\n  transactions,\n  sessionId,\n  className = 'dapp-opera-modal',\n  modalContentClassName,\n  globalStyles,\n  styles\n}: SignModalPropsType & WithStylesImportType) => {\n  const clearTransactionsToSignWithWarning =\n    useClearTransactionsToSignWithWarning();\n\n  const classes = {\n    wrapper: classNames(styles?.modalContainer, styles?.opera, className),\n    icon: globalStyles?.textWhite,\n    closeBtn: classNames(\n      globalStyles?.btn,\n      globalStyles?.btnCloseLink,\n      globalStyles?.btnDark,\n      globalStyles?.textWhite,\n      globalStyles?.mt2\n    )\n  };\n\n  const description = error\n    ? error\n    : transactions && transactions.length > 1\n    ? 'Check your Opera Crypto Wallet to sign the transactions'\n    : 'Check your Opera Crypto Wallet to sign the transaction';\n\n  const close = (event: MouseEvent) => {\n    event.preventDefault();\n    handleClose();\n    clearTransactionsToSignWithWarning(sessionId);\n  };\n\n  return (\n    <ModalContainer\n      onClose={handleClose}\n      modalConfig={{\n        modalDialogClassName: classes.wrapper\n      }}\n      visible\n    >\n      <PageState\n        icon={error ? faTimes : null}\n        iconClass={classes.icon}\n        className={modalContentClassName}\n        iconBgClass={error ? globalStyles?.bgDanger : globalStyles?.bgWarning}\n        iconSize='3x'\n        title='Confirm on Opera Crypto Wallet'\n        description={description}\n        action={\n          <button\n            id='closeButton'\n            data-testid={DataTestIdsEnum.closeButton}\n            onClick={close}\n            className={classes.closeBtn}\n          >\n            Close\n          </button>\n        }\n      />\n    </ModalContainer>\n  );\n};\n\nexport const SignWithOperaModal = withStyles(SignWithOperaModalComponent, {\n  ssrStyles: () =>\n    import(\n      'UI/SignTransactionsModals/SignWithOperaModal/signWithOperaModalStyles.scss'\n    ),\n  clientStyles: () =>\n    require('UI/SignTransactionsModals/SignWithOperaModal/signWithOperaModalStyles.scss')\n      .default\n});\n"],
  "mappings": "iSAAA,IAGA,IAHA,qBACA,4DACA,0BAQA,GAAM,GAA8B,CAAC,CACnC,cACA,QACA,eACA,YACA,YAAY,mBACZ,wBACA,eACA,YAC+C,CAC/C,GAAM,GACJ,EAAsC,EAElC,EAAU,CACd,QAAS,EAAW,iBAAQ,eAAgB,iBAAQ,MAAO,CAAS,EACpE,KAAM,iBAAc,UACpB,SAAU,EACR,iBAAc,IACd,iBAAc,aACd,iBAAc,QACd,iBAAc,UACd,iBAAc,GAChB,CACF,EAEM,EAAc,GAEhB,IAAgB,EAAa,OAAS,EACtC,0DACA,0DAEE,EAAQ,AAAC,GAAsB,CACnC,EAAM,eAAe,EACrB,EAAY,EACZ,EAAmC,CAAS,CAC9C,EAEA,MACE,iBAAC,GACC,QAAS,EACT,YAAa,CACX,qBAAsB,EAAQ,OAChC,EACA,QAAO,IAEP,gBAAC,GACC,KAAM,EAAQ,EAAU,KACxB,UAAW,EAAQ,KACnB,UAAW,EACX,YAAa,EAAQ,iBAAc,SAAW,iBAAc,UAC5D,SAAS,KACT,MAAM,iCACN,YAAa,EACb,OACE,gBAAC,UACC,GAAG,cACH,cAAa,cACb,QAAS,EACT,UAAW,EAAQ,UACpB,OAED,EAEJ,CACF,CAEJ,EAEa,EAAqB,EAAW,EAA6B,CACxE,UAAW,IACT,OACE,+EAEJ,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
