{
  "version": 3,
  "sources": ["../../src/UI/Balance/Balance.tsx"],
  "sourcesContent": ["import React from 'react';\nimport classNames from 'classnames';\n\nimport MultiversXSymbol from 'assets/icons/mvx-icon-simple.svg';\nimport { withStyles } from 'hocs/withStyles';\nimport { WithClassnameType } from 'UI/types';\n\nimport { WithStylesImportType } from '../../hocs/useStyles';\n\ninterface BalancePropsType extends WithClassnameType, WithStylesImportType {\n  amount: string;\n  addEqualSign?: boolean;\n  displayAsUsd?: boolean;\n  egldIcon?: boolean;\n  showTokenLabel?: boolean;\n  tokenLabel?: string;\n  showTokenLabelSup?: boolean;\n}\n\nexport const BalanceComponent = ({\n  amount,\n  displayAsUsd,\n  addEqualSign,\n  egldIcon,\n  className,\n  showTokenLabel = true,\n  styles,\n  tokenLabel,\n  showTokenLabelSup,\n  'data-testid': dataTestId\n}: BalancePropsType) => {\n  const [mainBalance, decimalBalance] = amount.split('.');\n  const processedMainBalance =\n    displayAsUsd && mainBalance.indexOf('$') < 0\n      ? `$${mainBalance}`\n      : mainBalance;\n\n  const getBalancePayload = () => {\n    const balancePayload: Record<string, string> = { processedMainBalance };\n\n    if (addEqualSign && displayAsUsd) {\n      balancePayload.approximation = '\u2248';\n    }\n\n    if (decimalBalance) {\n      balancePayload.decimalBalance = `.${decimalBalance}`;\n    }\n\n    if (!displayAsUsd && showTokenLabel) {\n      balancePayload.tokenLabel = ` ${tokenLabel}`;\n    }\n\n    return balancePayload;\n  };\n\n  const balancePayload = getBalancePayload();\n  const dataValues = [\n    balancePayload.approximation,\n    balancePayload.processedMainBalance,\n    balancePayload.decimalBalance,\n    balancePayload.tokenLabel\n  ];\n\n  const dataBalanceValue = dataValues.reduce(\n    (totalDataValue, dataValueItem) =>\n      dataValueItem ? totalDataValue.concat(dataValueItem) : totalDataValue,\n    ''\n  );\n\n  return (\n    <div\n      className={classNames(styles?.balance, className)}\n      data-testid={dataTestId}\n      data-value={dataBalanceValue}\n    >\n      {egldIcon && !displayAsUsd && (\n        <MultiversXSymbol className={styles?.balanceSymbol} />\n      )}\n\n      {balancePayload.approximation && (\n        <span className={styles?.balanceApproximation}>\n          {balancePayload.approximation}\n        </span>\n      )}\n\n      {balancePayload.processedMainBalance && (\n        <span className={styles?.balanceMain}>{processedMainBalance}</span>\n      )}\n\n      {balancePayload.decimalBalance && (\n        <span className={styles?.balanceDecimals}>\n          {balancePayload.decimalBalance}\n        </span>\n      )}\n\n      {balancePayload.tokenLabel && (\n        <sup\n          className={classNames(styles?.balanceSuffix, {\n            [styles?.balanceSuffixSup]: showTokenLabelSup\n          })}\n        >\n          {balancePayload.tokenLabel}\n        </sup>\n      )}\n    </div>\n  );\n};\n\nexport const Balance = withStyles(BalanceComponent, {\n  ssrStyles: () => import('UI/Balance/balanceStyles.scss'),\n  clientStyles: () => require('UI/Balance/balanceStyles.scss').default\n});\n"],
  "mappings": "8KAAA,yBACA,0BAkBO,GAAM,GAAmB,CAAC,CAC/B,SACA,eACA,eACA,WACA,YACA,iBAAiB,GACjB,SACA,aACA,oBACA,cAAe,KACO,CACtB,GAAM,CAAC,EAAa,GAAkB,EAAO,MAAM,GAAG,EAChD,EACJ,GAAgB,EAAY,QAAQ,GAAG,EAAI,EACvC,IAAI,IACJ,EAoBA,EAAiB,AAlBG,KAAM,CAC9B,GAAM,GAAyC,CAAE,sBAAqB,EAEtE,MAAI,IAAgB,GAClB,GAAe,cAAgB,UAG7B,GACF,GAAe,eAAiB,IAAI,KAGlC,CAAC,GAAgB,GACnB,GAAe,WAAa,IAAI,KAG3B,CACT,GAEyC,EAQnC,EAAmB,AAPN,CACjB,EAAe,cACf,EAAe,qBACf,EAAe,eACf,EAAe,UACjB,EAEoC,OAClC,CAAC,EAAgB,IACf,EAAgB,EAAe,OAAO,CAAa,EAAI,EACzD,EACF,EAEA,MACE,iBAAC,OACC,UAAW,EAAW,iBAAQ,QAAS,CAAS,EAChD,cAAa,EACb,aAAY,GAEX,GAAY,CAAC,GACZ,gBAAC,GAAiB,UAAW,iBAAQ,cAAe,EAGrD,EAAe,eACd,gBAAC,QAAK,UAAW,iBAAQ,sBACtB,EAAe,aAClB,EAGD,EAAe,sBACd,gBAAC,QAAK,UAAW,iBAAQ,aAAc,CAAqB,EAG7D,EAAe,gBACd,gBAAC,QAAK,UAAW,iBAAQ,iBACtB,EAAe,cAClB,EAGD,EAAe,YACd,gBAAC,OACC,UAAW,EAAW,iBAAQ,cAAe,CAC3C,CAAC,iBAAQ,kBAAmB,CAC9B,CAAC,GAEA,EAAe,UAClB,CAEJ,CAEJ,EAEa,EAAU,EAAW,EAAkB,CAClD,UAAW,IAAM,OAAO,kCACxB,aAAc,IAAM,WAAyC,OAC/D,CAAC",
  "names": []
}
