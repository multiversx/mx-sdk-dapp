{
  "version": 3,
  "sources": ["../../src/UI/SignTransactionsModals/components/DeviceConfirmationScreen.tsx"],
  "sourcesContent": ["import React from 'react';\nimport {\n  useGetAccount,\n  useGetAccountProvider,\n  useGetSignTransactionsError,\n  useSignTransactionsCommonData\n} from 'hooks';\nimport { SignPropsType } from 'UI/SignTransactionsModals/types/signTransactionsModals.types';\nimport { getDefaultCallbackUrl } from 'utils/window';\nimport { ExtraConfirmationScreenPropsType } from './confirmationScreen.types';\nimport {\n  TransactionStatusToast,\n  TransactionStatusToastType\n} from './TransactionStatusToast';\n\nexport const DeviceConfirmationScreen = ({\n  Screen,\n  GuardianScreen,\n  verifyReceiverScam,\n  className\n}: ExtraConfirmationScreenPropsType) => {\n  if (!Screen) {\n    return null;\n  }\n\n  const {\n    transactionsToSign,\n    error,\n    hasTransactions,\n    onAbort,\n    canceledTransactionsMessage\n  } = useSignTransactionsCommonData();\n\n  const signTransactionsError = useGetSignTransactionsError();\n  const { providerType } = useGetAccountProvider();\n  const { isGuarded } = useGetAccount();\n\n  const handleClose = () => {\n    onAbort(transactionsToSign?.sessionId);\n  };\n\n  const signError = error || signTransactionsError;\n\n  const signProps: SignPropsType = {\n    handleClose,\n    GuardianScreen,\n    isGuarded,\n    error: signError,\n    sessionId: transactionsToSign?.sessionId,\n    transactions: transactionsToSign?.transactions ?? [],\n    providerType,\n    callbackRoute: transactionsToSign?.callbackRoute || getDefaultCallbackUrl(),\n    className,\n    verifyReceiverScam\n  };\n\n  const transactionStatusToastProps: TransactionStatusToastType = {\n    signError,\n    canceledTransactionsMessage,\n    onDelete: handleClose\n  };\n\n  const shouldShowTransactionStatusToast =\n    Boolean(signError) || Boolean(canceledTransactionsMessage);\n\n  if (!shouldShowTransactionStatusToast && !hasTransactions) {\n    return null;\n  }\n\n  return shouldShowTransactionStatusToast ? (\n    <TransactionStatusToast {...transactionStatusToastProps} />\n  ) : (\n    <Screen {...signProps} />\n  );\n};\n"],
  "mappings": "sSAAA,yBAQA,IAOO,GAAM,GAA2B,CAAC,CACvC,SACA,iBACA,qBACA,eACsC,CApBxC,MAqBE,GAAI,CAAC,EACH,MAAO,MAGT,GAAM,CACJ,qBACA,QACA,kBACA,UACA,+BACE,EAA8B,EAE5B,EAAwB,EAA4B,EACpD,CAAE,gBAAiB,EAAsB,EACzC,CAAE,aAAc,EAAc,EAE9B,EAAc,IAAM,CACxB,EAAQ,iBAAoB,SAAS,CACvC,EAEM,EAAY,GAAS,EAErB,EAA2B,CAC/B,cACA,iBACA,YACA,MAAO,EACP,UAAW,iBAAoB,UAC/B,aAAc,oBAAoB,eAApB,OAAoC,CAAC,EACnD,eACA,cAAe,kBAAoB,gBAAiB,EAAsB,EAC1E,YACA,oBACF,EAEM,EAA0D,CAC9D,YACA,8BACA,SAAU,CACZ,EAEM,EACJ,QAAQ,CAAS,GAAK,QAAQ,CAA2B,EAE3D,MAAI,CAAC,GAAoC,CAAC,EACjC,KAGF,EACL,gBAAC,OAA2B,EAA6B,EAEzD,gBAAC,OAAW,EAAW,CAE3B",
  "names": []
}
