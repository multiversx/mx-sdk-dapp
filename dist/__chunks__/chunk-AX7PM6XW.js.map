{
  "version": 3,
  "sources": ["../../src/hooks/transactions/batch/useResolveBatchStatusResponse.ts"],
  "sourcesContent": ["import { useCallback } from 'react';\nimport { BatchTransactionStatus } from 'types';\nimport { useGetBatchStatus } from './useGetBatchStatus';\n\nexport const useResolveBatchStatusResponse = () => {\n  const getBatchStatus = useGetBatchStatus();\n\n  return useCallback(\n    async ({ batchId }: { batchId: string }) => {\n      const statusResponse = await getBatchStatus(batchId);\n\n      if (!statusResponse) {\n        return {\n          statusResponse,\n          isBatchSuccessful: false,\n          isBatchFailed: true,\n          isBatchNotFound: false\n        };\n      }\n\n      return {\n        statusResponse,\n        isBatchSuccessful:\n          statusResponse.status === BatchTransactionStatus.success,\n        isBatchFailed:\n          statusResponse.status === BatchTransactionStatus.fail ||\n          statusResponse.status === BatchTransactionStatus.invalid ||\n          statusResponse.status === BatchTransactionStatus.dropped,\n        isBatchNotFound:\n          Boolean(statusResponse.statusCode) && Boolean(statusResponse.message)\n      };\n    },\n    [getBatchStatus]\n  );\n};\n"],
  "mappings": "+HAAA,IACA,IADA,oCAIO,GAAM,GAAgC,IAAM,CACjD,GAAM,GAAiB,EAAkB,EAEzC,MAAO,GACL,AAAO,GAAqC,UAArC,GAAqC,UAArC,CAAE,WAAmC,CAC1C,GAAM,GAAiB,KAAM,GAAe,CAAO,EAEnD,MAAK,GASE,CACL,iBACA,kBACE,EAAe,SAAW,UAC5B,cACE,EAAe,SAAW,QAC1B,EAAe,SAAW,WAC1B,EAAe,SAAW,UAC5B,gBACE,QAAQ,EAAe,UAAU,GAAK,QAAQ,EAAe,OAAO,CACxE,EAlBS,CACL,iBACA,kBAAmB,GACnB,cAAe,GACf,gBAAiB,EACnB,CAcJ,GACA,CAAC,CAAc,CACjB,CACF",
  "names": []
}
