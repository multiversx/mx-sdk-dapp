{
  "version": 3,
  "sources": ["../../src/UI/TransactionInfo/components/TransactionAction/components/ActionToken.tsx"],
  "sourcesContent": ["import React from 'react';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { TokenArgumentType } from 'types/serverTransactions.types';\nimport { NftEnumType } from 'types/tokens.types';\nimport { getTransactionActionNftText } from 'utils/transactions/transactionInfoHelpers/getTransactionActionNftText';\nimport { getTransactionActionTokenText } from 'utils/transactions/transactionInfoHelpers/getTransactionActionTokenText';\nimport { TransactionActionBlock } from './TransactionActionBlock/index';\n\nexport interface ActionTokenPropsType {\n  token: TokenArgumentType;\n  noValue?: boolean;\n  showLastNonZeroDecimal?: boolean;\n}\n\nconst ActionTokenComponent = ({\n  token,\n  noValue,\n  showLastNonZeroDecimal,\n  globalStyles,\n  styles\n}: ActionTokenPropsType & WithStylesImportType) => {\n  const isESDT = [\n    NftEnumType.MetaESDT.toString(),\n    NftEnumType.SemiFungibleESDT,\n    NftEnumType.NonFungibleESDT\n  ].includes(token.type);\n\n  if (isESDT) {\n    switch (token.type) {\n      case NftEnumType.SemiFungibleESDT: {\n        const props = getTransactionActionNftText({\n          token,\n          showLastNonZeroDecimal\n        });\n\n        return (\n          <div className={styles?.group}>\n            <span className={globalStyles?.mr1}>SFT quantity</span>\n            <TransactionActionBlock.Nft {...props} badgeText={null} />\n\n            <span className={globalStyles?.mr1}>of collection</span>\n            <TransactionActionBlock.Collection token={token} />\n          </div>\n        );\n      }\n\n      case NftEnumType.NonFungibleESDT: {\n        const props = getTransactionActionNftText({\n          token,\n          noValue,\n          showLastNonZeroDecimal\n        });\n\n        return (\n          <div className={styles?.group}>\n            <span className={globalStyles?.mr1}>NFT</span>\n            <TransactionActionBlock.Nft {...props} badgeText={null} />\n\n            <span className={globalStyles?.mr1}>of collection</span>\n            <TransactionActionBlock.Collection token={token} />\n          </div>\n        );\n      }\n\n      case NftEnumType.MetaESDT: {\n        const props = getTransactionActionNftText({\n          token,\n          noValue,\n          showLastNonZeroDecimal\n        });\n\n        return <TransactionActionBlock.Nft {...props} badgeText={null} />;\n      }\n\n      default:\n        return null;\n    }\n  } else {\n    const props = getTransactionActionTokenText({\n      token,\n      noValue,\n      showLastNonZeroDecimal\n    });\n\n    return <TransactionActionBlock.Token {...props} showLastNonZeroDecimal />;\n  }\n};\n\nexport const ActionToken = withStyles(ActionTokenComponent, {\n  ssrStyles: () =>\n    import(\n      'UI/TransactionInfo/components/TransactionAction/components/styles.scss'\n    ),\n  clientStyles: () =>\n    require('UI/TransactionInfo/components/TransactionAction/components/styles.scss')\n      .default\n});\n"],
  "mappings": "kUAAA,yBAGA,IACA,IACA,IASA,GAAM,GAAuB,CAAC,CAC5B,QACA,UACA,yBACA,eACA,YACiD,CAOjD,GANe,CACb,WAAqB,SAAS,EAC9B,mBACA,iBACF,EAAE,SAAS,EAAM,IAAI,EAGnB,OAAQ,EAAM,UACP,mBAA8B,CACjC,GAAM,GAAQ,EAA4B,CACxC,QACA,wBACF,CAAC,EAED,MACE,iBAAC,OAAI,UAAW,iBAAQ,OACtB,gBAAC,QAAK,UAAW,iBAAc,KAAK,cAAY,EAChD,gBAAC,EAAuB,IAAvB,OAA+B,GAA/B,CAAsC,UAAW,MAAM,EAExD,gBAAC,QAAK,UAAW,iBAAc,KAAK,eAAa,EACjD,gBAAC,EAAuB,WAAvB,CAAkC,MAAO,EAAO,CACnD,CAEJ,KAEK,kBAA6B,CAChC,GAAM,GAAQ,EAA4B,CACxC,QACA,UACA,wBACF,CAAC,EAED,MACE,iBAAC,OAAI,UAAW,iBAAQ,OACtB,gBAAC,QAAK,UAAW,iBAAc,KAAK,KAAG,EACvC,gBAAC,EAAuB,IAAvB,OAA+B,GAA/B,CAAsC,UAAW,MAAM,EAExD,gBAAC,QAAK,UAAW,iBAAc,KAAK,eAAa,EACjD,gBAAC,EAAuB,WAAvB,CAAkC,MAAO,EAAO,CACnD,CAEJ,KAEK,WAAsB,CACzB,GAAM,GAAQ,EAA4B,CACxC,QACA,UACA,wBACF,CAAC,EAED,MAAO,iBAAC,EAAuB,IAAvB,OAA+B,GAA/B,CAAsC,UAAW,MAAM,CACjE,SAGE,MAAO,UAEN,CACL,GAAM,GAAQ,EAA8B,CAC1C,QACA,UACA,wBACF,CAAC,EAED,MAAO,iBAAC,EAAuB,MAAvB,OAAiC,GAAjC,CAAwC,uBAAsB,IAAC,CACzE,CACF,EAEa,EAAc,EAAW,EAAsB,CAC1D,UAAW,IACT,OACE,2EAEJ,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
