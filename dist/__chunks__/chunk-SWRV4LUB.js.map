{
  "version": 3,
  "sources": ["../../src/services/nativeAuth/helpers/decodeNativeAuthToken.tsx"],
  "sourcesContent": ["import { decodeBase64 } from 'utils/decoders/base64Utils';\nimport { DecodedLoginTokenType, decodeLoginToken } from './decodeLoginToken';\n\nfunction isString(x: any) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\n\ninterface DecodedNativeAuthTokenType extends DecodedLoginTokenType {\n  address: string;\n  body: string;\n  signature: string;\n}\n\nexport const decodeNativeAuthToken = (\n  accessToken?: string\n): DecodedNativeAuthTokenType | null => {\n  if (!accessToken || !isString(accessToken)) {\n    return null;\n  }\n\n  const parts = accessToken.split('.');\n\n  if (parts.length !== 3) {\n    console.error(\n      'Invalid nativeAuthToken. You may be trying to decode a loginToken. Try using decodeLoginToken method instead'\n    );\n    return null;\n  }\n\n  try {\n    const [address, body, signature] = parts;\n    const parsedAddress = decodeBase64(address);\n    const parsedBody = decodeBase64(body);\n    const parsedInitToken = decodeLoginToken(parsedBody);\n\n    if (!parsedInitToken) {\n      return {\n        address: parsedAddress,\n        body: parsedBody,\n        signature,\n        blockHash: '',\n        origin: '',\n        ttl: 0\n      };\n    }\n\n    const result = {\n      ...parsedInitToken,\n      address: parsedAddress,\n      body: parsedBody,\n      signature\n    };\n\n    // if empty object, delete extraInfo\n    if (!parsedInitToken.extraInfo?.timestamp) {\n      delete result.extraInfo;\n    }\n\n    return result;\n  } catch (err) {\n    return null;\n  }\n};\n"],
  "mappings": "6IAAA,QAGA,WAAkB,EAAQ,CACxB,MAAO,QAAO,UAAU,SAAS,KAAK,CAAC,IAAM,iBAC/C,CAQO,GAAM,GAAwB,AACnC,GACsC,CAfxC,MAgBE,GAAI,CAAC,GAAe,CAAC,EAAS,CAAW,EACvC,MAAO,MAGT,GAAM,GAAQ,EAAY,MAAM,GAAG,EAEnC,GAAI,EAAM,SAAW,EACnB,eAAQ,MACN,8GACF,EACO,KAGT,GAAI,CACF,GAAM,CAAC,EAAS,EAAM,GAAa,EAC7B,EAAgB,EAAa,CAAO,EACpC,EAAa,EAAa,CAAI,EAC9B,EAAkB,EAAiB,CAAU,EAEnD,GAAI,CAAC,EACH,MAAO,CACL,QAAS,EACT,KAAM,EACN,YACA,UAAW,GACX,OAAQ,GACR,IAAK,CACP,EAGF,GAAM,GAAS,OACV,GADU,CAEb,QAAS,EACT,KAAM,EACN,WACF,GAGA,MAAK,KAAgB,YAAhB,QAA2B,WAC9B,MAAO,GAAO,UAGT,CACT,OAAS,EAAP,CACA,MAAO,KACT,CACF",
  "names": []
}
