{
  "version": 3,
  "sources": ["../../src/UI/walletConnect/WalletConnectLoginContainer/WalletConnectLoginContent/WalletConnectLoginContent.tsx", "../../src/assets/icons/lightning.svg"],
  "sourcesContent": ["import React, { useEffect, useState } from 'react';\nimport { faCircleNotch } from '@fortawesome/free-solid-svg-icons';\nimport classNames from 'classnames';\nimport QRCode from 'qrcode';\nimport Lighting from 'assets/icons/lightning.svg';\nimport { DataTestIdsEnum } from 'constants/index';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { useWalletConnectV2Login } from 'hooks/login/useWalletConnectV2Login';\nimport { getAuthorizationInfo } from 'services/nativeAuth/helpers';\nimport { PageState } from 'UI/PageState';\nimport { ScamPhishingAlert } from 'UI/ScamPhishingAlert';\nimport { isMobileEnvironment } from 'utils/environment/isMobileEnvironment';\nimport { getWindowLocation } from 'utils/window/getWindowLocation';\nimport { Pairinglist } from '../PairingList';\nimport { WalletConnectLoginModalPropsType } from '../types';\n\nconst WalletConnectLoginContentComponent = ({\n  callbackRoute,\n  className = 'dapp-wallet-connect-login-modal',\n  customSpinnerComponent,\n  innerWalletConnectComponentsClasses,\n  lead = 'Scan the QR code using the xPortal App',\n  loginButtonText = 'xPortal App',\n  logoutRoute,\n  nativeAuth,\n  onLoginRedirect,\n  showScamPhishingAlert = true,\n  title = 'Login with the xPortal App',\n  token,\n  globalStyles,\n  styles,\n  customRequestMethods = []\n}: WalletConnectLoginModalPropsType & WithStylesImportType) => {\n  const [\n    initLoginWithWalletConnectV2,\n    { error: walletConnectErrorV2, isLoading },\n    {\n      connectExisting,\n      removeExistingPairing,\n      uriDeepLink: walletConnectDeepLinkV2,\n      walletConnectUri: walletConnectUriV2,\n      wcPairings\n    }\n  ] = useWalletConnectV2Login({\n    callbackRoute,\n    token,\n    nativeAuth,\n    onLoginRedirect,\n    logoutRoute,\n    customRequestMethods\n  });\n\n  const [qrCodeSvg, setQrCodeSvg] = useState<string>('');\n\n  const {\n    containerContentClassName,\n    containerScamPhishingAlertClassName,\n    containerTitleClassName,\n    containerSubtitleClassName,\n    containerErrorClassName,\n    containerQrCodeClassName,\n    containerLoaderClassName,\n    containerButtonClassName,\n    walletConnectPairingListClassNames\n  } = innerWalletConnectComponentsClasses || {};\n\n  const isMobileDevice = isMobileEnvironment();\n  const activePairings =\n    wcPairings?.filter((pairing) => {\n      const hasLaterEntry = wcPairings.some(\n        (pairing2) =>\n          pairing.peerMetadata?.name === pairing2?.peerMetadata?.name &&\n          pairing.peerMetadata?.url === pairing2?.peerMetadata?.url &&\n          pairing.expiry < pairing2.expiry\n      );\n\n      return Boolean(pairing.active) && pairing.peerMetadata && !hasLaterEntry;\n    }) ?? [];\n\n  const generateQRCode = async () => {\n    if (!walletConnectUriV2) {\n      return;\n    }\n\n    const svg = await QRCode.toString(walletConnectUriV2, {\n      type: 'svg'\n    });\n\n    if (svg) {\n      setQrCodeSvg(svg);\n    }\n  };\n\n  useEffect(() => {\n    generateQRCode();\n  }, [walletConnectUriV2]);\n\n  useEffect(() => {\n    initLoginWithWalletConnectV2();\n  }, []);\n\n  const authorizationInfo = showScamPhishingAlert\n    ? getAuthorizationInfo(token, containerScamPhishingAlertClassName)\n    : undefined;\n\n  return (\n    <>\n      {showScamPhishingAlert && (\n        <ScamPhishingAlert\n          url={getWindowLocation().origin}\n          authorizationInfo={authorizationInfo}\n          className={containerScamPhishingAlertClassName}\n        />\n      )}\n\n      <div\n        className={classNames(\n          styles?.xPortalContent,\n          containerContentClassName\n        )}\n      >\n        <div\n          className={classNames(\n            styles?.xPortalContainerHeading,\n            containerTitleClassName\n          )}\n        >\n          {title}\n        </div>\n\n        <div\n          className={classNames(\n            styles?.xPortalContainerSubheading,\n            containerSubtitleClassName\n          )}\n        >\n          {lead}\n        </div>\n\n        <div>\n          {walletConnectErrorV2 && (\n            <p\n              className={classNames(\n                styles?.xPortalContainerError,\n                containerErrorClassName\n              )}\n            >\n              {walletConnectErrorV2}\n            </p>\n          )}\n        </div>\n\n        {isLoading || !qrCodeSvg ? (\n          <div\n            className={classNames(\n              styles?.xPortalLoader,\n              containerLoaderClassName\n            )}\n          >\n            {customSpinnerComponent ? (\n              customSpinnerComponent\n            ) : (\n              <PageState\n                iconSize='10x'\n                icon={faCircleNotch}\n                iconClass={classNames('fa-spin', globalStyles?.textPrimary)}\n              />\n            )}\n          </div>\n        ) : (\n          <div\n            className={classNames(\n              styles?.xPortalQrCode,\n              containerQrCodeClassName\n            )}\n            dangerouslySetInnerHTML={{\n              __html: qrCodeSvg\n            }}\n          />\n        )}\n\n        {isMobileDevice && (\n          <a\n            id='accessWalletBtn'\n            data-testid={DataTestIdsEnum.accessWalletBtn}\n            href={walletConnectDeepLinkV2}\n            rel='noopener noreferrer nofollow'\n            target='_blank'\n            className={classNames(\n              globalStyles?.btn,\n              globalStyles?.btnPrimary,\n              styles?.xPortalContainerButton,\n              containerButtonClassName\n            )}\n          >\n            <Lighting className={styles?.xPortalContainerButtonIcon} />\n            {loginButtonText}\n          </a>\n        )}\n\n        {activePairings.length > 0 && (\n          <Pairinglist\n            activePairings={activePairings}\n            connectExisting={connectExisting}\n            removeExistingPairing={removeExistingPairing}\n            className={className}\n            pairingListClasses={walletConnectPairingListClassNames}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n\nexport const WalletConnectLoginContent = withStyles(\n  WalletConnectLoginContentComponent,\n  {\n    ssrStyles: () =>\n      import(\n        'UI/walletConnect/WalletConnectLoginContainer/walletConnectLoginContainerStyles.scss'\n      ),\n    clientStyles: () =>\n      require('UI/walletConnect/WalletConnectLoginContainer/walletConnectLoginContainerStyles.scss')\n        .default\n  }\n);\n", "import * as React from \"react\";\nconst SvgLightning = props => <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 31.114 44.981\" width={16} height={16} {...props}><g transform=\"translate(-47.168 -21.519)\"><g transform=\"translate(-247.872 -130.693)\"><path d=\"M355.676,152.213l-3.832,17.8h-9.661Z\" transform=\"translate(-40.089 1)\" fillRule=\"evenodd\" fill=\"#fff\" /><path d=\"M326.45,271.184l-7.053,9.379H295.04l7.054-9.379Z\" transform=\"translate(0 -101.17)\" fillRule=\"evenodd\" fill=\"#fff\" /><path d=\"M381.139,333.864l-13.493,17.8,3.832-17.8Z\" transform=\"translate(-61.742 -155.472)\" fillRule=\"evenodd\" fill=\"#fff\" /></g></g></svg>;\nexport default SvgLightning;"],
  "mappings": "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",
  "names": []
}
