{
  "version": 3,
  "sources": ["../../src/reduxStore/middlewares/loginSessionMiddleware.ts"],
  "sourcesContent": ["import { PayloadAction } from '@reduxjs/toolkit';\nimport throttle from 'lodash.throttle';\nimport { LOGOUT_ACTION_NAME } from 'constants/index';\nimport { invalidateLoginSession } from 'reduxStore/slices';\nimport { RootState } from 'reduxStore/store';\nimport { getNewLoginExpiresTimestamp, setLoginExpiresAt } from 'storage/local';\nimport { storage } from 'utils/storage';\nimport { localStorageKeys } from 'utils/storage/local';\n\nconst whitelistedActions = [LOGOUT_ACTION_NAME];\nlet invalidatedSession = false;\n\nconst throttledSetNewExpires = throttle(() => {\n  setLoginExpiresAt(getNewLoginExpiresTimestamp());\n}, 5000);\n\nexport const loginSessionMiddleware: any =\n  (store: any) =>\n  (next: (action: PayloadAction) => void) =>\n  (action: PayloadAction) => {\n    if (whitelistedActions.includes(action.type)) {\n      return next(action);\n    }\n\n    const appState: RootState = store.getState();\n    const loginTimestamp = storage.local.getItem(\n      localStorageKeys.loginExpiresAt\n    );\n\n    const isLoggedIn = Boolean(appState?.account.address);\n\n    if (!isLoggedIn) {\n      return next(action);\n    }\n\n    if (loginTimestamp == null) {\n      return setLoginExpiresAt(getNewLoginExpiresTimestamp());\n    }\n\n    // create a unique key for this account and it's allowed session\n    const now = Date.now();\n    const isExpired = loginTimestamp - now < 0;\n\n    if (isExpired && !invalidatedSession) {\n      setTimeout(() => {\n        invalidatedSession = true;\n        store.dispatch(invalidateLoginSession());\n      }, 1000);\n    } else {\n      if (invalidatedSession) {\n        invalidatedSession = false;\n      }\n\n      throttledSetNewExpires();\n    }\n\n    return next(action);\n  };\n"],
  "mappings": "kUACA,+BADA,GASM,GACF,EAEE,EAIO,EAhBb,aAEA,IACA,IAEA,IACA,IACA,IAEA,AAAM,EAAqB,CAAC,CAAkB,EAC1C,EAAqB,GAEnB,EAAyB,EAAS,IAAM,CAC5C,EAAkB,EAA4B,CAAC,CACjD,EAAG,GAAI,EAEM,EACX,AAAC,GACD,AAAC,GACD,AAAC,GAA0B,CACzB,GAAI,EAAmB,SAAS,EAAO,IAAI,EACzC,MAAO,GAAK,CAAM,EAGpB,GAAM,GAAsB,EAAM,SAAS,EACrC,EAAiB,EAAQ,MAAM,QACnC,EAAiB,cACnB,EAIA,GAAI,CAFe,QAAQ,iBAAU,QAAQ,OAAO,EAGlD,MAAO,GAAK,CAAM,EAGpB,GAAI,GAAkB,KACpB,MAAO,GAAkB,EAA4B,CAAC,EAIxD,GAAM,GAAM,KAAK,IAAI,EAGrB,MAAI,AAFc,GAAiB,EAAM,GAExB,CAAC,EAChB,WAAW,IAAM,CACf,EAAqB,GACrB,EAAM,SAAS,EAAuB,CAAC,CACzC,EAAG,GAAI,EAEH,IACF,GAAqB,IAGvB,EAAuB,GAGlB,EAAK,CAAM,CACpB",
  "names": []
}
