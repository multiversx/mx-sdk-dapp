{
  "version": 3,
  "sources": ["../../node_modules/lodash/_arrayMap.js", "../../node_modules/lodash/_baseToString.js", "../../node_modules/lodash/toString.js", "../../node_modules/lodash/_baseSlice.js", "../../node_modules/lodash/_castSlice.js", "../../node_modules/lodash/_hasUnicode.js", "../../node_modules/lodash/_asciiToArray.js", "../../node_modules/lodash/_unicodeToArray.js", "../../node_modules/lodash/_stringToArray.js", "../../node_modules/lodash/_createCaseFirst.js", "../../node_modules/lodash/upperFirst.js", "../../node_modules/lodash/capitalize.js", "../../src/UI/TransactionData/components/TransactionDataDecode.tsx"],
  "sourcesContent": ["/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n", "var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n", "var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n", "/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n", "var baseSlice = require('./_baseSlice');\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n", "/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n", "var asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n", "var castSlice = require('./_castSlice'),\n    hasUnicode = require('./_hasUnicode'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n", "var createCaseFirst = require('./_createCaseFirst');\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n", "var toString = require('./toString'),\n    upperFirst = require('./upperFirst');\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n", "import React, { ChangeEventHandler, useEffect, useState } from 'react';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport capitalize from 'lodash/capitalize';\nimport { DataTestIdsEnum } from 'constants/dataTestIds.enum';\nimport { DecodeMethodEnum } from 'types';\nimport { decodeForDisplay } from 'utils/transactions/transactionInfoHelpers/decodeForDisplay';\nimport { WithClassnameType } from '../../types';\n\ninterface SelectOptionType {\n  label: string;\n  value: string;\n}\n\ninterface TransactionDataDecodePropsType extends WithClassnameType {\n  data: string;\n  onDecode: (decodedData: string) => void;\n  onDecodeError: (errors: string[]) => void;\n}\n\nexport const TransactionDataDecode = ({\n  className,\n  data,\n  onDecodeError,\n  onDecode\n}: TransactionDataDecodePropsType) => {\n  const rawMethodStr = capitalize(DecodeMethodEnum.raw.toString());\n  const [method, setMethod] = useState<SelectOptionType>({\n    label: rawMethodStr,\n    value: rawMethodStr\n  });\n\n  const selectOptions = Object.values(DecodeMethodEnum).map((method) => {\n    const methodStr = method.toString();\n\n    return {\n      label: capitalize(methodStr),\n      value: methodStr\n    };\n  });\n\n  const handleSelect: ChangeEventHandler<HTMLSelectElement> = (e) => {\n    const selectedOption = selectOptions.find(\n      (option) => option.value === e.target.value\n    );\n\n    if (selectedOption) {\n      setMethod(selectedOption);\n    }\n  };\n\n  useEffect(() => {\n    const { displayValue, validationWarnings } = decodeForDisplay({\n      input: data,\n      decodeMethod: DecodeMethodEnum[method.value]\n    });\n\n    onDecode(displayValue);\n\n    if (validationWarnings.length > 0) {\n      onDecodeError(validationWarnings);\n    }\n  }, [method, data]);\n\n  return (\n    <div className={classNames('transaction-data-decode', className)}>\n      <select\n        className='transaction-data-decode-select'\n        data-testid={DataTestIdsEnum.transactionDataDecode}\n        value={method.value}\n        onChange={handleSelect}\n      >\n        {selectOptions.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n      <FontAwesomeIcon\n        icon={faChevronDown}\n        className='transaction-data-decode-select-icon'\n      />\n    </div>\n  );\n};\n"],
  "mappings": "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",
  "names": []
}
