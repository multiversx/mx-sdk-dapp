{
  "version": 3,
  "sources": ["../../src/reduxStore/selectors/accountInfoSelectors.ts"],
  "sourcesContent": ["import { emptyAccount } from 'reduxStore/slices';\nimport { RootState } from 'reduxStore/store';\nimport { createDeepEqualSelector } from './helpers';\n\nconst privateAccountInfoSelector = (state: RootState) => state.account;\n\nexport const addressSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.address\n);\n\nexport const accountSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  addressSelector,\n  (state, address) =>\n    address in state.accounts ? state.accounts[address] : emptyAccount\n);\n\n// accounts object will not be public\nexport const accountInfoSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  accountSelector,\n  (state, account) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { accounts, ...info } = state;\n\n    return { ...info, address: account.address, account };\n  }\n);\n\nexport const accountBalanceSelector = createDeepEqualSelector(\n  accountSelector,\n  (account) => account.balance\n);\n\nexport const accountNonceSelector = createDeepEqualSelector(\n  accountSelector,\n  (state) => state?.nonce?.valueOf() || 0\n);\n\nexport const shardSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.shard\n);\n\nexport const ledgerAccountSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.ledgerAccount\n);\n\nexport const walletConnectAccountSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.walletConnectAccount\n);\n\nexport const isAccountLoadingSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.isAccountLoading\n);\n\nexport const isAccountLoadingErrorSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.accountLoadingError\n);\n\nexport const websocketEventSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.websocketEvent\n);\n\nexport const websocketBatchEventSelector = createDeepEqualSelector(\n  privateAccountInfoSelector,\n  (state) => state.websocketBatchEvent\n);\n"],
  "mappings": "mMAAA,GAIM,GAEO,EAKA,EAQA,EAWA,EAKA,EAKA,EAKA,EAKA,EAKA,EAKA,EAKA,EAKA,EAtEb,iBAEA,IAEA,AAAM,EAA6B,AAAC,GAAqB,EAAM,QAElD,EAAkB,EAC7B,EACA,AAAC,GAAU,EAAM,OACnB,EAEa,EAAkB,EAC7B,EACA,EACA,CAAC,EAAO,IACN,IAAW,GAAM,SAAW,EAAM,SAAS,GAAW,CAC1D,EAGa,EAAsB,EACjC,EACA,EACA,CAAC,EAAO,IAAY,CAElB,GAA8B,KAAtB,aAAsB,EAAT,IAAS,EAAT,CAAb,aAER,MAAO,QAAK,GAAL,CAAW,QAAS,EAAQ,QAAS,SAAQ,EACtD,CACF,EAEa,EAAyB,EACpC,EACA,AAAC,GAAY,EAAQ,OACvB,EAEa,EAAuB,EAClC,EACA,AAAC,GAAO,CArCV,MAqCa,2BAAO,QAAP,cAAc,YAAa,EACxC,EAEa,EAAgB,EAC3B,EACA,AAAC,GAAU,EAAM,KACnB,EAEa,EAAwB,EACnC,EACA,AAAC,GAAU,EAAM,aACnB,EAEa,EAA+B,EAC1C,EACA,AAAC,GAAU,EAAM,oBACnB,EAEa,EAA2B,EACtC,EACA,AAAC,GAAU,EAAM,gBACnB,EAEa,EAAgC,EAC3C,EACA,AAAC,GAAU,EAAM,mBACnB,EAEa,EAAyB,EACpC,EACA,AAAC,GAAU,EAAM,cACnB,EAEa,EAA8B,EACzC,EACA,AAAC,GAAU,EAAM,mBACnB",
  "names": []
}
