{
  "version": 3,
  "sources": ["../../src/utils/storage/session.ts"],
  "sourcesContent": ["export type SessionKeyType = 'address' | 'shard' | 'toasts' | 'toastProgress';\ntype ExpiresType = number | false;\n\nexport interface SetItemType {\n  key: SessionKeyType;\n  data: any;\n  expires: ExpiresType;\n}\n\nexport const setItem = ({ key, data, expires }: SetItemType) => {\n  sessionStorage.setItem(\n    String(key),\n    JSON.stringify({\n      expires,\n      data\n    })\n  );\n};\n\nexport const getItem = (key: SessionKeyType): any => {\n  const item = sessionStorage.getItem(String(key));\n  if (!item) {\n    return null;\n  }\n\n  const deserializedItem = JSON.parse(item);\n  if (!deserializedItem) {\n    return null;\n  }\n\n  if (\n    !deserializedItem.hasOwnProperty('expires') ||\n    !deserializedItem.hasOwnProperty('data')\n  ) {\n    return null;\n  }\n\n  const expired = Date.now() >= deserializedItem.expires;\n  if (expired) {\n    sessionStorage.removeItem(String(key));\n    return null;\n  }\n\n  return deserializedItem.data;\n};\n\nexport const removeItem = (key: SessionKeyType) =>\n  sessionStorage.removeItem(String(key));\n\nexport const clear = () => sessionStorage.clear();\n\nexport const storage = {\n  setItem,\n  getItem,\n  removeItem,\n  clear\n};\n"],
  "mappings": "sDAAA,0FASa,GAUA,EA2BA,EAGA,EAEA,EAnDb,aASO,AAAM,EAAU,CAAC,CAAE,MAAK,OAAM,aAA2B,CAC9D,eAAe,QACb,OAAO,CAAG,EACV,KAAK,UAAU,CACb,UACA,MACF,CAAC,CACH,CACF,EAEa,EAAU,AAAC,GAA6B,CACnD,GAAM,GAAO,eAAe,QAAQ,OAAO,CAAG,CAAC,EAC/C,GAAI,CAAC,EACH,MAAO,MAGT,GAAM,GAAmB,KAAK,MAAM,CAAI,EAKxC,MAJI,CAAC,GAKH,CAAC,EAAiB,eAAe,SAAS,GAC1C,CAAC,EAAiB,eAAe,MAAM,EAEhC,KAGO,KAAK,IAAI,GAAK,EAAiB,QAE7C,gBAAe,WAAW,OAAO,CAAG,CAAC,EAC9B,MAGF,EAAiB,IAC1B,EAEa,EAAa,AAAC,GACzB,eAAe,WAAW,OAAO,CAAG,CAAC,EAE1B,EAAQ,IAAM,eAAe,MAAM,EAEnC,EAAU,CACrB,UACA,UACA,aACA,OACF",
  "names": []
}
