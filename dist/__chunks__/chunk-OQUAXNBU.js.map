{
  "version": 3,
  "sources": ["../../src/UI/passkey/PasskeyLoginButton/PasskeyLoginButton.tsx"],
  "sourcesContent": ["import React, { ReactNode } from 'react';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\n\nimport { usePasskeyLogin } from 'hooks/login/usePasskeyLogin';\nimport { getIsNativeAuthSingingForbidden } from 'services/nativeAuth/helpers';\nimport { LoginButton } from 'UI/LoginButton/LoginButton';\nimport { OnProviderLoginType } from '../../../types';\nimport { WithClassnameType } from '../../types';\n\nexport interface PasskeyLoginButtonPropsType\n  extends WithClassnameType,\n    OnProviderLoginType {\n  children?: ReactNode;\n  buttonClassName?: string;\n  loginButtonText?: string;\n  disabled?: boolean;\n}\n\nconst PasskeyLoginButtonComponent: (\n  props: PasskeyLoginButtonPropsType & WithStylesImportType\n) => JSX.Element = ({\n  token,\n  className = 'dapp-passkey-login',\n  children,\n  callbackRoute,\n  buttonClassName = 'dapp-default-login-button',\n  nativeAuth,\n  loginButtonText = 'Passkey',\n  onLoginRedirect,\n  disabled\n}) => {\n  const [onInitiateLogin] = usePasskeyLogin({\n    callbackRoute,\n    token,\n    onLoginRedirect,\n    nativeAuth\n  });\n  const disabledConnectButton = getIsNativeAuthSingingForbidden(token);\n\n  const handleLogin = () => {\n    onInitiateLogin();\n  };\n\n  return (\n    <LoginButton\n      onLogin={handleLogin}\n      className={className}\n      btnClassName={buttonClassName}\n      text={loginButtonText}\n      disabled={disabled || disabledConnectButton}\n    >\n      {children}\n    </LoginButton>\n  );\n};\n\nexport const PasskeyLoginButton = withStyles(PasskeyLoginButtonComponent, {\n  ssrStyles: () =>\n    import(\n      'UI/extension/ExtensionLoginButton/extensionLoginButton.styles.scss'\n    ),\n  clientStyles: () =>\n    require('UI/extension/ExtensionLoginButton/extensionLoginButton.styles.scss')\n      .default\n});\n"],
  "mappings": "8PAAA,yBAkBA,GAAM,GAEa,CAAC,CAClB,QACA,YAAY,qBACZ,WACA,gBACA,kBAAkB,4BAClB,aACA,kBAAkB,UAClB,kBACA,cACI,CACJ,GAAM,CAAC,GAAmB,EAAgB,CACxC,gBACA,QACA,kBACA,YACF,CAAC,EACK,EAAwB,EAAgC,CAAK,EAMnE,MACE,iBAAC,GACC,QANgB,IAAM,CACxB,EAAgB,CAClB,EAKI,UAAW,EACX,aAAc,EACd,KAAM,EACN,SAAU,GAAY,GAErB,CACH,CAEJ,EAEa,EAAqB,EAAW,EAA6B,CACxE,UAAW,IACT,OACE,uEAEJ,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
