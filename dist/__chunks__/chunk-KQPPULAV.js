import{f as l}from"./chunk-4JP4CKHO.js";import{a as c}from"./chunk-PVNL3U3S.js";import{i as p,x as u}from"./chunk-UDZUNVED.js";import{p as g}from"./chunk-EOZJRV5E.js";import{a,d as T}from"./chunk-2SDQY5CF.js";import{j as s,m as i}from"./chunk-HBP5N4FR.js";i();u();T();import{ExtensionProvider as w}from"@multiversx/sdk-extension-provider";import{HWProvider as P}from"@multiversx/sdk-hw-provider";import{MetamaskProvider as f}from"@multiversx/sdk-metamask-provider/out/metamaskProvider";import{OperaProvider as h}from"@multiversx/sdk-opera-provider";import{PasskeyProvider as E}from"@multiversx/sdk-passkey-provider/out";import{WalletProvider as m}from"@multiversx/sdk-web-wallet-provider";g();var v="/dapp/init",z=o=>{switch(o==null?void 0:o.constructor){case m:return"wallet";case l:return"walletconnectv2";case P:return"ledger";case w:return"extension";case E:return"passkey";case f:return"metamask";case h:return"opera";case a:return"crossWindow";case c:return"iframe";case t:return"";default:return"extra"}},H=o=>new m(`${o}${v}`),N=o=>s(void 0,null,function*(){if(!o.isInitialized())throw new Error("Unable to get version. Provider not initialized");let r=o.hwApp,{contractData:e,version:d}=yield r.getAppConfiguration();return{version:d,dataEnabled:e===p}}),n=o=>`Unable to perform ${o}, Provider not initialized`,t=class{init(){return Promise.resolve(!1)}getAccount(){throw new Error(n("getAccount"))}setAccount(r){throw new Error(n(`setAccount: ${r}`))}login(r){throw new Error(n(`login with options: ${r}`))}logout(r){throw new Error(n(`logout with options: ${r}`))}getAddress(){throw new Error(n("getAddress"))}isInitialized(){return!1}isConnected(){return!1}sendTransaction(r,e){throw new Error(n(`sendTransaction with transactions: ${r} options: ${e}`))}signTransaction(r,e){throw new Error(n(`signTransaction with transactions: ${r} options: ${e}`))}signTransactions(r,e){throw new Error(n(`signTransactions with transactions: ${r} options: ${e}`))}signMessage(r,e){throw new Error(n(`signTransactions with ${r} and options ${e}`))}sendCustomMessage({method:r,params:e}){throw new Error(n(`sendCustomMessage with method: ${r} params: ${e}`))}sendCustomRequest(r){throw new Error(n(`sendSessionEvent with options: ${r}`))}ping(){return Promise.resolve(!1)}},V=new t;export{v as a,z as b,H as c,N as d,t as e,V as f};
//# sourceMappingURL=chunk-KQPPULAV.js.map
