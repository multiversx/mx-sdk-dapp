{
  "version": 3,
  "sources": ["../../src/UI/webWallet/CrossWindowLoginButton/CrossWindowLoginButton.tsx"],
  "sourcesContent": ["import React, { ReactNode } from 'react';\nimport { DataTestIdsEnum } from 'constants/dataTestIds.enum';\nimport { useCrossWindowLogin } from 'hooks';\nimport { getIsNativeAuthSingingForbidden } from 'services/nativeAuth/helpers';\nimport { LoginButton } from 'UI/LoginButton/LoginButton';\nimport { OnProviderLoginType } from '../../../types';\nimport { WithClassnameType } from '../../types';\n\nexport interface CrossWindowLoginButtonPropsType\n  extends WithClassnameType,\n    OnProviderLoginType {\n  children?: ReactNode;\n  buttonClassName?: string;\n  loginButtonText?: string;\n  disabled?: boolean;\n  hasConsentPopup?: boolean;\n}\n\nexport const CrossWindowLoginButton: (\n  props: CrossWindowLoginButtonPropsType\n) => JSX.Element = ({\n  token,\n  className = 'dapp-window-wallet-login',\n  children,\n  callbackRoute,\n  buttonClassName,\n  nativeAuth,\n  loginButtonText = 'Window Wallet',\n  onLoginRedirect,\n  disabled,\n  hasConsentPopup,\n  'data-testid': dataTestId = DataTestIdsEnum.accessCrossWindowWalletBtn\n}) => {\n  const disabledConnectButton = getIsNativeAuthSingingForbidden(token);\n  const [onInitiateLogin] = useCrossWindowLogin({\n    callbackRoute,\n    token,\n    onLoginRedirect,\n    nativeAuth,\n    hasConsentPopup\n  });\n\n  const handleLogin = () => {\n    onInitiateLogin();\n  };\n\n  return (\n    <LoginButton\n      onLogin={handleLogin}\n      className={className}\n      btnClassName={buttonClassName}\n      text={loginButtonText}\n      disabled={disabled || disabledConnectButton}\n      data-testid={dataTestId}\n    >\n      {children}\n    </LoginButton>\n  );\n};\n"],
  "mappings": "wMAAA,IACA,IADA,qBAkBO,GAAM,GAEM,CAAC,CAClB,QACA,YAAY,2BACZ,WACA,gBACA,kBACA,aACA,kBAAkB,gBAClB,kBACA,WACA,kBACA,cAAe,EAAa,gCACxB,CACJ,GAAM,GAAwB,EAAgC,CAAK,EAC7D,CAAC,GAAmB,EAAoB,CAC5C,gBACA,QACA,kBACA,aACA,iBACF,CAAC,EAMD,MACE,iBAAC,GACC,QANgB,IAAM,CACxB,EAAgB,CAClB,EAKI,UAAW,EACX,aAAc,EACd,KAAM,EACN,SAAU,GAAY,EACtB,cAAa,GAEZ,CACH,CAEJ",
  "names": []
}
