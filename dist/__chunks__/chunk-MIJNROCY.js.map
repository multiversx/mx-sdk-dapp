{
  "version": 3,
  "sources": ["../../src/UI/ledger/LedgerLoginContainer/LedgerProgressBar/LedgerProgressBar.tsx"],
  "sourcesContent": ["import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { LedgerAccountType } from 'reduxStore/slices';\n\nexport interface LedgerProgressBarPropsType {\n  error?: string;\n  ledgerAccount: LedgerAccountType | null;\n  ledgerProgressBarClassNames?: {\n    ledgerProgressBarTrackClassName?: string;\n    ledgerProgressBarThumbClassName?: string;\n  };\n  showAddressList: boolean;\n  showProgressBar?: boolean;\n}\n\nconst LedgerProgressBarComponent = ({\n  error,\n  ledgerAccount,\n  ledgerProgressBarClassNames,\n  showAddressList,\n  showProgressBar,\n  styles\n}: LedgerProgressBarPropsType & WithStylesImportType) => {\n  const progressStep = [\n    {\n      percentage: 33,\n      conditions: !showAddressList && !ledgerAccount\n    },\n    {\n      conditions: showAddressList && !error && !ledgerAccount,\n      percentage: 66\n    },\n    {\n      conditions: ledgerAccount != null && !error,\n      percentage: 100\n    }\n  ];\n\n  const currentProgress = useMemo(\n    () => progressStep.find((step) => step.conditions),\n    []\n  );\n\n  const percentage = currentProgress ? currentProgress.percentage : 33;\n\n  if (!showProgressBar) {\n    return null;\n  }\n\n  const { ledgerProgressBarTrackClassName, ledgerProgressBarThumbClassName } =\n    ledgerProgressBarClassNames || {};\n\n  return (\n    <div className={styles?.ledgerProgressBar}>\n      <div\n        className={classNames(\n          styles?.ledgerProgressBarTrack,\n          ledgerProgressBarTrackClassName\n        )}\n      />\n\n      <div\n        className={classNames(\n          styles?.ledgerProgressBarThumb,\n          ledgerProgressBarThumbClassName\n        )}\n        style={{ width: `${percentage}%` }}\n      />\n    </div>\n  );\n};\n\nexport const LedgerProgressBar = withStyles(LedgerProgressBarComponent, {\n  ssrStyles: () =>\n    import(\n      'UI/ledger/LedgerLoginContainer/LedgerProgressBar/progressBarStyles.scss'\n    ),\n  clientStyles: () =>\n    require('UI/ledger/LedgerLoginContainer/LedgerProgressBar/progressBarStyles.scss')\n      .default\n});\n"],
  "mappings": "sIAAA,uCACA,0BAeA,GAAM,GAA6B,CAAC,CAClC,QACA,gBACA,8BACA,kBACA,kBACA,YACuD,CACvD,GAAM,GAAe,CACnB,CACE,WAAY,GACZ,WAAY,CAAC,GAAmB,CAAC,CACnC,EACA,CACE,WAAY,GAAmB,CAAC,GAAS,CAAC,EAC1C,WAAY,EACd,EACA,CACE,WAAY,GAAiB,MAAQ,CAAC,EACtC,WAAY,GACd,CACF,EAEM,EAAkB,EACtB,IAAM,EAAa,KAAK,AAAC,GAAS,EAAK,UAAU,EACjD,CAAC,CACH,EAEM,EAAa,EAAkB,EAAgB,WAAa,GAElE,GAAI,CAAC,EACH,MAAO,MAGT,GAAM,CAAE,kCAAiC,mCACvC,GAA+B,CAAC,EAElC,MACE,iBAAC,OAAI,UAAW,iBAAQ,mBACtB,gBAAC,OACC,UAAW,EACT,iBAAQ,uBACR,CACF,EACF,EAEA,gBAAC,OACC,UAAW,EACT,iBAAQ,uBACR,CACF,EACA,MAAO,CAAE,MAAO,GAAG,IAAc,EACnC,CACF,CAEJ,EAEa,EAAoB,EAAW,EAA4B,CACtE,UAAW,IACT,OACE,4EAEJ,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
