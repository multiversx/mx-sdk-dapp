{
  "version": 3,
  "sources": ["../../src/UI/TransactionsToastList/components/TransactionToast/TransactionToast.tsx"],
  "sourcesContent": ["import React, { ReactNode } from 'react';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { Progress } from 'UI/Progress';\nimport { WithClassnameType } from '../../../types';\nimport { TransactionToastContent, TransactionToastWrapper } from './components';\nimport { useTransactionToast } from './hooks/useTransactionToast';\nimport {\n  TransactionToastCustomizationProps,\n  TransactionToastDefaultProps\n} from './transactionToast.type';\n\nexport interface TransactionToastPropsType\n  extends TransactionToastDefaultProps,\n    WithClassnameType {\n  title?: string | ReactNode;\n  children?: ReactNode;\n  customization?: TransactionToastCustomizationProps;\n}\n\nconst TransactionToastComponent = ({\n  className = 'dapp-transaction-toast',\n  customization,\n  endTimeProgress,\n  lifetimeAfterSuccess,\n  onDelete,\n  startTimestamp,\n  status,\n  styles,\n  title = '',\n  toastId,\n  transactions\n}: TransactionToastPropsType & WithStylesImportType) => {\n  const {\n    isCrossShard,\n    progress,\n    isPending,\n    isTimedOut,\n    toastDataState,\n    handleDeleteToast\n  } = useTransactionToast({\n    toastId,\n    transactions,\n    status,\n    lifetimeAfterSuccess,\n    startTimestamp,\n    endTimeProgress,\n    onDelete\n  });\n\n  const ProgressComponent = customization?.Progress ?? Progress;\n  const TransactionToastContentComponent =\n    customization?.TransactionToastContent ?? TransactionToastContent;\n\n  return (\n    <TransactionToastWrapper className={className} id={`toast-${toastId}`}>\n      <ProgressComponent\n        key={toastId}\n        id={toastId}\n        progress={progress}\n        expiresIn={lifetimeAfterSuccess}\n        done={!isPending || isTimedOut}\n        isCrossShard={isCrossShard}\n      >\n        <TransactionToastContentComponent\n          customElements={customization?.TransactionToastContentCustomElements}\n          isTimedOut={isTimedOut}\n          onDeleteToast={handleDeleteToast}\n          showCloseButton={!isPending}\n          style={styles ?? {}}\n          toastDataState={toastDataState}\n          toastTitle={title}\n          transactions={transactions ?? []}\n        />\n      </ProgressComponent>\n    </TransactionToastWrapper>\n  );\n};\n\nexport const TransactionToast = withStyles(TransactionToastComponent, {\n  ssrStyles: () =>\n    import(\n      'UI/TransactionsToastList/components/TransactionToast/transactionToast.styles.scss'\n    ),\n  clientStyles: () =>\n    require('UI/TransactionsToastList/components/TransactionToast/transactionToast.styles.scss')\n      .default\n});\n"],
  "mappings": "iSAAA,yBAmBA,GAAM,GAA4B,CAAC,CACjC,YAAY,yBACZ,gBACA,kBACA,uBACA,WACA,iBACA,SACA,SACA,QAAQ,GACR,UACA,kBACsD,CA/BxD,QAgCE,GAAM,CACJ,eACA,WACA,YACA,aACA,iBACA,qBACE,EAAoB,CACtB,UACA,eACA,SACA,uBACA,iBACA,kBACA,UACF,CAAC,EAEK,EAAoB,oBAAe,WAAf,OAA2B,EAC/C,EACJ,oBAAe,0BAAf,OAA0C,EAE5C,MACE,iBAAC,GAAwB,UAAW,EAAW,GAAI,SAAS,KAC1D,gBAAC,GACC,IAAK,EACL,GAAI,EACJ,SAAU,EACV,UAAW,EACX,KAAM,CAAC,GAAa,EACpB,aAAc,GAEd,gBAAC,GACC,eAAgB,iBAAe,sCAC/B,WAAY,EACZ,cAAe,EACf,gBAAiB,CAAC,EAClB,MAAO,UAAU,CAAC,EAClB,eAAgB,EAChB,WAAY,EACZ,aAAc,UAAgB,CAAC,EACjC,CACF,CACF,CAEJ,EAEa,EAAmB,EAAW,EAA2B,CACpE,UAAW,IACT,OACE,sFAEJ,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
