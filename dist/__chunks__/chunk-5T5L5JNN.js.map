{
  "version": 3,
  "sources": ["../../src/hooks/transactions/useGetActiveTransactionsStatus.ts"],
  "sourcesContent": ["import { useSelector } from 'reduxStore/DappProviderContext';\nimport {\n  failedTransactionsSelector,\n  pendingSignedTransactionsSelector,\n  successfulTransactionsSelector,\n  timedOutTransactionsSelector\n} from 'reduxStore/selectors';\n\nexport interface UseGetActiveTransactionsStatusReturnType {\n  timedOut: boolean;\n  fail: boolean;\n  success: boolean;\n  pending: boolean;\n}\n\n//this is a hook to be able to take advantage of memoization offered by useSelector\nexport function useGetActiveTransactionsStatus(): UseGetActiveTransactionsStatusReturnType {\n  const timedOutTransactions = useSelector(timedOutTransactionsSelector);\n  const failedTransactions = useSelector(failedTransactionsSelector);\n  const successfulTransactions = useSelector(successfulTransactionsSelector);\n  const pendingTransactions = useSelector(pendingSignedTransactionsSelector);\n\n  const pending = Object.keys(pendingTransactions)?.length > 0;\n\n  const timedOut = !pending && Object.keys(timedOutTransactions)?.length > 0;\n\n  const fail =\n    !pending && !timedOut && Object.keys(failedTransactions)?.length > 0;\n\n  const success =\n    !pending &&\n    !timedOut &&\n    !fail &&\n    Object.keys(successfulTransactions).length > 0;\n\n  return {\n    pending,\n    timedOut,\n    fail,\n    success\n  };\n}\n"],
  "mappings": "oJAAA,IACA,IAeO,YAAoF,CAhB3F,UAiBE,GAAM,GAAuB,EAAY,CAA4B,EAC/D,EAAqB,EAAY,CAA0B,EAC3D,EAAyB,EAAY,CAA8B,EACnE,EAAsB,EAAY,CAAiC,EAEnE,EAAU,WAAO,KAAK,CAAmB,IAA/B,cAAkC,QAAS,EAErD,EAAW,CAAC,GAAW,WAAO,KAAK,CAAoB,IAAhC,cAAmC,QAAS,EAEnE,EACJ,CAAC,GAAW,CAAC,GAAY,WAAO,KAAK,CAAkB,IAA9B,cAAiC,QAAS,EAE/D,EACJ,CAAC,GACD,CAAC,GACD,CAAC,GACD,OAAO,KAAK,CAAsB,EAAE,OAAS,EAE/C,MAAO,CACL,UACA,WACA,OACA,SACF,CACF",
  "names": []
}
