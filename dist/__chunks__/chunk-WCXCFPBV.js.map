{
  "version": 3,
  "sources": ["../../src/hooks/transactions/useTrackTransactionStatus.ts"],
  "sourcesContent": ["import { useEffect } from 'react';\nimport { useGetSignedTransactions } from 'hooks/transactions/useGetSignedTransactions';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport { transactionStatusSelector } from 'reduxStore/selectors';\nimport { RootState } from 'reduxStore/store';\nimport {\n  removeAllSignedTransactions,\n  removeAllTransactionsToSign\n} from 'services';\nimport {\n  LoginMethodsEnum,\n  TransactionBatchStatusesEnum\n} from 'types/enums.types';\nimport { getIsProviderEqualTo } from 'utils/account/getIsProviderEqualTo';\nimport {\n  getIsTransactionFailed,\n  getIsTransactionPending,\n  getIsTransactionSuccessful,\n  getIsTransactionTimedOut\n} from 'utils/transactions/transactionStateByStatus';\n\nexport interface UseTrackTransactionStatusArgsType {\n  transactionId: string | null;\n  onSuccess?: (transactionId: string | null) => void;\n  onFail?: (transactionId: string | null, errorMessage?: string) => void;\n  onTimedOut?: (transactionId: string | null) => void;\n  onCancelled?: (transactionId: string | null) => void;\n}\n\nexport function useTrackTransactionStatus({\n  transactionId: txId,\n  onSuccess,\n  onFail,\n  onCancelled,\n  onTimedOut\n}: UseTrackTransactionStatusArgsType) {\n  const { signedTransactionsArray } = useGetSignedTransactions();\n  const isWalletProvider = getIsProviderEqualTo(LoginMethodsEnum.wallet);\n\n  const [lastSessionId] =\n    signedTransactionsArray.length > 0\n      ? signedTransactionsArray[signedTransactionsArray.length - 1]\n      : [];\n\n  /**\n   * Web wallet restores sessionId, which is lost when redirecting,\n   * so we extract it from signedTransactions\n   */\n  const walletSessionId = txId ?? lastSessionId ?? null;\n\n  const transactionId = isWalletProvider ? walletSessionId : txId;\n\n  const transactionsBatch = useSelector((state: RootState) =>\n    transactionStatusSelector(state, transactionId)\n  );\n\n  const { status, transactions, errorMessage } = transactionsBatch;\n\n  const isPending = getIsTransactionPending(status);\n  const isFailed = getIsTransactionFailed(status);\n  const isTimedOut = getIsTransactionTimedOut(status);\n  const isSuccessful = getIsTransactionSuccessful(status);\n\n  const isCancelled = status === TransactionBatchStatusesEnum.cancelled;\n\n  /**\n   * Because wallet restores the session upon return,\n   * we make sure to execute the callback actions\n   * once, and then clear all transactions from store to\n   * prevent re-execution\n   */\n  function preventWalletDoubleCallback() {\n    if (isWalletProvider) {\n      removeAllSignedTransactions();\n      removeAllTransactionsToSign();\n    }\n  }\n\n  useEffect(() => {\n    if (isSuccessful && onSuccess) {\n      onSuccess(transactionId);\n    }\n  }, [isSuccessful]);\n\n  useEffect(() => {\n    if (isFailed && onFail) {\n      onFail(transactionId, errorMessage);\n      preventWalletDoubleCallback();\n    }\n  }, [isFailed]);\n\n  useEffect(() => {\n    if (isCancelled && onCancelled) {\n      onCancelled(transactionId);\n      preventWalletDoubleCallback();\n    }\n  }, [isCancelled]);\n\n  useEffect(() => {\n    if (isTimedOut) {\n      if (onTimedOut) {\n        onTimedOut(transactionId);\n      } else {\n        onFail?.(transactionId, 'timeout');\n      }\n    }\n  }, [isTimedOut]);\n\n  if (transactionId == null) {\n    return {};\n  }\n\n  if (transactionsBatch == null) {\n    return { errorMessage: 'No transaction to track' };\n  }\n\n  return {\n    isPending,\n    isSuccessful,\n    isFailed,\n    isCancelled,\n    errorMessage,\n    status,\n    transactions\n  };\n}\n"],
  "mappings": "0WAAA,sCAGA,IAMA,IAKA,IAeO,WAAmC,CACxC,cAAe,EACf,YACA,SACA,cACA,cACoC,CAnCtC,MAoCE,GAAM,CAAE,2BAA4B,EAAyB,EACvD,EAAmB,EAAqB,QAAuB,EAE/D,CAAC,GACL,EAAwB,OAAS,EAC7B,EAAwB,EAAwB,OAAS,GACzD,CAAC,EAMD,EAAkB,aAAQ,IAAR,OAAyB,KAE3C,EAAgB,EAAmB,EAAkB,EAErD,EAAoB,EAAY,AAAC,GACrC,EAA0B,EAAO,CAAa,CAChD,EAEM,CAAE,SAAQ,eAAc,gBAAiB,EAEzC,EAAY,EAAwB,CAAM,EAC1C,EAAW,EAAuB,CAAM,EACxC,EAAa,EAAyB,CAAM,EAC5C,EAAe,EAA2B,CAAM,EAEhD,EAAc,IAAW,YAQ/B,YAAuC,CACrC,AAAI,GACF,GAA4B,EAC5B,EAA4B,EAEhC,CAgCA,MA9BA,GAAU,IAAM,CACd,AAAI,GAAgB,GAClB,EAAU,CAAa,CAE3B,EAAG,CAAC,CAAY,CAAC,EAEjB,EAAU,IAAM,CACd,AAAI,GAAY,GACd,GAAO,EAAe,CAAY,EAClC,EAA4B,EAEhC,EAAG,CAAC,CAAQ,CAAC,EAEb,EAAU,IAAM,CACd,AAAI,GAAe,GACjB,GAAY,CAAa,EACzB,EAA4B,EAEhC,EAAG,CAAC,CAAW,CAAC,EAEhB,EAAU,IAAM,CACd,AAAI,GACF,CAAI,EACF,EAAW,CAAa,EAExB,WAAS,EAAe,WAG9B,EAAG,CAAC,CAAU,CAAC,EAEX,GAAiB,KACZ,CAAC,EAGN,GAAqB,KAChB,CAAE,aAAc,yBAA0B,EAG5C,CACL,YACA,eACA,WACA,cACA,eACA,SACA,cACF,CACF",
  "names": []
}
