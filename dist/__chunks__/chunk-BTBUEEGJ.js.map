{
  "version": 3,
  "sources": ["../../src/utils/operations/ledger/getLedgerVersionOptions.ts"],
  "sourcesContent": ["import {\n  LEDGER_HASH_SIGN_MINIMUM_VERSION,\n  LEDGER_MULTI_ACCOUNT_MINIMUM_VERSION,\n  LEDGER_SIGN_AUTH_TOKEN_MINIMUM_VERSION,\n  LEDGER_WITH_WHITELISTED_TOKENS_MINIMUM_VERSION,\n  LEDGER_WITH_GUARDIANS_MINIMUM_VERSION,\n  LEDGER_WITH_USERNAMES_MINIMUM_VERSION\n} from 'constants/index';\n\nfunction compareVersions(a: string, b: string) {\n  let i, diff;\n  const regExStrip0 = /(\\.0+)+$/;\n  const segmentsA = a.replace(regExStrip0, '').split('.');\n  const segmentsB = b.replace(regExStrip0, '').split('.');\n  const l = Math.min(segmentsA.length, segmentsB.length);\n\n  for (i = 0; i < l; i++) {\n    diff = parseInt(segmentsA[i], 10) - parseInt(segmentsB[i], 10);\n    if (diff) {\n      return diff;\n    }\n  }\n  return segmentsA.length - segmentsB.length;\n}\n\nexport function getLedgerVersionOptions(version: string) {\n  const sortedVersions = [\n    LEDGER_MULTI_ACCOUNT_MINIMUM_VERSION,\n    LEDGER_HASH_SIGN_MINIMUM_VERSION,\n    LEDGER_SIGN_AUTH_TOKEN_MINIMUM_VERSION,\n    LEDGER_WITH_WHITELISTED_TOKENS_MINIMUM_VERSION,\n    LEDGER_WITH_GUARDIANS_MINIMUM_VERSION,\n    LEDGER_WITH_USERNAMES_MINIMUM_VERSION,\n    version\n  ].sort((a, b) => compareVersions(a, b));\n\n  const indexOfMultiAccount = sortedVersions.indexOf(\n    LEDGER_MULTI_ACCOUNT_MINIMUM_VERSION\n  );\n  const indexOfHashSign = sortedVersions.indexOf(\n    LEDGER_HASH_SIGN_MINIMUM_VERSION\n  );\n  const indexOfSignAuthToken = sortedVersions.indexOf(\n    LEDGER_SIGN_AUTH_TOKEN_MINIMUM_VERSION\n  );\n  const indexOfWhitelistedTokens = sortedVersions.indexOf(\n    LEDGER_WITH_WHITELISTED_TOKENS_MINIMUM_VERSION\n  );\n  const indexOfGuardians = sortedVersions.indexOf(\n    LEDGER_WITH_GUARDIANS_MINIMUM_VERSION\n  );\n  const indexOfUsernames = sortedVersions.indexOf(\n    LEDGER_WITH_USERNAMES_MINIMUM_VERSION\n  );\n  const indexOfVersion = sortedVersions.indexOf(version);\n\n  return {\n    ledgerWithMultiAccount: indexOfVersion >= indexOfMultiAccount,\n    ledgerWithHashSign: indexOfVersion >= indexOfHashSign,\n    ledgerWithSignAuthToken: indexOfVersion >= indexOfSignAuthToken,\n    ledgerWithWhitelistedTokens: indexOfVersion >= indexOfWhitelistedTokens,\n    ledgerWithGuardians: indexOfVersion >= indexOfGuardians,\n    ledgerWithUsernames: indexOfVersion >= indexOfUsernames\n  };\n}\n\nexport default getLedgerVersionOptions;\n"],
  "mappings": "kKASA,WAAyB,EAAW,EAAW,CAC7C,GAAI,GAAG,EACD,EAAc,WACd,EAAY,EAAE,QAAQ,EAAa,EAAE,EAAE,MAAM,GAAG,EAChD,EAAY,EAAE,QAAQ,EAAa,EAAE,EAAE,MAAM,GAAG,EAChD,EAAI,KAAK,IAAI,EAAU,OAAQ,EAAU,MAAM,EAErD,IAAK,EAAI,EAAG,EAAI,EAAG,IAEjB,GADA,EAAO,SAAS,EAAU,GAAI,EAAE,EAAI,SAAS,EAAU,GAAI,EAAE,EACzD,EACF,MAAO,GAGX,MAAO,GAAU,OAAS,EAAU,MACtC,CAEO,WAAiC,EAAiB,CACvD,GAAM,GAAiB,CACrB,EACA,EACA,EACA,EACA,EACA,EACA,CACF,EAAE,KAAK,CAAC,EAAG,IAAM,EAAgB,EAAG,CAAC,CAAC,EAEhC,EAAsB,EAAe,QACzC,CACF,EACM,EAAkB,EAAe,QACrC,CACF,EACM,EAAuB,EAAe,QAC1C,CACF,EACM,EAA2B,EAAe,QAC9C,CACF,EACM,EAAmB,EAAe,QACtC,CACF,EACM,EAAmB,EAAe,QACtC,CACF,EACM,EAAiB,EAAe,QAAQ,CAAO,EAErD,MAAO,CACL,uBAAwB,GAAkB,EAC1C,mBAAoB,GAAkB,EACtC,wBAAyB,GAAkB,EAC3C,4BAA6B,GAAkB,EAC/C,oBAAqB,GAAkB,EACvC,oBAAqB,GAAkB,CACzC,CACF,CAhEA,GAkEO,GAlEP,iBAkEA,AAAO,EAAQ",
  "names": []
}
