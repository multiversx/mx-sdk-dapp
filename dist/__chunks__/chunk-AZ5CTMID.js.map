{
  "version": 3,
  "sources": ["../../src/hooks/transactions/useCancelWalletConnectAction.tsx"],
  "sourcesContent": ["import { useGetAccountProvider } from 'hooks/account/useGetAccountProvider';\nimport { LoginMethodsEnum } from 'types';\nimport { getIsProviderEqualTo } from 'utils/account/getIsProviderEqualTo';\nimport { WalletConnectOptionalMethodsEnum } from 'utils/walletconnect/__sdkWalletconnectProvider';\n\nexport function useCancelWalletConnectAction(action?: string) {\n  const { provider } = useGetAccountProvider();\n\n  async function cancelWalletConnectAction() {\n    if (!provider) {\n      return;\n    }\n\n    if (getIsProviderEqualTo(LoginMethodsEnum.walletconnectv2)) {\n      await cancelActionV2();\n    }\n\n    return;\n  }\n\n  async function cancelActionV2() {\n    try {\n      if (\n        !provider ||\n        !getIsProviderEqualTo(LoginMethodsEnum.walletconnectv2)\n      ) {\n        return;\n      }\n\n      await provider?.sendCustomRequest?.({\n        request: {\n          method: WalletConnectOptionalMethodsEnum.CANCEL_ACTION,\n          params: { action }\n        }\n      });\n    } catch (error) {\n      console.warn('WalletConnectV2: Unable to send cancelAction event', error);\n    }\n  }\n\n  return { cancelActionV2, cancelWalletConnectAction };\n}\n"],
  "mappings": "+MAAA,IACA,IAIO,WAAsC,EAAiB,CAC5D,GAAM,CAAE,YAAa,EAAsB,EAE3C,YAA2C,gCACzC,AAAI,CAAC,GAID,EAAqB,iBAAgC,GACvD,MAAM,GAAe,EAIzB,GAEA,YAAgC,gCApBlC,MAqBI,GAAI,CACF,GACE,CAAC,GACD,CAAC,EAAqB,iBAAgC,EAEtD,OAGF,KAAM,oBAAU,oBAAV,qBAA8B,CAClC,QAAS,CACP,OAAQ,EAAiC,cACzC,OAAQ,CAAE,QAAO,CACnB,CACF,EACF,OAAS,EAAP,CACA,QAAQ,KAAK,qDAAsD,CAAK,CAC1E,CACF,GAEA,MAAO,CAAE,iBAAgB,2BAA0B,CACrD",
  "names": []
}
