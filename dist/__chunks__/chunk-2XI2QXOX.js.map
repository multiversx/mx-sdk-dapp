{
  "version": 3,
  "sources": ["../../src/UI/walletConnect/WalletConnectLoginButton/WalletConnectLoginButton.tsx"],
  "sourcesContent": ["import React from 'react';\n\nimport { useGetModalLoginMethods } from 'hooks';\n\nimport { LoginButton } from '../../LoginButton/LoginButton';\nimport { WalletConnectLoginContainer } from '../WalletConnectLoginContainer';\nimport { WalletConnectLoginButtonPropsType } from './types';\n\nexport const WalletConnectLoginButton = ({\n  buttonClassName = 'dapp-wallet-connect-login-button',\n  callbackRoute,\n  children,\n  className = 'dapp-wallet-connect-login',\n  customSpinnerComponent,\n  'data-testid': dataTestId,\n  disabled,\n  hideButtonWhenModalOpens = false,\n  innerWalletConnectComponentsClasses,\n  isWalletConnectV2 = true,\n  lead = 'Scan the QR code using the xPortal App',\n  loginButtonText = 'xPortal App',\n  logoutRoute,\n  modalClassName,\n  nativeAuth,\n  onLoginRedirect,\n  onContentHide,\n  onContentShow,\n  onModalCloses,\n  onModalOpens,\n  showScamPhishingAlert,\n  title = 'Login with the xPortal App',\n  token,\n  wrapContentInsideModal = true,\n  customRequestMethods = []\n}: WalletConnectLoginButtonPropsType) => {\n  const {\n    disabledConnectButton,\n    handleCloseModal,\n    handleOpenModal,\n    shouldRenderButton,\n    showContent,\n    showModal\n  } = useGetModalLoginMethods({\n    hideButtonWhenModalOpens,\n    onContentHide,\n    onContentShow,\n    onModalCloses,\n    onModalOpens,\n    token,\n    wrapContentInsideModal\n  });\n\n  return (\n    <>\n      {shouldRenderButton && (\n        <LoginButton\n          btnClassName={buttonClassName}\n          className={className}\n          data-testid={dataTestId}\n          disabled={disabled || disabledConnectButton}\n          onLogin={handleOpenModal}\n          text={loginButtonText}\n        >\n          {children}\n        </LoginButton>\n      )}\n\n      <WalletConnectLoginContainer\n        callbackRoute={callbackRoute}\n        className={modalClassName}\n        customSpinnerComponent={customSpinnerComponent}\n        innerWalletConnectComponentsClasses={\n          innerWalletConnectComponentsClasses\n        }\n        isWalletConnectV2={isWalletConnectV2}\n        lead={lead}\n        loginButtonText={loginButtonText}\n        logoutRoute={logoutRoute}\n        nativeAuth={nativeAuth}\n        onClose={handleCloseModal}\n        onLoginRedirect={onLoginRedirect}\n        showLoginContent={showContent}\n        showLoginModal={showModal}\n        showScamPhishingAlert={showScamPhishingAlert}\n        title={title}\n        token={token}\n        wrapContentInsideModal={wrapContentInsideModal}\n        customRequestMethods={customRequestMethods}\n      />\n    </>\n  );\n};\n"],
  "mappings": "2JAAA,yBAQO,GAAM,GAA2B,CAAC,CACvC,kBAAkB,mCAClB,gBACA,WACA,YAAY,4BACZ,yBACA,cAAe,EACf,WACA,2BAA2B,GAC3B,sCACA,oBAAoB,GACpB,OAAO,yCACP,kBAAkB,cAClB,cACA,iBACA,aACA,kBACA,gBACA,gBACA,gBACA,eACA,wBACA,QAAQ,6BACR,QACA,yBAAyB,GACzB,uBAAuB,CAAC,KACe,CACvC,GAAM,CACJ,wBACA,mBACA,kBACA,qBACA,cACA,aACE,EAAwB,CAC1B,2BACA,gBACA,gBACA,gBACA,eACA,QACA,wBACF,CAAC,EAED,MACE,iCACG,GACC,gBAAC,GACC,aAAc,EACd,UAAW,EACX,cAAa,EACb,SAAU,GAAY,EACtB,QAAS,EACT,KAAM,GAEL,CACH,EAGF,gBAAC,GACC,cAAe,EACf,UAAW,EACX,uBAAwB,EACxB,oCACE,EAEF,kBAAmB,EACnB,KAAM,EACN,gBAAiB,EACjB,YAAa,EACb,WAAY,EACZ,QAAS,EACT,gBAAiB,EACjB,iBAAkB,EAClB,eAAgB,EAChB,sBAAuB,EACvB,MAAO,EACP,MAAO,EACP,uBAAwB,EACxB,qBAAsB,EACxB,CACF,CAEJ",
  "names": []
}
