{
  "version": 3,
  "sources": ["../../src/UI/TransactionsToastList/TransactionsToastList.tsx"],
  "sourcesContent": ["import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport classNames from 'classnames';\nimport { createPortal } from 'react-dom';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { useGetSignedTransactions } from 'hooks/transactions/useGetSignedTransactions';\nimport { useDispatch, useSelector } from 'reduxStore/DappProviderContext';\nimport {\n  customToastsSelector,\n  transactionToastsSelector\n} from 'reduxStore/selectors/toastsSelectors';\nimport { addTransactionToast, removeTransactionToast } from 'reduxStore/slices';\nimport { store } from 'reduxStore/store';\nimport { removeSignedTransaction } from 'services';\nimport {\n  SignedTransactionsBodyType,\n  SignedTransactionsType,\n  TransactionBatchStatusesEnum\n} from 'types';\nimport { TransactionToastType } from 'types/toasts.types';\n\nimport {\n  deleteCustomToast,\n  getRegisteredCustomIconComponents,\n  getRegisteredToastCloseHandler\n} from 'utils/toasts/customToastsActions';\nimport { getIsTransactionPending } from 'utils/transactions/transactionStateByStatus';\n\nimport { WithClassnameType } from '../types';\nimport {\n  CustomToast,\n  TransactionToastGuard,\n  TransactionToastGuardPropsType\n} from './components';\n\nexport interface TransactionsToastListPropsType extends WithClassnameType {\n  toastProps?: any;\n  withTxNonce?: boolean;\n  signedTransactions?: SignedTransactionsType;\n  successfulToastLifetime?: number;\n  parentElement?: Element | DocumentFragment;\n  transactionToastClassName?: string;\n  customToastClassName?: string;\n  children?: React.ReactNode;\n}\n\nexport const TransactionsToastListComponent = ({\n  className = 'transactions-toast-list',\n  transactionToastClassName,\n  customToastClassName,\n  signedTransactions,\n  successfulToastLifetime,\n  parentElement,\n  children,\n  styles\n}: TransactionsToastListPropsType & WithStylesImportType) => {\n  const [isBrowser, setIsBrowser] = useState(false);\n  const customToasts = useSelector(customToastsSelector);\n  const transactionsToasts = useSelector(transactionToastsSelector);\n  const dispatch = useDispatch();\n\n  const { signedTransactions: signedTransactionsFromStore } =\n    useGetSignedTransactions();\n\n  const signedTransactionsToRender =\n    signedTransactions || signedTransactionsFromStore;\n\n  const signedTransactionsToRenderRef = useRef(signedTransactionsToRender);\n\n  useEffect(() => {\n    signedTransactionsToRenderRef.current = signedTransactionsToRender;\n  }, [signedTransactionsToRender]);\n\n  const handleDeleteCustomToast = (toastId: string) => {\n    deleteCustomToast(toastId);\n  };\n\n  const handleDeleteTransactionToast = (toastId: string) => {\n    dispatch(removeTransactionToast(toastId));\n    removeSignedTransaction(toastId);\n  };\n\n  const handleSignedTransactionsListUpdate = useCallback(() => {\n    for (const sessionId in signedTransactionsToRender) {\n      const session = signedTransactionsToRender[sessionId];\n      const skipSending =\n        session?.customTransactionInformation?.signWithoutSending;\n\n      if (skipSending) {\n        continue;\n      }\n\n      const alreadyHasToastForThisSession = transactionsToasts.some(\n        (toast: TransactionToastType): boolean =>\n          `${toast.toastId}` === `${sessionId}`\n      );\n\n      if (!alreadyHasToastForThisSession) {\n        dispatch(addTransactionToast(sessionId));\n      }\n    }\n  }, [dispatch, signedTransactionsToRender, transactionsToasts]);\n\n  useEffect(() => {\n    handleSignedTransactionsListUpdate();\n  }, [signedTransactionsToRender, handleSignedTransactionsListUpdate]);\n\n  const MemoizedTransactionsToastsList = useMemo(\n    () =>\n      transactionsToasts.map(\n        ({ toastId, type, startTimestamp }: TransactionToastType, i) => {\n          const transactionToastGuardProps: TransactionToastGuardPropsType = {\n            signedTransactionsToRender,\n            toastId,\n            type,\n            startTimestamp,\n            successfulToastLifetime,\n            handleDeleteTransactionToast,\n            className: transactionToastClassName\n          };\n          return (\n            <TransactionToastGuard\n              {...transactionToastGuardProps}\n              key={startTimestamp + i}\n            />\n          );\n        }\n      ),\n    [\n      transactionsToasts,\n      signedTransactionsToRender,\n      successfulToastLifetime,\n      handleDeleteTransactionToast,\n      transactionToastClassName\n    ]\n  );\n\n  const customToastsList = customToasts.map((props) => {\n    const CustomComponent =\n      getRegisteredCustomIconComponents(props.toastId) ?? null;\n    const onCloseHandler = getRegisteredToastCloseHandler(props.toastId);\n\n    return (\n      <CustomToast\n        key={props.toastId}\n        {...props}\n        component={CustomComponent as never}\n        onDelete={() => {\n          handleDeleteCustomToast(props.toastId);\n          onCloseHandler?.();\n        }}\n        className={customToastClassName}\n      />\n    );\n  });\n\n  const clearNotPendingTransactionsFromStorage = () => {\n    const toasts = transactionToastsSelector(store.getState());\n\n    toasts.forEach((transactionToast: TransactionToastType) => {\n      const currentTx: SignedTransactionsBodyType =\n        signedTransactionsToRenderRef.current[transactionToast.toastId];\n\n      if (!currentTx) {\n        return;\n      }\n\n      const { status } = currentTx;\n      const isPending = getIsTransactionPending(status);\n      const isSigned = status === TransactionBatchStatusesEnum.signed;\n\n      if (!isPending && !isSigned) {\n        handleDeleteTransactionToast(transactionToast.toastId);\n      }\n    });\n  };\n\n  useEffect(() => {\n    setIsBrowser(true);\n\n    window?.addEventListener(\n      'beforeunload',\n      clearNotPendingTransactionsFromStorage\n    );\n\n    return () => {\n      window?.removeEventListener(\n        'beforeunload',\n        clearNotPendingTransactionsFromStorage\n      );\n    };\n  }, []);\n\n  return (\n    <>\n      {isBrowser &&\n        createPortal(\n          <div className={classNames(styles?.toasts, className)}>\n            {customToastsList}\n            {MemoizedTransactionsToastsList}\n            {children}\n          </div>,\n          parentElement || document?.body\n        )}\n    </>\n  );\n};\n\nexport const TransactionsToastList = withStyles(\n  TransactionsToastListComponent,\n  {\n    ssrStyles: () =>\n      import('UI/TransactionsToastList/transactionsToastList.styles.scss'),\n    clientStyles: () =>\n      require('UI/TransactionsToastList/transactionsToastList.styles.scss')\n        .default\n  }\n);\n"],
  "mappings": "+qBAAA,qGAOA,2BACA,0CAIA,IAIA,IACA,KAEA,IAYA,IAoBO,GAAM,IAAiC,CAAC,CAC7C,YAAY,0BACZ,4BACA,uBACA,qBACA,0BACA,gBACA,WACA,YAC2D,CAC3D,GAAM,CAAC,EAAW,GAAgB,GAAS,EAAK,EAC1C,EAAe,EAAY,CAAoB,EAC/C,EAAqB,EAAY,CAAyB,EAC1D,EAAW,EAAY,EAEvB,CAAE,mBAAoB,GAC1B,EAAyB,EAErB,EACJ,GAAsB,EAElB,EAAgC,GAAO,CAA0B,EAEvE,EAAU,IAAM,CACd,EAA8B,QAAU,CAC1C,EAAG,CAAC,CAA0B,CAAC,EAE/B,GAAM,GAA0B,AAAC,GAAoB,CACnD,EAAkB,CAAO,CAC3B,EAEM,EAA+B,AAAC,GAAoB,CACxD,EAAS,EAAuB,CAAO,CAAC,EACxC,EAAwB,CAAO,CACjC,EAEM,EAAqC,GAAY,IAAM,CAvF/D,MAwFI,OAAW,KAAa,GAA4B,CAClD,GAAM,GAAU,EAA2B,GAI3C,GAFE,oBAAS,+BAAT,cAAuC,mBAGvC,SAQF,AAAK,AALiC,EAAmB,KACvD,AAAC,GACC,GAAG,EAAM,WAAc,GAAG,GAC9B,GAGE,EAAS,EAAoB,CAAS,CAAC,CAE3C,CACF,EAAG,CAAC,EAAU,EAA4B,CAAkB,CAAC,EAE7D,EAAU,IAAM,CACd,EAAmC,CACrC,EAAG,CAAC,EAA4B,CAAkC,CAAC,EAEnE,GAAM,GAAiC,GACrC,IACE,EAAmB,IACjB,CAAC,CAAE,UAAS,OAAM,kBAAwC,IAWtD,gBAAC,SAVgE,CACjE,6BACA,UACA,OACA,iBACA,0BACA,+BACA,UAAW,CACb,GAEG,CAEC,IAAK,EAAiB,GACxB,CAGN,EACF,CACE,EACA,EACA,EACA,EACA,CACF,CACF,EAEM,EAAmB,EAAa,IAAI,AAAC,GAAU,CA9IvD,MA+II,GAAM,GACJ,KAAkC,EAAM,OAAO,IAA/C,OAAoD,KAChD,EAAiB,EAA+B,EAAM,OAAO,EAEnE,MACE,iBAAC,OACC,IAAK,EAAM,SACP,GAFL,CAGC,UAAW,EACX,SAAU,IAAM,CACd,EAAwB,EAAM,OAAO,EACrC,YACF,EACA,UAAW,GACb,CAEJ,CAAC,EAEK,EAAyC,IAAM,CAGnD,AAFe,EAA0B,EAAM,SAAS,CAAC,EAElD,QAAQ,AAAC,GAA2C,CACzD,GAAM,GACJ,EAA8B,QAAQ,EAAiB,SAEzD,GAAI,CAAC,EACH,OAGF,GAAM,CAAE,UAAW,EACb,EAAY,EAAwB,CAAM,EAC1C,EAAW,IAAW,SAE5B,AAAI,CAAC,GAAa,CAAC,GACjB,EAA6B,EAAiB,OAAO,CAEzD,CAAC,CACH,EAEA,SAAU,IACR,GAAa,EAAI,EAEjB,qBAAQ,iBACN,eACA,GAGK,IAAM,CACX,qBAAQ,oBACN,eACA,EAEJ,GACC,CAAC,CAAC,EAGH,gCACG,GACC,GACE,gBAAC,OAAI,UAAW,GAAW,iBAAQ,OAAQ,CAAS,GACjD,EACA,EACA,CACH,EACA,GAAiB,gCAAU,KAC7B,CACJ,CAEJ,EAEa,GAAwB,EACnC,GACA,CACE,UAAW,IACT,OAAO,+DACT,aAAc,IACZ,aACG,OACP,CACF",
  "names": []
}
