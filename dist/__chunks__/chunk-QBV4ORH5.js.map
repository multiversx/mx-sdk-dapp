{
  "version": 3,
  "sources": ["../../src/UI/TransactionInfo/components/TransactionStatus/TransactionStatus.tsx"],
  "sourcesContent": ["import React from 'react';\nimport {\n  faHourglass,\n  faTimes,\n  faBan,\n  faCheckCircle\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { InterpretedTransactionType } from 'types/serverTransactions.types';\nimport {\n  getTransactionStatus,\n  getTransactionStatusText\n} from 'utils/transactions/transactionInfoHelpers';\nimport { WithClassnameType, WithTransactionType } from '../../../../UI/types';\n\nexport const getStatusIconAndColor = (\n  transaction: InterpretedTransactionType,\n  globalStyles?: WithStylesImportType['globalStyles']\n) => {\n  let Icon = () => <></>;\n  let color = '';\n\n  const { failed, invalid, pending, success } =\n    getTransactionStatus(transaction);\n\n  if (transaction.pendingResults) {\n    color = globalStyles?.textWarning;\n    Icon = () => (\n      <FontAwesomeIcon\n        icon={faHourglass}\n        className={classNames(globalStyles?.mr2, color)}\n      />\n    );\n  }\n\n  if (failed) {\n    color = globalStyles?.textDanger;\n    Icon = () => (\n      <FontAwesomeIcon\n        icon={faTimes}\n        className={classNames(globalStyles?.mr2, color)}\n      />\n    );\n  }\n\n  if (invalid) {\n    color = globalStyles?.textDanger;\n    Icon = () => (\n      <FontAwesomeIcon\n        icon={faBan}\n        className={classNames(globalStyles?.mr2, color)}\n      />\n    );\n  }\n\n  if (success) {\n    color = globalStyles?.textSuccess;\n    Icon = () => (\n      <FontAwesomeIcon\n        icon={faCheckCircle}\n        className={classNames(globalStyles?.mr2, color)}\n      />\n    );\n  }\n\n  if (pending) {\n    color = globalStyles?.textWarning;\n    Icon = () => (\n      <FontAwesomeIcon\n        icon={faHourglass}\n        className={classNames(globalStyles?.mr2, color)}\n      />\n    );\n  }\n\n  return {\n    Icon,\n    color\n  };\n};\n\nconst TransactionStatusComponent = ({\n  className,\n  transaction,\n  globalStyles\n}: WithTransactionType & WithClassnameType & WithStylesImportType) => {\n  const { Icon } = getStatusIconAndColor(transaction, globalStyles);\n\n  return (\n    <span\n      className={classNames(\n        globalStyles?.dFlex,\n        globalStyles?.alignItemsCenter,\n        globalStyles?.textCapitalize,\n        globalStyles?.mr2,\n        className\n      )}\n    >\n      <Icon />\n\n      {getTransactionStatusText(transaction)}\n    </span>\n  );\n};\n\nexport const TransactionStatus = withStyles(TransactionStatusComponent, {});\n"],
  "mappings": "wMAAA,yBACA,2GAMA,iEACA,0BAGA,IAMO,GAAM,GAAwB,CACnC,EACA,IACG,CACH,GAAI,GAAO,IAAM,+BAAE,EACf,EAAQ,GAEN,CAAE,SAAQ,UAAS,UAAS,WAChC,EAAqB,CAAW,EAElC,MAAI,GAAY,gBACd,GAAQ,iBAAc,YACtB,EAAO,IACL,gBAAC,GACC,KAAM,EACN,UAAW,EAAW,iBAAc,IAAK,CAAK,EAChD,GAIA,GACF,GAAQ,iBAAc,WACtB,EAAO,IACL,gBAAC,GACC,KAAM,EACN,UAAW,EAAW,iBAAc,IAAK,CAAK,EAChD,GAIA,GACF,GAAQ,iBAAc,WACtB,EAAO,IACL,gBAAC,GACC,KAAM,EACN,UAAW,EAAW,iBAAc,IAAK,CAAK,EAChD,GAIA,GACF,GAAQ,iBAAc,YACtB,EAAO,IACL,gBAAC,GACC,KAAM,EACN,UAAW,EAAW,iBAAc,IAAK,CAAK,EAChD,GAIA,GACF,GAAQ,iBAAc,YACtB,EAAO,IACL,gBAAC,GACC,KAAM,EACN,UAAW,EAAW,iBAAc,IAAK,CAAK,EAChD,GAIG,CACL,OACA,OACF,CACF,EAEM,EAA6B,CAAC,CAClC,YACA,cACA,kBACoE,CACpE,GAAM,CAAE,QAAS,EAAsB,EAAa,CAAY,EAEhE,MACE,iBAAC,QACC,UAAW,EACT,iBAAc,MACd,iBAAc,iBACd,iBAAc,eACd,iBAAc,IACd,CACF,GAEA,gBAAC,MAAK,EAEL,EAAyB,CAAW,CACvC,CAEJ,EAEa,EAAoB,EAAW,EAA4B,CAAC,CAAC",
  "names": []
}
