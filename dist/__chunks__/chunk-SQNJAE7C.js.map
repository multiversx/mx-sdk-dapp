{
  "version": 3,
  "sources": ["../../src/wrappers/AuthenticatedRoutesWrapper/AuthenticatedRoutesWrapper.tsx"],
  "sourcesContent": ["import React, { ReactNode, useEffect } from 'react';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport {\n  isAccountLoadingSelector,\n  isLoggedInSelector,\n  walletLoginSelector\n} from 'reduxStore/selectors';\n\nimport { RouteType } from 'types';\nimport { getSearchParamAddress } from 'utils/account/getSearchParamAddress';\nimport { getWebviewToken } from 'utils/account/getWebviewToken';\nimport { isWindowAvailable } from 'utils/isWindowAvailable';\nimport { safeRedirect } from 'utils/redirect';\nimport { matchRoute } from './helpers/matchRoute';\n\nexport const AuthenticatedRoutesWrapper = ({\n  children,\n  routes,\n  pathName,\n  unlockRoute,\n  onRedirect\n}: {\n  children: ReactNode;\n  routes: RouteType[];\n  pathName?: string;\n  unlockRoute: string;\n  onRedirect?: (unlockRoute?: string) => void;\n}) => {\n  const searchParamAddress = getSearchParamAddress();\n  const isLoggedIn = useSelector(isLoggedInSelector);\n  const isAccountLoading = useSelector(isAccountLoadingSelector);\n  const walletLogin = useSelector(walletLoginSelector);\n  const isWebviewLogin = Boolean(getWebviewToken());\n\n  const getLocationPathname = () => {\n    if (isWindowAvailable()) {\n      return window.location.pathname;\n    }\n    return '';\n  };\n\n  const isOnAuthenticatedRoute = matchRoute(\n    routes,\n    pathName ?? getLocationPathname()\n  );\n\n  const shouldRedirect =\n    isOnAuthenticatedRoute &&\n    !isLoggedIn &&\n    walletLogin == null &&\n    !isWebviewLogin;\n\n  useEffect(() => {\n    if (!shouldRedirect) {\n      return;\n    }\n\n    if (onRedirect) {\n      return onRedirect(unlockRoute);\n    }\n\n    safeRedirect({ url: unlockRoute });\n  }, [shouldRedirect, unlockRoute]);\n\n  const isValidWalletLoginAttempt = walletLogin != null && searchParamAddress;\n\n  if (isAccountLoading || isValidWalletLoginAttempt) {\n    return null;\n  }\n\n  return <>{children}</>;\n};\n"],
  "mappings": "gaAAA,yCAEA,IASA,IACA,IAGO,GAAM,GAA6B,CAAC,CACzC,WACA,SACA,WACA,cACA,gBAOI,CACJ,GAAM,GAAqB,EAAsB,EAC3C,EAAa,EAAY,CAAkB,EAC3C,EAAmB,EAAY,CAAwB,EACvD,EAAc,EAAY,CAAmB,EAC7C,EAAiB,QAAQ,EAAgB,CAAC,EAE1C,EAAsB,IACtB,EAAkB,EACb,OAAO,SAAS,SAElB,GAQH,EACJ,AAN6B,EAC7B,EACA,UAAY,EAAoB,CAClC,GAIE,CAAC,GACD,GAAe,MACf,CAAC,EAEH,EAAU,IAAM,CACd,GAAI,EAAC,EAIL,IAAI,EACF,MAAO,GAAW,CAAW,EAG/B,EAAa,CAAE,IAAK,CAAY,CAAC,EACnC,EAAG,CAAC,EAAgB,CAAW,CAAC,EAEhC,GAAM,GAA4B,GAAe,MAAQ,EAEzD,MAAI,IAAoB,EACf,KAGF,gCAAG,CAAS,CACrB",
  "names": []
}
