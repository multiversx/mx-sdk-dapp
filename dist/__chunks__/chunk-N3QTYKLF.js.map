{
  "version": 3,
  "sources": ["../../src/utils/transactions/getInterpretedTransaction/helpers/getHumanReadableTimeFormat.ts"],
  "sourcesContent": ["export interface GetHumanReadableTimeFormatType {\n  value: number;\n  noSeconds?: boolean;\n  utc?: boolean;\n  meridiem?: boolean;\n}\n\n/**\n * @param value - UNIX timestamp\n * */\nexport function getHumanReadableTimeFormat({\n  value,\n  noSeconds,\n  utc,\n  meridiem = true\n}: GetHumanReadableTimeFormatType) {\n  const utcDate = new Date(value * 1000);\n  const [, AmPm] = utcDate\n    .toLocaleString('en-US', { hour: 'numeric', hour12: meridiem })\n    .split(' ');\n  const formatted = utcDate.toUTCString();\n  const [, date] = formatted.split(',');\n  const [day, month, year, time] = date.trim().split(' ');\n  const [hours, minutes, sec] = time.split(':');\n  const seconds = `:${sec}`;\n  const timeFormatted = `${hours}:${minutes}${noSeconds ? '' : seconds}`;\n  const utcSuffix = utc ? 'UTC' : '';\n  const meridiemSuffix = meridiem ? AmPm : '';\n  const suffix = `${meridiemSuffix} ${utcSuffix}`.trim();\n\n  return `${month} ${day}, ${year} ${timeFormatted} ${suffix}`.trim();\n}\n"],
  "mappings": "+CAUO,WAAoC,CACzC,QACA,YACA,MACA,WAAW,IACsB,CACjC,GAAM,GAAU,GAAI,MAAK,EAAQ,GAAI,EAC/B,CAAC,CAAE,GAAQ,EACd,eAAe,QAAS,CAAE,KAAM,UAAW,OAAQ,CAAS,CAAC,EAC7D,MAAM,GAAG,EACN,EAAY,EAAQ,YAAY,EAChC,CAAC,CAAE,GAAQ,EAAU,MAAM,GAAG,EAC9B,CAAC,EAAK,EAAO,EAAM,GAAQ,EAAK,KAAK,EAAE,MAAM,GAAG,EAChD,CAAC,EAAO,EAAS,GAAO,EAAK,MAAM,GAAG,EACtC,EAAU,IAAI,IACd,EAAgB,GAAG,KAAS,IAAU,EAAY,GAAK,IAGvD,EAAS,GADQ,EAAW,EAAO,MADvB,EAAM,MAAQ,KAEgB,KAAK,EAErD,MAAO,GAAG,KAAS,MAAQ,KAAQ,KAAiB,IAAS,KAAK,CACpE,CA/BA",
  "names": []
}
