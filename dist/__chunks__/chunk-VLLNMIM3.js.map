{
  "version": 3,
  "sources": ["../../src/UI/webWallet/WebWalletLoginButton/WebWalletLoginButton.tsx"],
  "sourcesContent": ["import React, { ReactNode } from 'react';\nimport { getIsNativeAuthSingingForbidden } from 'services/nativeAuth/helpers';\nimport {\n  UseWebWalletLoginPropsType,\n  useWebWalletLogin\n} from '../../../hooks/login/useWebWalletLogin';\nimport { LoginButton } from '../../LoginButton/LoginButton';\nimport { WithClassnameType } from '../../types';\n\nexport interface WebWalletLoginButtonPropsType\n  extends UseWebWalletLoginPropsType,\n    WithClassnameType {\n  buttonClassName?: string;\n  children?: ReactNode;\n  loginButtonText?: string;\n  disabled?: boolean;\n}\n\nexport const WebWalletLoginButton: (\n  props: WebWalletLoginButtonPropsType\n) => JSX.Element = ({\n  children,\n  token,\n  className = 'dapp-web-wallet-login',\n  callbackRoute,\n  buttonClassName,\n  nativeAuth,\n  'data-testid': dataTestId,\n  loginButtonText = 'MultiversX Web Wallet',\n  disabled,\n  customWalletAddress\n}) => {\n  const [onInitiateLogin] = useWebWalletLogin({\n    callbackRoute,\n    nativeAuth,\n    token,\n    customWalletAddress\n  });\n  const disabledConnectButton = getIsNativeAuthSingingForbidden(token);\n\n  const handleLogin = () => {\n    onInitiateLogin();\n  };\n\n  return (\n    <LoginButton\n      onLogin={handleLogin}\n      className={className}\n      btnClassName={buttonClassName}\n      text={loginButtonText}\n      data-testid={dataTestId}\n      disabled={disabled || disabledConnectButton}\n    >\n      {children}\n    </LoginButton>\n  );\n};\n"],
  "mappings": "gKAAA,yBAkBO,GAAM,GAEM,CAAC,CAClB,WACA,QACA,YAAY,wBACZ,gBACA,kBACA,aACA,cAAe,EACf,kBAAkB,wBAClB,WACA,yBACI,CACJ,GAAM,CAAC,GAAmB,EAAkB,CAC1C,gBACA,aACA,QACA,qBACF,CAAC,EACK,EAAwB,EAAgC,CAAK,EAMnE,MACE,iBAAC,GACC,QANgB,IAAM,CACxB,EAAgB,CAClB,EAKI,UAAW,EACX,aAAc,EACd,KAAM,EACN,cAAa,EACb,SAAU,GAAY,GAErB,CACH,CAEJ",
  "names": []
}
