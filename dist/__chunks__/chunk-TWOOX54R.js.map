{
  "version": 3,
  "sources": ["../../src/UI/walletConnect/WalletConnectLoginContainer/PairingList/PairingList.tsx"],
  "sourcesContent": ["import React, { useState, useEffect } from 'react';\nimport { faCircleNotch, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { PairingTypes } from 'utils/walletconnect/__sdkWalletconnectProvider';\nimport { WithClassnameType } from '../../../types';\nimport { ImageWithFallback } from './ImageWithFallback';\n\nexport interface WalletConnectPairingListClassesType {\n  leadClassName?: string;\n  wrapperClassName?: string;\n  buttonClassName?: string;\n  iconClassName?: string;\n  loaderClassName?: string;\n  detailsClassName?: string;\n  removeClassName?: string;\n}\n\nexport interface PairingListPropsType extends WithClassnameType {\n  connectExisting: (pairing: PairingTypes.Struct) => Promise<void>;\n  removeExistingPairing: (topic: string) => Promise<void>;\n  activePairings: PairingTypes.Struct[];\n  className: string;\n  pairingListClasses?: WalletConnectPairingListClassesType;\n}\n\nconst PairinglistComponent = ({\n  connectExisting,\n  removeExistingPairing,\n  activePairings,\n  className = 'dapp-wallet-connect-pairing-list',\n  pairingListClasses,\n  styles\n}: PairingListPropsType & WithStylesImportType) => {\n  const [topicLoading, setTopicLoading] = useState<string>('');\n\n  const {\n    leadClassName,\n    wrapperClassName,\n    buttonClassName,\n    iconClassName,\n    loaderClassName,\n    detailsClassName,\n    removeClassName\n  } = pairingListClasses || {};\n\n  useEffect(() => {\n    setTopicLoading('');\n  }, [activePairings]);\n\n  return (\n    <div className={classNames(styles?.xPortalPairings, className)}>\n      <p className={classNames(styles?.xPortalPairingsLead, leadClassName)}>\n        or choose an existing pairing:\n      </p>\n\n      <div\n        className={classNames(styles?.xPortalPairingsList, wrapperClassName)}\n      >\n        {activePairings.map((pairing) => (\n          <button\n            type='button'\n            className={classNames(\n              styles?.xPortalPairingButton,\n              buttonClassName\n            )}\n            key={pairing.topic}\n            onClick={() => {\n              connectExisting(pairing);\n              setTopicLoading(pairing.topic);\n            }}\n          >\n            {pairing.peerMetadata && (\n              <>\n                {topicLoading === pairing.topic ? (\n                  <FontAwesomeIcon\n                    icon={faCircleNotch}\n                    className={classNames(\n                      'fa-spin',\n                      'slow-spin',\n                      styles?.xPortalPairingLoader,\n                      loaderClassName\n                    )}\n                  />\n                ) : (\n                  <>\n                    {pairing.peerMetadata?.icons?.[0] && (\n                      <ImageWithFallback\n                        src={pairing.peerMetadata.icons[0]}\n                        alt={pairing.peerMetadata.name}\n                        className={classNames(\n                          styles?.xPortalPairingImage,\n                          iconClassName\n                        )}\n                      />\n                    )}\n                  </>\n                )}\n\n                <div\n                  className={classNames(\n                    styles?.xPortalPairingDetails,\n                    detailsClassName\n                  )}\n                >\n                  <strong className={styles?.xPortalPairingDetail}>\n                    {topicLoading === pairing.topic\n                      ? `Confirm on ${pairing.peerMetadata.name}`\n                      : pairing.peerMetadata.name}\n                  </strong>\n\n                  <span className={styles?.xPortalPairingDetail}>\n                    {pairing.peerMetadata.description}\n                  </span>\n\n                  <span className={styles?.xPortalPairingDetail}>\n                    {pairing.peerMetadata.url}\n                  </span>\n                </div>\n\n                <div\n                  className={classNames(\n                    styles?.xPortalPairingRemove,\n                    removeClassName\n                  )}\n                  onClick={(event) => {\n                    event.stopPropagation();\n                    removeExistingPairing(pairing.topic);\n                  }}\n                >\n                  <FontAwesomeIcon icon={faTimes} />\n                </div>\n              </>\n            )}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport const Pairinglist = withStyles(PairinglistComponent, {\n  ssrStyles: () =>\n    import(\n      'UI/walletConnect/WalletConnectLoginContainer/walletConnectLoginContainerStyles.scss'\n    ),\n  clientStyles: () =>\n    require('UI/walletConnect/WalletConnectLoginContainer/walletConnectLoginContainerStyles.scss')\n      .default\n});\n"],
  "mappings": "8KAAA,uDACA,+EACA,iEACA,0BAwBA,GAAM,GAAuB,CAAC,CAC5B,kBACA,wBACA,iBACA,YAAY,mCACZ,qBACA,YACiD,CACjD,GAAM,CAAC,EAAc,GAAmB,EAAiB,EAAE,EAErD,CACJ,gBACA,mBACA,kBACA,gBACA,kBACA,mBACA,mBACE,GAAsB,CAAC,EAE3B,SAAU,IAAM,CACd,EAAgB,EAAE,CACpB,EAAG,CAAC,CAAc,CAAC,EAGjB,gBAAC,OAAI,UAAW,EAAW,iBAAQ,gBAAiB,CAAS,GAC3D,gBAAC,KAAE,UAAW,EAAW,iBAAQ,oBAAqB,CAAa,GAAG,gCAEtE,EAEA,gBAAC,OACC,UAAW,EAAW,iBAAQ,oBAAqB,CAAgB,GAElE,EAAe,IAAI,AAAC,GAAS,CA5DtC,QA6DU,uBAAC,UACC,KAAK,SACL,UAAW,EACT,iBAAQ,qBACR,CACF,EACA,IAAK,EAAQ,MACb,QAAS,IAAM,CACb,EAAgB,CAAO,EACvB,EAAgB,EAAQ,KAAK,CAC/B,GAEC,EAAQ,cACP,gCACG,IAAiB,EAAQ,MACxB,gBAAC,GACC,KAAM,EACN,UAAW,EACT,UACA,YACA,iBAAQ,qBACR,CACF,EACF,EAEA,gCACG,SAAQ,eAAR,cAAsB,QAAtB,cAA8B,KAC7B,gBAAC,GACC,IAAK,EAAQ,aAAa,MAAM,GAChC,IAAK,EAAQ,aAAa,KAC1B,UAAW,EACT,iBAAQ,oBACR,CACF,EACF,CAEJ,EAGF,gBAAC,OACC,UAAW,EACT,iBAAQ,sBACR,CACF,GAEA,gBAAC,UAAO,UAAW,iBAAQ,sBACxB,IAAiB,EAAQ,MACtB,cAAc,EAAQ,aAAa,OACnC,EAAQ,aAAa,IAC3B,EAEA,gBAAC,QAAK,UAAW,iBAAQ,sBACtB,EAAQ,aAAa,WACxB,EAEA,gBAAC,QAAK,UAAW,iBAAQ,sBACtB,EAAQ,aAAa,GACxB,CACF,EAEA,gBAAC,OACC,UAAW,EACT,iBAAQ,qBACR,CACF,EACA,QAAS,AAAC,GAAU,CAClB,EAAM,gBAAgB,EACtB,EAAsB,EAAQ,KAAK,CACrC,GAEA,gBAAC,GAAgB,KAAM,EAAS,CAClC,CACF,CAEJ,EACD,CACH,CACF,CAEJ,EAEa,EAAc,EAAW,EAAsB,CAC1D,UAAW,IACT,OACE,wFAEJ,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
