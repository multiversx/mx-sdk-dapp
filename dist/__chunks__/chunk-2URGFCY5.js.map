{
  "version": 3,
  "sources": ["../../src/UI/TransactionInfo/components/TransactionAction/TransactionAction.tsx"],
  "sourcesContent": ["import React, { useMemo } from 'react';\nimport { DataTestIdsEnum } from 'constants/index';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { WithTransactionType } from 'UI/types';\nimport { transactionActionUnwrapper } from 'utils/transactions/transactionInfoHelpers/transactionActionUnwrapper/transactionActionUnwrapper';\nimport { ActionText } from './components/ActionText';\n\nexport const TransactionActionComponent = ({\n  transaction,\n  styles\n}: WithTransactionType & WithStylesImportType) => {\n  const unwrappedResult: ReturnType<typeof transactionActionUnwrapper> =\n    useMemo(() => {\n      if (transaction.action) {\n        return transactionActionUnwrapper(transaction.action);\n      }\n\n      return [];\n    }, [transaction.action]);\n\n  return (\n    <div\n      data-testid={DataTestIdsEnum.transactionAction}\n      className={styles?.action}\n    >\n      {unwrappedResult.map((entry, i) => (\n        <div\n          key={JSON.stringify(unwrappedResult) + i}\n          className={styles?.result}\n        >\n          <ActionText transaction={transaction} entry={entry} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport const TransactionAction = withStyles(TransactionActionComponent, {\n  ssrStyles: () =>\n    import('UI/TransactionInfo/components/TransactionAction/styles.scss'),\n  clientStyles: () =>\n    require('UI/TransactionInfo/components/TransactionAction/styles.scss')\n      .default\n});\n"],
  "mappings": "gQAAA,IACA,IADA,mCAIA,IAGO,GAAM,GAA6B,CAAC,CACzC,cACA,YACgD,CAChD,GAAM,GACJ,EAAQ,IACF,EAAY,OACP,EAA2B,EAAY,MAAM,EAG/C,CAAC,EACP,CAAC,EAAY,MAAM,CAAC,EAEzB,MACE,iBAAC,OACC,cAAa,oBACb,UAAW,iBAAQ,QAElB,EAAgB,IAAI,CAAC,EAAO,IAC3B,gBAAC,OACC,IAAK,KAAK,UAAU,CAAe,EAAI,EACvC,UAAW,iBAAQ,QAEnB,gBAAC,GAAW,YAAa,EAAa,MAAO,EAAO,CACtD,CACD,CACH,CAEJ,EAEa,EAAoB,EAAW,EAA4B,CACtE,UAAW,IACT,OAAO,gEACT,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
