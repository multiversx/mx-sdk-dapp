{
  "version": 3,
  "sources": ["../../src/hooks/transactions/useCheckTransactionStatus/useCheckTransactionStatus.ts"],
  "sourcesContent": ["import { useGetPendingTransactions } from 'hooks/transactions/useGetPendingTransactions';\nimport { TransactionsTrackerType } from 'types/transactionsTracker.types';\nimport { refreshAccount } from 'utils/account/refreshAccount';\nimport { getIsTransactionPending } from 'utils/transactions/transactionStateByStatus';\nimport { checkBatch } from './checkBatch';\n\nexport function useCheckTransactionStatus() {\n  const { pendingTransactionsArray } = useGetPendingTransactions();\n\n  async function checkTransactionStatus(\n    props: TransactionsTrackerType & {\n      shouldRefreshBalance?: boolean;\n    }\n  ) {\n    const pendingBatches = pendingTransactionsArray\n      .filter(([, session]) => !session?.customTransactionInformation?.grouping)\n      .filter(\n        ([sessionId, session]) =>\n          sessionId != null && getIsTransactionPending(session.status)\n      );\n\n    if (pendingBatches.length > 0) {\n      for (const [sessionId, transactionBatch] of pendingBatches) {\n        await checkBatch({\n          sessionId,\n          transactionBatch,\n          ...props\n        });\n      }\n    }\n\n    if (props.shouldRefreshBalance) {\n      await refreshAccount();\n    }\n  }\n\n  return checkTransactionStatus;\n}\n"],
  "mappings": "6NAAA,IAGA,IAGO,YAAqC,CAC1C,GAAM,CAAE,4BAA6B,EAA0B,EAE/D,WACE,EAGA,gCACA,GAAM,GAAiB,EACpB,OAAO,CAAC,CAAC,CAAE,KAAU,CAf5B,MAe+B,OAAC,qBAAS,+BAAT,QAAuC,UAAQ,EACxE,OACC,CAAC,CAAC,EAAW,KACX,GAAa,MAAQ,EAAwB,EAAQ,MAAM,CAC/D,EAEF,GAAI,EAAe,OAAS,EAC1B,OAAW,CAAC,EAAW,IAAqB,GAC1C,KAAM,GAAW,GACf,YACA,oBACG,EACJ,EAIL,AAAI,EAAM,sBACR,MAAM,GAAe,EAEzB,GAEA,MAAO,EACT",
  "names": []
}
