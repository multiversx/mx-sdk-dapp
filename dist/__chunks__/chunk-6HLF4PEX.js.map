{
  "version": 3,
  "sources": ["../../src/UI/SignTransactionsModals/SignWithDeviceModal/components/components/ConfirmAmount/ConfirmAmount.tsx"],
  "sourcesContent": ["import React from 'react';\nimport classNames from 'classnames';\n\nimport { withStyles } from 'hocs/withStyles';\nimport { useGetEgldPrice, useGetTokenDetails } from 'hooks';\nimport { ActiveLedgerTransactionType } from 'types';\nimport { NftEnumType } from 'types/tokens.types';\nimport { LoadingDots } from 'UI/LoadingDots';\n\nimport { WithStylesImportType } from '../../../../../../hocs/useStyles';\n\nimport {\n  ConfirmAmountData,\n  ConfirmAmountLabel,\n  ConfirmAmountNftSft\n} from './components';\nimport { useHandleAmountReference } from './hooks';\n\nexport interface ConfirmAmountPropsType extends WithStylesImportType {\n  currentTransaction: ActiveLedgerTransactionType;\n}\n\nconst ConfirmAmountComponent = ({\n  styles,\n  currentTransaction\n}: ConfirmAmountPropsType) => {\n  const { tokenId, nonce, amount } = currentTransaction.transactionTokenInfo;\n  const { isFontSizeLoading, handleAmountReference } =\n    useHandleAmountReference();\n\n  // If the token has a nonce means that this is an NFT. Eg: TokenId=TOKEN-1hfr, nonce=123 => NFT id=TOKEN-1hfr-123\n  const tokenIdForTokenDetails =\n    nonce && nonce.length > 0 ? `${tokenId}-${nonce}` : tokenId;\n\n  const tokenDetails = useGetTokenDetails({\n    tokenId: tokenIdForTokenDetails\n  });\n\n  const { price: egldPrice } = useGetEgldPrice();\n\n  const {\n    type,\n    esdtPrice,\n    isLoading: isTokenDetailsLoading,\n    identifier\n  } = tokenDetails;\n\n  const isEgld = !tokenId;\n  const tokenPrice = isEgld ? egldPrice : esdtPrice;\n  const isNftOrSft = type\n    ? [NftEnumType.SemiFungibleESDT, NftEnumType.NonFungibleESDT].includes(type)\n    : false;\n\n  return (\n    <div className={styles?.confirmAmount}>\n      <div className={styles?.confirmAmountLabel}>\n        {isTokenDetailsLoading ? (\n          <LoadingDots />\n        ) : (\n          <ConfirmAmountLabel\n            amount={amount}\n            type={type}\n            identifier={identifier}\n          />\n        )}\n      </div>\n\n      <div className={styles?.confirmAmountWrapper}>\n        <LoadingDots\n          className={classNames(styles?.confirmAmountLoading, {\n            [styles?.confirmAmountLoadingVisible]:\n              isTokenDetailsLoading || isFontSizeLoading\n          })}\n        />\n\n        <div\n          className={classNames(styles?.confirmAmountContent, {\n            [styles?.confirmAmountContentHidden]:\n              isTokenDetailsLoading || isFontSizeLoading\n          })}\n        >\n          {isNftOrSft ? (\n            <ConfirmAmountNftSft\n              amount={amount}\n              type={type}\n              tokenDetails={tokenDetails}\n            />\n          ) : (\n            <ConfirmAmountData\n              isNftOrSft={isNftOrSft}\n              isEgld={isEgld}\n              amount={amount}\n              handleReference={handleAmountReference}\n              currentTransaction={currentTransaction}\n              tokenDetails={tokenDetails}\n              tokenPrice={tokenPrice}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const ConfirmAmount = withStyles(ConfirmAmountComponent, {\n  ssrStyles: () =>\n    import(\n      'UI/SignTransactionsModals/SignWithDeviceModal/components/components/ConfirmAmount/confirmAmountStyles.scss'\n    ),\n  clientStyles: () =>\n    require('UI/SignTransactionsModals/SignWithDeviceModal/components/components/ConfirmAmount/confirmAmountStyles.scss')\n      .default\n});\n"],
  "mappings": "icAAA,yBACA,0BAKA,IAgBA,GAAM,GAAyB,CAAC,CAC9B,SACA,wBAC4B,CAC5B,GAAM,CAAE,UAAS,QAAO,UAAW,EAAmB,qBAChD,CAAE,oBAAmB,yBACzB,EAAyB,EAGrB,EACJ,GAAS,EAAM,OAAS,EAAI,GAAG,KAAW,IAAU,EAEhD,EAAe,EAAmB,CACtC,QAAS,CACX,CAAC,EAEK,CAAE,MAAO,GAAc,EAAgB,EAEvC,CACJ,OACA,YACA,UAAW,EACX,cACE,EAEE,EAAS,CAAC,EACV,EAAa,EAAS,EAAY,EAClC,EAAa,EACf,CAAC,mBAA8B,iBAA2B,EAAE,SAAS,CAAI,EACzE,GAEJ,MACE,iBAAC,OAAI,UAAW,iBAAQ,eACtB,gBAAC,OAAI,UAAW,iBAAQ,oBACrB,EACC,gBAAC,MAAY,EAEb,gBAAC,GACC,OAAQ,EACR,KAAM,EACN,WAAY,EACd,CAEJ,EAEA,gBAAC,OAAI,UAAW,iBAAQ,sBACtB,gBAAC,GACC,UAAW,EAAW,iBAAQ,qBAAsB,CAClD,CAAC,iBAAQ,6BACP,GAAyB,CAC7B,CAAC,EACH,EAEA,gBAAC,OACC,UAAW,EAAW,iBAAQ,qBAAsB,CAClD,CAAC,iBAAQ,4BACP,GAAyB,CAC7B,CAAC,GAEA,EACC,gBAAC,GACC,OAAQ,EACR,KAAM,EACN,aAAc,EAChB,EAEA,gBAAC,GACC,WAAY,EACZ,OAAQ,EACR,OAAQ,EACR,gBAAiB,EACjB,mBAAoB,EACpB,aAAc,EACd,WAAY,EACd,CAEJ,CACF,CACF,CAEJ,EAEa,EAAgB,EAAW,EAAwB,CAC9D,UAAW,IACT,OACE,+GAEJ,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
