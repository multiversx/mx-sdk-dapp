{
  "version": 3,
  "sources": ["../../src/utils/transactions/transactionInfoHelpers/getTransactionActionNftText.ts"],
  "sourcesContent": ["import { TokenArgumentType } from 'types/serverTransactions.types';\nimport { NftEnumType } from 'types/tokens.types';\nimport { formatAmount } from 'utils/operations';\nimport { explorerUrlBuilder } from '../getInterpretedTransaction/helpers/explorerUrlBuilder';\n\nexport interface TransactionActionNftType {\n  token: TokenArgumentType;\n  noValue?: boolean;\n  showLastNonZeroDecimal?: boolean;\n}\nexport interface TransactionActionNftReturnType {\n  badgeText: string | null;\n  tokenFormattedAmount: string | null;\n  tokenExplorerLink: string;\n  tokenLinkText: string;\n  token: TokenArgumentType;\n  showLastNonZeroDecimal?: boolean;\n  noValue?: boolean;\n}\n\nexport function getTransactionActionNftText({\n  token,\n  noValue,\n  showLastNonZeroDecimal\n}: TransactionActionNftType): TransactionActionNftReturnType {\n  const isTokenAmountVisible =\n    !noValue && token.value && token.type !== NftEnumType.NonFungibleESDT;\n  const canShowFormattedAmount = token.decimals != null;\n\n  let badgeText = '';\n  if (token.type === NftEnumType.NonFungibleESDT) {\n    badgeText = 'NFT';\n  }\n  if (token.type === NftEnumType.SemiFungibleESDT) {\n    badgeText = 'SFT';\n  }\n  if (token.type === NftEnumType.MetaESDT) {\n    badgeText = 'Meta-ESDT';\n  }\n\n  let tokenFormattedAmount = '';\n  if (isTokenAmountVisible && canShowFormattedAmount) {\n    tokenFormattedAmount = canShowFormattedAmount\n      ? formatAmount({\n          input: token.value,\n          decimals: token.decimals,\n          digits: 2,\n          showLastNonZeroDecimal\n        })\n      : Number(token.value).toLocaleString('en');\n  }\n\n  const tokenExplorerLink = explorerUrlBuilder.nftDetails(\n    String(token.identifier)\n  );\n\n  const tokenLinkText =\n    token.ticker === token.collection\n      ? token.identifier ?? token.ticker\n      : token.ticker;\n\n  return {\n    badgeText,\n    tokenFormattedAmount: isTokenAmountVisible ? tokenFormattedAmount : null,\n    tokenExplorerLink,\n    tokenLinkText,\n    token,\n    noValue,\n    showLastNonZeroDecimal\n  };\n}\n"],
  "mappings": "iNAoBO,WAAqC,CAC1C,QACA,UACA,0BAC2D,CAxB7D,MAyBE,GAAM,GACJ,CAAC,GAAW,EAAM,OAAS,EAAM,OAAS,kBACtC,EAAyB,EAAM,UAAY,KAE7C,EAAY,GAChB,AAAI,EAAM,OAAS,mBACjB,GAAY,OAEV,EAAM,OAAS,oBACjB,GAAY,OAEV,EAAM,OAAS,YACjB,GAAY,aAGd,GAAI,GAAuB,GAC3B,AAAI,GAAwB,GAC1B,GAAuB,EACnB,EAAa,CACX,MAAO,EAAM,MACb,SAAU,EAAM,SAChB,OAAQ,EACR,wBACF,CAAC,EACD,OAAO,EAAM,KAAK,EAAE,eAAe,IAAI,GAG7C,GAAM,GAAoB,EAAmB,WAC3C,OAAO,EAAM,UAAU,CACzB,EAEM,EACJ,EAAM,SAAW,EAAM,YACnB,KAAM,aAAN,OACA,EAAM,OAEZ,MAAO,CACL,YACA,qBAAsB,EAAuB,EAAuB,KACpE,oBACA,gBACA,QACA,UACA,wBACF,CACF,CAtEA,iBACA,IACA,IACA",
  "names": []
}
