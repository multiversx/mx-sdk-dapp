{
  "version": 3,
  "sources": ["../../src/utils/transactions/parseMultiEsdtTransferData.ts"],
  "sourcesContent": ["import BigNumber from 'bignumber.js';\nimport { MultiEsdtTransactionType, TransactionTypesEnum } from 'types';\nimport { decodePart } from 'utils/decoders/decodePart';\nimport { getAllStringOccurrences } from '../getAllStringOccurrences';\n\nexport function parseMultiEsdtTransferData(data?: string) {\n  const transactions: MultiEsdtTransactionType[] = [];\n  let contractCallDataIndex = 0;\n  try {\n    if (\n      data?.startsWith(TransactionTypesEnum.MultiESDTNFTTransfer) &&\n      data?.includes('@')\n    ) {\n      const [, receiver, encodedTxCount, ...rest] = data?.split('@');\n\n      if (receiver) {\n        const txCount = new BigNumber(encodedTxCount, 16).toNumber();\n\n        if (txCount >= Number.MAX_SAFE_INTEGER) {\n          return [];\n        }\n\n        let itemIndex = 0;\n\n        for (let txIndex = 0; txIndex < txCount; txIndex++) {\n          const transaction: MultiEsdtTransactionType = {\n            type: TransactionTypesEnum.nftTransaction,\n            data: '',\n            receiver\n          };\n\n          for (let index = 0; index < 3; index++) {\n            switch (index) {\n              case 0:\n                transaction.token = decodePart(rest[itemIndex]);\n                transaction.data = rest[itemIndex];\n                break;\n              case 1: {\n                const encodedNonce =\n                  rest[itemIndex] && rest[itemIndex].length\n                    ? rest[itemIndex]\n                    : '';\n                if (encodedNonce && encodedNonce !== '00') {\n                  transaction.nonce = encodedNonce;\n                } else {\n                  transaction.type = TransactionTypesEnum.esdtTransaction;\n                }\n                transaction.data = `${transaction.data}@${rest[itemIndex]}`;\n                break;\n              }\n              case 2:\n                transaction.amount = new BigNumber(\n                  rest[itemIndex],\n                  16\n                ).toString(10);\n                transaction.data = `${transaction.data}@${rest[itemIndex]}`;\n                break;\n              default:\n                break;\n            }\n            contractCallDataIndex = itemIndex + 1;\n            itemIndex++;\n          }\n          transactions[txIndex] = transaction;\n        }\n\n        const isDifferentFromTxCount = transactions.length !== txCount;\n        const hasInvalidNoOfAdSigns = transactions.some((tx) => {\n          const adSignOccurences = getAllStringOccurrences(tx.data, '@').length;\n          return adSignOccurences !== 2;\n        });\n\n        const hasAdStart = transactions.some((tx) => tx.data.startsWith('@'));\n        if (isDifferentFromTxCount || hasInvalidNoOfAdSigns || hasAdStart) {\n          return [];\n        }\n\n        if (rest[contractCallDataIndex]) {\n          let scCallData = rest[contractCallDataIndex];\n          for (let i = contractCallDataIndex + 1; i < rest.length; i++) {\n            scCallData += '@' + rest[i];\n          }\n          transactions[txCount] = {\n            type: TransactionTypesEnum.scCall,\n            data: scCallData,\n            receiver\n          };\n        }\n      }\n    }\n  } catch (err) {\n    console.error('failed parsing tx', err);\n    return transactions;\n  }\n  return transactions;\n}\n"],
  "mappings": "gLAAA,4BAKO,WAAoC,EAAe,CACxD,GAAM,GAA2C,CAAC,EAC9C,EAAwB,EAC5B,GAAI,CACF,GACE,kBAAM,WAAW,0BACjB,kBAAM,SAAS,MACf,CACA,GAAM,CAAC,CAAE,EAAU,KAAmB,GAAQ,iBAAM,MAAM,KAE1D,GAAI,EAAU,CACZ,GAAM,GAAU,GAAI,GAAU,EAAgB,EAAE,EAAE,SAAS,EAE3D,GAAI,GAAW,OAAO,iBACpB,MAAO,CAAC,EAGV,GAAI,GAAY,EAEhB,OAAS,GAAU,EAAG,EAAU,EAAS,IAAW,CAClD,GAAM,GAAwC,CAC5C,KAAM,iBACN,KAAM,GACN,UACF,EAEA,OAAS,GAAQ,EAAG,EAAQ,EAAG,IAAS,CACtC,OAAQ,OACD,GACH,EAAY,MAAQ,EAAW,EAAK,EAAU,EAC9C,EAAY,KAAO,EAAK,GACxB,UACG,GAAG,CACN,GAAM,GACJ,EAAK,IAAc,EAAK,GAAW,OAC/B,EAAK,GACL,GACN,AAAI,GAAgB,IAAiB,KACnC,EAAY,MAAQ,EAEpB,EAAY,KAAO,kBAErB,EAAY,KAAO,GAAG,EAAY,QAAQ,EAAK,KAC/C,KACF,KACK,GACH,EAAY,OAAS,GAAI,GACvB,EAAK,GACL,EACF,EAAE,SAAS,EAAE,EACb,EAAY,KAAO,GAAG,EAAY,QAAQ,EAAK,KAC/C,cAEA,MAEJ,EAAwB,EAAY,EACpC,GACF,CACA,EAAa,GAAW,CAC1B,CAEA,GAAM,GAAyB,EAAa,SAAW,EACjD,EAAwB,EAAa,KAAK,AAAC,GAExC,AADkB,EAAwB,EAAG,KAAM,GAAG,EAAE,SACnC,CAC7B,EAEK,EAAa,EAAa,KAAK,AAAC,GAAO,EAAG,KAAK,WAAW,GAAG,CAAC,EACpE,GAAI,GAA0B,GAAyB,EACrD,MAAO,CAAC,EAGV,GAAI,EAAK,GAAwB,CAC/B,GAAI,GAAa,EAAK,GACtB,OAAS,GAAI,EAAwB,EAAG,EAAI,EAAK,OAAQ,IACvD,GAAc,IAAM,EAAK,GAE3B,EAAa,GAAW,CACtB,KAAM,SACN,KAAM,EACN,UACF,CACF,CACF,CACF,CACF,OAAS,EAAP,CACA,eAAQ,MAAM,oBAAqB,CAAG,EAC/B,CACT,CACA,MAAO,EACT,CA/FA,iBACA,IACA,IACA",
  "names": []
}
