{
  "version": 3,
  "sources": ["../../src/UI/SignTransactionsModals/components/TransactionStatusToast.tsx"],
  "sourcesContent": ["import React, { useEffect, useMemo } from 'react';\nimport { faWarning } from '@fortawesome/free-solid-svg-icons';\nimport { StatusMessageComponent } from 'components/TransactionStatusToast/StatusMessageComponent';\nimport { StatusIconType } from 'components/TransactionStatusToast/transactionStatusToast.types';\nimport {\n  CANCEL_TRANSACTION_TOAST_DEFAULT_DURATION,\n  CANCEL_TRANSACTION_TOAST_ID,\n  DEFAULT_TRANSACTION_STATUS_MESSAGE\n} from 'constants/index';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport { dappConfigSelector } from 'reduxStore/selectors';\nimport { addNewCustomToast } from 'utils/toasts/customToastsActions';\nimport { WithClassnameType } from '../../types';\n\n// TODO: Rename to \"TransactionStatusToastPropsType\" when sdk-dapp@3.0.0\nexport interface TransactionStatusToastType extends WithClassnameType {\n  signError: string | null;\n  canceledTransactionsMessage: string | null;\n  onDelete?: () => void;\n}\n\nexport const TransactionStatusToast = ({\n  signError,\n  canceledTransactionsMessage,\n  onDelete\n}: TransactionStatusToastType) => {\n  const dappConfig = useSelector(dappConfigSelector);\n\n  const message = useMemo(() => {\n    return (\n      signError ||\n      canceledTransactionsMessage ||\n      DEFAULT_TRANSACTION_STATUS_MESSAGE\n    );\n  }, [signError, canceledTransactionsMessage]);\n\n  const type = useMemo(() => {\n    if (signError) {\n      return StatusIconType.ERROR;\n    } else if (canceledTransactionsMessage) {\n      return StatusIconType.WARNING;\n    }\n\n    return StatusIconType.INFO;\n  }, [signError, canceledTransactionsMessage]);\n\n  useEffect(() => {\n    addNewCustomToast({\n      toastId: `${CANCEL_TRANSACTION_TOAST_ID}-${Date.now()}`,\n      title: 'Transaction canceled',\n      duration:\n        dappConfig.cancelTransactionToastDuration ??\n        CANCEL_TRANSACTION_TOAST_DEFAULT_DURATION,\n      component: () => <StatusMessageComponent type={type} message={message} />,\n      onClose: () => onDelete?.(),\n      icon: faWarning\n    });\n  }, []);\n\n  return null;\n};\n"],
  "mappings": "+WAAA,sDACA,8DAGA,IAMA,IAWO,GAAM,GAAyB,CAAC,CACrC,YACA,8BACA,cACgC,CAChC,GAAM,GAAa,EAAY,CAAkB,EAE3C,EAAU,EAAQ,IAEpB,GACA,GACA,EAED,CAAC,EAAW,CAA2B,CAAC,EAErC,EAAO,EAAQ,IACf,EACK,QACE,EACF,UAGF,OACN,CAAC,EAAW,CAA2B,CAAC,EAE3C,SAAU,IAAM,CA9ClB,MA+CI,EAAkB,CAChB,QAAS,GAAG,KAA+B,KAAK,IAAI,IACpD,MAAO,uBACP,SACE,KAAW,iCAAX,OACA,IACF,UAAW,IAAM,gBAAC,GAAuB,KAAM,EAAM,QAAS,EAAS,EACvE,QAAS,IAAM,mBACf,KAAM,CACR,CAAC,CACH,EAAG,CAAC,CAAC,EAEE,IACT",
  "names": []
}
