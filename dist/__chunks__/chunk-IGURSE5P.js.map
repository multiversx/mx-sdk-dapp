{
  "version": 3,
  "sources": ["../../src/UI/TransactionDetails/TransactionDetails.tsx"],
  "sourcesContent": ["import React, { ReactNode, useMemo } from 'react';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { useGetAccount } from 'hooks/account/useGetAccount';\nimport {\n  SignedTransactionType,\n  TransactionServerStatusesEnum\n} from 'types/index';\nimport { isServerTransactionPending } from 'utils/transactions/transactionStateByStatus';\nimport {\n  TransactionDetailsBody,\n  TransactionDetailsBodyPropsType\n} from './components';\n\nexport interface TransactionDetailsType {\n  title?: ReactNode;\n  isTimedOut?: boolean;\n  transactions?: SignedTransactionType[];\n  className?: string;\n}\n\nconst TransactionDetailsComponent = ({\n  title,\n  transactions,\n  isTimedOut = false,\n  className = 'dapp-transaction-details',\n  styles\n}: TransactionDetailsType & WithStylesImportType) => {\n  if (transactions == null) {\n    return null;\n  }\n\n  const { address } = useGetAccount();\n\n  const processedTransactionsStatus = useMemo(() => {\n    const processedTransactions = transactions.filter(\n      (tx) =>\n        !isServerTransactionPending(TransactionServerStatusesEnum[tx?.status])\n    ).length;\n\n    const totalTransactions = transactions.length;\n\n    if (totalTransactions === 1 && processedTransactions === 1) {\n      return isServerTransactionPending(\n        TransactionServerStatusesEnum[transactions[0].status]\n      )\n        ? 'Processing transaction'\n        : 'Transaction processed';\n    }\n\n    return `${processedTransactions} / ${totalTransactions} transactions processed`;\n  }, [transactions]);\n\n  const hideProcessedTransactionsStatus =\n    transactions.length === 1 && transactions[0].sender !== address;\n\n  return (\n    <>\n      {title && <div className={styles?.title}>{title}</div>}\n\n      {!hideProcessedTransactionsStatus && (\n        <div className={styles?.status}>{processedTransactionsStatus}</div>\n      )}\n\n      {transactions.map(({ hash, status }) => {\n        const transactionDetailsBodyProps: TransactionDetailsBodyPropsType = {\n          className,\n          hash,\n          status: TransactionServerStatusesEnum[status],\n          isTimedOut\n        };\n\n        return (\n          <TransactionDetailsBody {...transactionDetailsBodyProps} key={hash} />\n        );\n      })}\n    </>\n  );\n};\n\nexport const TransactionDetails = withStyles(TransactionDetailsComponent, {\n  ssrStyles: () =>\n    import('UI/TransactionDetails/transactionDetails.styles.scss'),\n  clientStyles: () =>\n    require('UI/TransactionDetails/transactionDetails.styles.scss').default\n});\n"],
  "mappings": "8VAAA,uCAGA,IAIA,IAaA,GAAM,GAA8B,CAAC,CACnC,QACA,eACA,aAAa,GACb,YAAY,2BACZ,YACmD,CACnD,GAAI,GAAgB,KAClB,MAAO,MAGT,GAAM,CAAE,WAAY,EAAc,EAE5B,EAA8B,EAAQ,IAAM,CAChD,GAAM,GAAwB,EAAa,OACzC,AAAC,GACC,CAAC,EAA2B,EAA8B,iBAAI,OAAO,CACzE,EAAE,OAEI,EAAoB,EAAa,OAEvC,MAAI,KAAsB,GAAK,IAA0B,EAChD,EACL,EAA8B,EAAa,GAAG,OAChD,EACI,yBACA,wBAGC,GAAG,OAA2B,0BACvC,EAAG,CAAC,CAAY,CAAC,EAEX,EACJ,EAAa,SAAW,GAAK,EAAa,GAAG,SAAW,EAE1D,MACE,iCACG,GAAS,gBAAC,OAAI,UAAW,iBAAQ,OAAQ,CAAM,EAE/C,CAAC,GACA,gBAAC,OAAI,UAAW,iBAAQ,QAAS,CAA4B,EAG9D,EAAa,IAAI,CAAC,CAAE,OAAM,YAAa,CACtC,GAAM,GAA+D,CACnE,YACA,OACA,OAAQ,EAA8B,GACtC,YACF,EAEA,MACE,iBAAC,SAA2B,GAA3B,CAAwD,IAAK,GAAM,CAExE,CAAC,CACH,CAEJ,EAEa,EAAqB,EAAW,EAA6B,CACxE,UAAW,IACT,OAAO,yDACT,aAAc,IACZ,WAAgE,OACpE,CAAC",
  "names": []
}
