{
  "version": 3,
  "sources": ["../../src/UI/SignTransactionsModals/SignWithDeviceModal/components/components/ConfirmReceiver/ConfirmReceiver.tsx"],
  "sourcesContent": ["import React, { ReactNode } from 'react';\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport BigNumber from 'bignumber.js';\n\nimport { useGetAccountFromApi, ACCOUNTS_ENDPOINT } from 'apiCalls';\nimport MultiversXIconSimple from 'assets/icons/mvx-icon-simple.svg';\nimport { DataTestIdsEnum } from 'constants/index';\nimport { withStyles } from 'hocs/withStyles';\nimport { trimUsernameDomain } from 'hooks/account/helpers';\nimport { CopyButton } from 'UI/CopyButton';\nimport { ExplorerLink } from 'UI/ExplorerLink';\nimport { LoadingDots } from 'UI/LoadingDots';\nimport { Trim } from 'UI/Trim';\nimport { isContract } from 'utils';\n\nimport { WithStylesImportType } from '../../../../../../hocs/useStyles';\n\nexport interface ConfirmReceiverPropsType extends WithStylesImportType {\n  amount: string;\n  label?: ReactNode;\n  customCopyIcon?: IconProp;\n  customExplorerIcon?: IconProp;\n  receiver: string;\n  receiverUsername?: string;\n  scamReport: string | null;\n}\n\nconst ConfirmReceiverComponent = ({\n  amount,\n  label,\n  receiver,\n  customExplorerIcon,\n  receiverUsername,\n  customCopyIcon,\n  scamReport,\n  styles\n}: ConfirmReceiverPropsType) => {\n  const isSmartContract = isContract(receiver);\n  const skipFetchingAccount = Boolean(isSmartContract || receiverUsername);\n  const isAmountZero = new BigNumber(amount).isZero();\n\n  const {\n    data: usernameAccount,\n    isLoading: usernameAccountLoading,\n    error: usernameAccountError\n  } = useGetAccountFromApi(skipFetchingAccount ? null : receiver);\n\n  const foundReceiverUsername = receiverUsername ?? usernameAccount?.username;\n  const receiverValue = foundReceiverUsername ?? receiver;\n  const hasUsername = Boolean(\n    receiver && Boolean(foundReceiverUsername) && !usernameAccountError\n  );\n\n  const defaultReceiverLabel = isAmountZero ? 'To interact with' : 'To';\n\n  return (\n    <div className={styles?.receiver}>\n      <div className={styles?.receiverLabelWrapper}>\n        <div className={styles?.receiverLabel}>\n          {label ?? defaultReceiverLabel}\n        </div>\n\n        {scamReport && (\n          <div className={styles?.receiverLabelScam}>\n            <span\n              className={styles?.receiverLabelScamText}\n              data-testid={DataTestIdsEnum.confirmScamReport}\n            >\n              {scamReport}\n            </span>\n\n            <FontAwesomeIcon\n              icon={faExclamationTriangle}\n              className={styles?.receiverLabelScamIcon}\n            />\n          </div>\n        )}\n      </div>\n\n      {usernameAccountLoading ? (\n        <div className={styles?.receiverWrapper}>\n          <LoadingDots className={styles?.receiverLoading} />\n        </div>\n      ) : (\n        <div\n          className={styles?.receiverWrapper}\n          data-testid={DataTestIdsEnum.confirmReceiver}\n        >\n          <Trim text={receiver} className={styles?.receiverTrim} />\n\n          {hasUsername && !isSmartContract && (\n            <span className={styles?.receiverData}>\n              (<MultiversXIconSimple className={styles?.receiverDataIcon} />\n              <span className={styles?.receiverDataUsername}>\n                {trimUsernameDomain(receiverValue)}\n              </span>\n              )\n            </span>\n          )}\n\n          {isSmartContract && (\n            <span className={styles?.receiverData}>\n              (\n              <span className={styles?.receiverDataUsername}>\n                Smart Contract\n              </span>\n              )\n            </span>\n          )}\n\n          <CopyButton\n            text={receiver}\n            className={styles?.receiverCopy}\n            copyIcon={customCopyIcon}\n          />\n\n          <ExplorerLink\n            page={`/${ACCOUNTS_ENDPOINT}/${receiver}`}\n            className={styles?.receiverExternal}\n            customExplorerIcon={customExplorerIcon}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport const ConfirmReceiver = withStyles(ConfirmReceiverComponent, {\n  ssrStyles: () =>\n    import(\n      'UI/SignTransactionsModals/SignWithDeviceModal/components/components/ConfirmReceiver/confirmReceiverStyles.scss'\n    ),\n  clientStyles: () =>\n    require('UI/SignTransactionsModals/SignWithDeviceModal/components/components/ConfirmReceiver/confirmReceiverStyles.scss')\n      .default\n});\n"],
  "mappings": "shBAAA,yBAEA,0EACA,iEACA,4BAIA,IAqBA,GAAM,GAA2B,CAAC,CAChC,SACA,QACA,WACA,qBACA,mBACA,iBACA,aACA,YAC8B,CAC9B,GAAM,GAAkB,EAAW,CAAQ,EACrC,EAAsB,QAAQ,GAAmB,CAAgB,EACjE,EAAe,GAAI,GAAU,CAAM,EAAE,OAAO,EAE5C,CACJ,KAAM,EACN,UAAW,EACX,MAAO,GACL,EAAqB,EAAsB,KAAO,CAAQ,EAExD,EAAwB,UAAoB,iBAAiB,SAC7D,EAAgB,UAAyB,EACzC,EAAc,QAClB,GAAY,QAAQ,CAAqB,GAAK,CAAC,CACjD,EAEM,EAAuB,EAAe,mBAAqB,KAEjE,MACE,iBAAC,OAAI,UAAW,iBAAQ,UACtB,gBAAC,OAAI,UAAW,iBAAQ,sBACtB,gBAAC,OAAI,UAAW,iBAAQ,eACrB,UAAS,CACZ,EAEC,GACC,gBAAC,OAAI,UAAW,iBAAQ,mBACtB,gBAAC,QACC,UAAW,iBAAQ,sBACnB,cAAa,qBAEZ,CACH,EAEA,gBAAC,GACC,KAAM,EACN,UAAW,iBAAQ,sBACrB,CACF,CAEJ,EAEC,EACC,gBAAC,OAAI,UAAW,iBAAQ,iBACtB,gBAAC,GAAY,UAAW,iBAAQ,gBAAiB,CACnD,EAEA,gBAAC,OACC,UAAW,iBAAQ,gBACnB,cAAa,mBAEb,gBAAC,GAAK,KAAM,EAAU,UAAW,iBAAQ,aAAc,EAEtD,GAAe,CAAC,GACf,gBAAC,QAAK,UAAW,iBAAQ,cAAc,IACpC,gBAAC,GAAqB,UAAW,iBAAQ,iBAAkB,EAC5D,gBAAC,QAAK,UAAW,iBAAQ,sBACtB,EAAmB,CAAa,CACnC,EAAO,GAET,EAGD,GACC,gBAAC,QAAK,UAAW,iBAAQ,cAAc,IAErC,gBAAC,QAAK,UAAW,iBAAQ,sBAAsB,gBAE/C,EAAO,GAET,EAGF,gBAAC,GACC,KAAM,EACN,UAAW,iBAAQ,aACnB,SAAU,EACZ,EAEA,gBAAC,GACC,KAAM,IAAI,KAAqB,IAC/B,UAAW,iBAAQ,iBACnB,mBAAoB,EACtB,CACF,CAEJ,CAEJ,EAEa,GAAkB,EAAW,EAA0B,CAClE,UAAW,IACT,OACE,mHAEJ,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
