{
  "version": 3,
  "sources": ["../../src/UI/TransactionsTable/components/TransactionReceiver.tsx"],
  "sourcesContent": ["import React from 'react';\nimport classNames from 'classnames';\nimport { DataTestIdsEnum } from 'constants/index';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { TransactionDirectionEnum } from 'types/serverTransactions.types';\nimport { ExplorerLink } from 'UI/ExplorerLink';\nimport { WithTransactionType } from 'UI/types';\nimport { AccountName } from './AccountName';\nimport { LockedTokenAddressIcon } from './LockedTokenAddressIcon';\nimport { ScAddressIcon } from './ScAddressIcon';\n\nexport interface TransactionReceiverPropsType extends WithTransactionType {\n  showLockedAccounts?: boolean;\n}\n\nconst TransactionReceiverComponent = ({\n  transaction,\n  showLockedAccounts,\n  globalStyles,\n  styles\n}: TransactionReceiverPropsType & WithStylesImportType) => {\n  const directionIn =\n    transaction.transactionDetails.direction === TransactionDirectionEnum.IN;\n\n  return (\n    <div\n      className={classNames(\n        globalStyles?.dFlex,\n        globalStyles?.alignItemsCenter,\n        styles?.transactionCell\n      )}\n      data-testid={DataTestIdsEnum.transactionReceiver}\n    >\n      {showLockedAccounts && (\n        <LockedTokenAddressIcon\n          address={transaction.receiver}\n          tokenId={transaction.tokenIdentifier ?? ''}\n        />\n      )}\n\n      <ScAddressIcon initiator={transaction.receiver} />\n\n      {directionIn ? (\n        <div\n          className={classNames(\n            globalStyles?.w100,\n            styles?.transactionCellMargin,\n            styles?.transactionCellOverflow\n          )}\n        >\n          <AccountName\n            address={transaction.sender}\n            assets={transaction.senderAssets}\n          />\n        </div>\n      ) : (\n        <ExplorerLink\n          page={transaction.links.receiverLink ?? ''}\n          data-testid={DataTestIdsEnum.receiverLink}\n          className={classNames(\n            globalStyles?.w100,\n            styles?.transactionCellMargin,\n            styles?.transactionCellOverflow,\n            styles?.transactionCellLink\n          )}\n        >\n          <AccountName\n            address={transaction.receiver}\n            assets={transaction.receiverAssets}\n          />\n        </ExplorerLink>\n      )}\n    </div>\n  );\n};\n\nexport const TransactionReceiver = withStyles(TransactionReceiverComponent, {\n  ssrStyles: () =>\n    import('UI/TransactionsTable/components/transactionsTable.styles.scss'),\n  clientStyles: () =>\n    require('UI/TransactionsTable/components/transactionsTable.styles.scss')\n      .default\n});\n"],
  "mappings": "iXAAA,IAEA,IAFA,qBACA,0BAGA,IAWA,GAAM,GAA+B,CAAC,CACpC,cACA,qBACA,eACA,YACyD,CApB3D,QAqBE,GAAM,GACJ,EAAY,mBAAmB,YAAc,KAE/C,MACE,iBAAC,OACC,UAAW,EACT,iBAAc,MACd,iBAAc,iBACd,iBAAQ,eACV,EACA,cAAa,uBAEZ,GACC,gBAAC,GACC,QAAS,EAAY,SACrB,QAAS,KAAY,kBAAZ,OAA+B,GAC1C,EAGF,gBAAC,GAAc,UAAW,EAAY,SAAU,EAE/C,EACC,gBAAC,OACC,UAAW,EACT,iBAAc,KACd,iBAAQ,sBACR,iBAAQ,uBACV,GAEA,gBAAC,GACC,QAAS,EAAY,OACrB,OAAQ,EAAY,aACtB,CACF,EAEA,gBAAC,GACC,KAAM,KAAY,MAAM,eAAlB,OAAkC,GACxC,cAAa,eACb,UAAW,EACT,iBAAc,KACd,iBAAQ,sBACR,iBAAQ,wBACR,iBAAQ,mBACV,GAEA,gBAAC,GACC,QAAS,EAAY,SACrB,OAAQ,EAAY,eACtB,CACF,CAEJ,CAEJ,EAEa,EAAsB,EAAW,EAA8B,CAC1E,UAAW,IACT,OAAO,kEACT,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
