{
  "version": 3,
  "sources": ["../../src/UI/TimeAgo/TimeAgo.tsx"],
  "sourcesContent": ["import React from 'react';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { timeAgo } from 'utils/operations/timeRemaining';\nimport { getHumanReadableTimeFormat } from 'utils/transactions/getInterpretedTransaction/helpers/getHumanReadableTimeFormat';\n\nexport interface TimeAgoPropsType {\n  value: number;\n  short?: boolean;\n  tooltip?: boolean;\n}\n\nconst TimeAgoComponent = ({\n  value,\n  short = false,\n  tooltip = false,\n  styles\n}: TimeAgoPropsType & WithStylesImportType) => {\n  const result = timeAgo(value * 1000, short);\n\n  const component = tooltip ? (\n    <span\n      title={getHumanReadableTimeFormat({\n        value,\n        noSeconds: false,\n        utc: true\n      })}\n      data-testid={`timeAgo-${value}`}\n    >\n      {result}\n    </span>\n  ) : (\n    <span data-testid={`timeAgo-${value}`}>{result}</span>\n  );\n\n  return <span className={styles?.transactionCell}>{component}</span>;\n};\n\nexport const TimeAgo = withStyles(TimeAgoComponent, {\n  ssrStyles: () =>\n    import('UI/TransactionsTable/components/transactionsTable.styles.scss'),\n  clientStyles: () =>\n    require('UI/TransactionsTable/components/transactionsTable.styles.scss')\n      .default\n});\n"],
  "mappings": "0NAAA,yBAEA,IACA,IAQA,GAAM,GAAmB,CAAC,CACxB,QACA,QAAQ,GACR,UAAU,GACV,YAC6C,CAC7C,GAAM,GAAS,EAAQ,EAAQ,IAAM,CAAK,EAEpC,EAAY,EAChB,gBAAC,QACC,MAAO,EAA2B,CAChC,QACA,UAAW,GACX,IAAK,EACP,CAAC,EACD,cAAa,WAAW,KAEvB,CACH,EAEA,gBAAC,QAAK,cAAa,WAAW,KAAU,CAAO,EAGjD,MAAO,iBAAC,QAAK,UAAW,iBAAQ,iBAAkB,CAAU,CAC9D,EAEa,EAAU,EAAW,EAAkB,CAClD,UAAW,IACT,OAAO,kEACT,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
