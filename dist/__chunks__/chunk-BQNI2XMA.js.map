{
  "version": 3,
  "sources": ["../../src/reduxStore/selectors/signedMessageInfoSelectors.ts"],
  "sourcesContent": ["import { SignedMessageInfoStateType } from 'reduxStore/slices';\nimport { RootState } from '../store';\nimport { createDeepEqualSelector } from './helpers';\n\nexport const signedMessageInfoSliceSelector = (state: RootState) =>\n  state.signedMessageInfo;\n\nexport const signedMessageIsSigningSelector = createDeepEqualSelector(\n  signedMessageInfoSliceSelector,\n  (state: SignedMessageInfoStateType) => state.isSigning\n);\n\nexport const signedMessageErrorSelector = createDeepEqualSelector(\n  signedMessageInfoSliceSelector,\n  (state: SignedMessageInfoStateType) => state.errorMessage\n);\n\nexport const lastSignedSessionSelector = createDeepEqualSelector(\n  signedMessageInfoSliceSelector,\n  (state: SignedMessageInfoStateType) => {\n    const sessionIds = Object.keys(state.signedSessions);\n    const sessionIdsLength = sessionIds.length;\n\n    return state.signedSessions[sessionIds[sessionIdsLength - 1]];\n  }\n);\n\nexport const lastSignedSessionId = createDeepEqualSelector(\n  signedMessageInfoSliceSelector,\n  (state: SignedMessageInfoStateType) => {\n    const sessionIds = Object.keys(state.signedSessions);\n    const sessionIdsLength = sessionIds.length;\n    return sessionIds.length > 0 ? sessionIds[sessionIdsLength - 1] : '';\n  }\n);\n"],
  "mappings": "8FAAA,GAIa,GAGA,EAKA,EAKA,EAUA,EA3Bb,aAEA,IAEO,AAAM,EAAiC,AAAC,GAC7C,EAAM,kBAEK,EAAiC,EAC5C,EACA,AAAC,GAAsC,EAAM,SAC/C,EAEa,EAA6B,EACxC,EACA,AAAC,GAAsC,EAAM,YAC/C,EAEa,EAA4B,EACvC,EACA,AAAC,GAAsC,CACrC,GAAM,GAAa,OAAO,KAAK,EAAM,cAAc,EAC7C,EAAmB,EAAW,OAEpC,MAAO,GAAM,eAAe,EAAW,EAAmB,GAC5D,CACF,EAEa,EAAsB,EACjC,EACA,AAAC,GAAsC,CACrC,GAAM,GAAa,OAAO,KAAK,EAAM,cAAc,EAC7C,EAAmB,EAAW,OACpC,MAAO,GAAW,OAAS,EAAI,EAAW,EAAmB,GAAK,EACpE,CACF",
  "names": []
}
