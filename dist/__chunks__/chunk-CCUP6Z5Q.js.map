{
  "version": 3,
  "sources": ["../../src/utils/transactions/getInterpretedTransaction/helpers/getTransactionValue/helpers/getTitleText.ts"],
  "sourcesContent": ["import { TokenArgumentType } from 'types/serverTransactions.types';\nimport {\n  EgldValueDataType,\n  NFTValueDataType,\n  TokenValueDataType\n} from 'utils/transactions/getInterpretedTransaction/helpers/types';\nimport { getTransactionActionNftText } from 'utils/transactions/transactionInfoHelpers/getTransactionActionNftText';\nimport { getTransactionActionTokenText } from 'utils/transactions/transactionInfoHelpers/getTransactionActionTokenText';\nimport { getIdentifierType } from 'utils/validation/getIdentifierType';\n\nexport interface GetTransactionValueReturnType {\n  egldValueData?: EgldValueDataType;\n  tokenValueData?: TokenValueDataType;\n  nftValueData?: NFTValueDataType;\n}\n\nexport const getTitleText = (\n  transactionTokens: TokenArgumentType[]\n): string => {\n  const tokensArray = transactionTokens.map((transactionToken) => {\n    const { isNft } = getIdentifierType(transactionToken.type);\n    if (isNft) {\n      const { badgeText, tokenFormattedAmount, tokenLinkText } =\n        getTransactionActionNftText({\n          token: transactionToken\n        });\n\n      const badge = badgeText != null ? `(${badgeText}) ` : '';\n\n      const value = `${badge}${tokenFormattedAmount} ${tokenLinkText}`;\n      return value;\n    }\n    const { tokenFormattedAmount, tokenLinkText, token } =\n      getTransactionActionTokenText({\n        token: transactionToken as TokenArgumentType\n      });\n\n    const identifier = token.collection ? token.identifier : token.token;\n\n    const value = `${tokenFormattedAmount} ${tokenLinkText} (${identifier})`;\n    return value;\n  });\n\n  const joinedTokensWithLineBreak = decodeURI(tokensArray.join('%0A'));\n  return joinedTokensWithLineBreak;\n};\n"],
  "mappings": "uLAAA,GAgBa,GAhBb,aAMA,IACA,IACA,IAQO,AAAM,EAAe,AAC1B,GACW,CACX,GAAM,GAAc,EAAkB,IAAI,AAAC,GAAqB,CAC9D,GAAM,CAAE,SAAU,EAAkB,EAAiB,IAAI,EACzD,GAAI,EAAO,CACT,GAAM,CAAE,YAAW,uBAAsB,iBACvC,EAA4B,CAC1B,MAAO,CACT,CAAC,EAKH,MADc,GAFA,GAAa,KAAO,IAAI,MAAgB,KAE7B,KAAwB,GAEnD,CACA,GAAM,CAAE,uBAAsB,gBAAe,SAC3C,EAA8B,CAC5B,MAAO,CACT,CAAC,EAEG,EAAa,EAAM,WAAa,EAAM,WAAa,EAAM,MAG/D,MADc,GAAG,KAAwB,MAAkB,IAE7D,CAAC,EAGD,MADkC,WAAU,EAAY,KAAK,KAAK,CAAC,CAErE",
  "names": []
}
