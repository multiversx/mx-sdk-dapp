{
  "version": 3,
  "sources": ["../../src/constants/dataTestIds.enum.ts"],
  "sourcesContent": ["export enum DataTestIdsEnum {\n  accessWalletBtn = 'accessWalletBtn',\n  accessCrossWindowWalletBtn = 'accessCrossWindowWalletBtn',\n  addressTableContainer = 'addressTableContainer',\n  closeButton = 'closeButton',\n  confirmAmount = 'confirmAmount',\n  confirmBtn = 'confirmBtn',\n  confirmData = 'confirmData',\n  confirmFee = 'confirmFee',\n  confirmReceiver = 'confirmReceiver',\n  confirmScCall = 'confirmScCall',\n  confirmScamReport = 'confirmScamReport',\n  confirmUsdValue = 'confirmUsdValue',\n  dappModal = 'dappModal',\n  deleteToastButton = 'deleteToastButton',\n  errorScreen = 'errorScreen',\n  extensionLoginButton = 'extensionLoginButton',\n  iframeLoginButton = 'iframeLoginButton',\n  formatAmountComponent = 'formatAmountComponent',\n  formatAmountDecimals = 'formatAmountDecimals',\n  formatAmountInt = 'formatAmountInt',\n  formatAmountSymbol = 'formatAmountSymbol',\n  ledgerConfirmAddress = 'ledgerConfirmAddress',\n  ledgerConnectBtn = 'ledgerConnectBtn',\n  ledgerLoading = 'ledgerLoading',\n  ledgerLoginButton = 'ledgerLoginButton',\n  nextBtn = 'nextBtn',\n  nftExplorerLink = 'nftExplorerLink',\n  nftFormattedAmount = 'nftFormattedAmount',\n  nftIdentifier = 'nftIdentifier',\n  nftLabel = 'nftLabel',\n  operaLoginButton = 'operaLoginButton',\n  prevBtn = 'prevBtn',\n  receiverLink = 'receiverLink',\n  receiverShard = 'receiverShard',\n  scIcon = 'scIcon',\n  senderLink = 'senderLink',\n  senderShard = 'senderShard',\n  shardFromLink = 'shardFromLink',\n  shardToLink = 'shardToLink',\n  signBtn = 'signBtn',\n  signStepTitle = 'signStepTitle',\n  title = 'title',\n  tokenExplorerLink = 'tokenExplorerLink',\n  tokenFormattedAmount = 'tokenFormattedAmount',\n  transactionAction = 'transactionAction',\n  transactionAge = 'transactionAge',\n  transactionDataDecode = 'transactionDataDecode',\n  transactionDetailsToastBody = 'transactionDetailsToastBody',\n  transactionHash = 'transactionHash',\n  transactionInfoFee = 'transactionInfoFee',\n  transactionInfoValue = 'transactionInfoValue',\n  transactionLink = 'transactionLink',\n  transactionMethod = 'transactionMethod',\n  transactionReceiver = 'transactionReceiver',\n  transactionSender = 'transactionSender',\n  transactionTo = 'transactionTo',\n  transactionToAccount = 'transactionToAccount',\n  transactionToContract = 'transactionToContract',\n  transactionToExplorerLink = 'transactionToExplorerLink',\n  transactionToShard = 'transactionToShard',\n  transactionToastContent = 'transactionToastContent',\n  transactionToastTitle = 'transactionToastTitle',\n  transactionValue = 'transactionValue',\n  transactionValueIcon = 'transactionValueIcon',\n  transactionsTable = 'transactionsTable',\n  'trim-text-component' = 'trim-text-component',\n  xAliasLoginButton = 'xAliasLoginButton'\n}\n"],
  "mappings": "+CAAA,GAAY,GAAZ,aAAO,AAAK,EAAL,CAAK,GACV,mBAAkB,kBAClB,6BAA6B,6BAC7B,wBAAwB,wBACxB,cAAc,cACd,gBAAgB,gBAChB,aAAa,aACb,cAAc,cACd,aAAa,aACb,kBAAkB,kBAClB,gBAAgB,gBAChB,oBAAoB,oBACpB,kBAAkB,kBAClB,YAAY,YACZ,oBAAoB,oBACpB,cAAc,cACd,uBAAuB,uBACvB,oBAAoB,oBACpB,wBAAwB,wBACxB,uBAAuB,uBACvB,kBAAkB,kBAClB,qBAAqB,qBACrB,uBAAuB,uBACvB,mBAAmB,mBACnB,gBAAgB,gBAChB,oBAAoB,oBACpB,UAAU,UACV,kBAAkB,kBAClB,qBAAqB,qBACrB,gBAAgB,gBAChB,WAAW,WACX,mBAAmB,mBACnB,UAAU,UACV,eAAe,eACf,gBAAgB,gBAChB,SAAS,SACT,aAAa,aACb,cAAc,cACd,gBAAgB,gBAChB,cAAc,cACd,UAAU,UACV,gBAAgB,gBAChB,QAAQ,QACR,oBAAoB,oBACpB,uBAAuB,uBACvB,oBAAoB,oBACpB,iBAAiB,iBACjB,wBAAwB,wBACxB,8BAA8B,8BAC9B,kBAAkB,kBAClB,qBAAqB,qBACrB,uBAAuB,uBACvB,kBAAkB,kBAClB,oBAAoB,oBACpB,sBAAsB,sBACtB,oBAAoB,oBACpB,gBAAgB,gBAChB,uBAAuB,uBACvB,wBAAwB,wBACxB,4BAA4B,4BAC5B,qBAAqB,qBACrB,0BAA0B,0BAC1B,wBAAwB,wBACxB,mBAAmB,mBACnB,uBAAuB,uBACvB,oBAAoB,oBACpB,yBAAwB,sBACxB,oBAAoB,oBAnEV",
  "names": []
}
