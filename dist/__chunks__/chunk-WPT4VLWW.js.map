{
  "version": 3,
  "sources": ["../../node_modules/lodash/isString.js", "../../src/services/nativeAuth/helpers/decodeLoginToken.ts"],
  "sourcesContent": ["var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n", "import isString from 'lodash/isString';\nimport { decodeBase64 } from 'utils/decoders/base64Utils';\n\nexport interface DecodedLoginTokenType {\n  blockHash: string;\n  extraInfo?: { timestamp: number };\n  origin: string;\n  ttl: number;\n}\n\nexport const decodeLoginToken = (\n  loginToken: string\n): DecodedLoginTokenType | null => {\n  if (!loginToken || !isString(loginToken)) {\n    return null;\n  }\n\n  const parts = loginToken.split('.');\n\n  if (parts.length !== 4) {\n    return null;\n  }\n\n  try {\n    const [origin, blockHash, ttl, extraInfo] = parts;\n    const parsedExtraInfo = JSON.parse(decodeBase64(extraInfo));\n    const parsedOrigin = decodeBase64(origin);\n\n    return {\n      ttl: Number(ttl),\n      extraInfo: parsedExtraInfo,\n      origin: parsedOrigin,\n      blockHash\n    };\n  } catch (e) {\n    console.error(`Error trying to decode ${loginToken}:`, e);\n\n    return null;\n  }\n};\n"],
  "mappings": "uLAAA,uBAAI,GAAa,IACb,EAAU,IACV,EAAe,IAGf,EAAY,kBAmBhB,WAAkB,EAAO,CACvB,MAAO,OAAO,IAAS,UACpB,CAAC,EAAQ,CAAK,GAAK,EAAa,CAAK,GAAK,EAAW,CAAK,GAAK,CACpE,CAEA,EAAO,QAAU,IC7BjB,UAAqB,OACrB,IASO,GAAM,GAAmB,AAC9B,GACiC,CACjC,GAAI,CAAC,GAAc,CAAC,cAAS,CAAU,EACrC,MAAO,MAGT,GAAM,GAAQ,EAAW,MAAM,GAAG,EAElC,GAAI,EAAM,SAAW,EACnB,MAAO,MAGT,GAAI,CACF,GAAM,CAAC,EAAQ,EAAW,EAAK,GAAa,EACtC,EAAkB,KAAK,MAAM,EAAa,CAAS,CAAC,EACpD,EAAe,EAAa,CAAM,EAExC,MAAO,CACL,IAAK,OAAO,CAAG,EACf,UAAW,EACX,OAAQ,EACR,WACF,CACF,OAAS,EAAP,CACA,eAAQ,MAAM,0BAA0B,KAAe,CAAC,EAEjD,IACT,CACF",
  "names": []
}
