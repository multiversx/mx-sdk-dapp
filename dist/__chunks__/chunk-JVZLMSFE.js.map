{
  "version": 3,
  "sources": ["../../src/utils/logout.ts"],
  "sourcesContent": ["import { CrossWindowProvider } from 'lib/sdkWebWalletCrossWindowProvider';\nimport { getAccountProvider, getProviderType } from 'providers';\nimport { logoutAction } from 'reduxStore/commonActions';\nimport { store } from 'reduxStore/store';\nimport { LoginMethodsEnum } from 'types';\nimport { matchPath } from '../wrappers/AuthenticatedRoutesWrapper/helpers/matchPath';\nimport { getAddress, getWebviewToken } from './account';\nimport { preventRedirects, safeRedirect } from './redirect';\nimport { storage } from './storage';\nimport { localStorageKeys } from './storage/local';\nimport { addOriginToLocationPath, getWindowLocation } from './window';\n\ninterface RedirectToCallbackUrlParamsType {\n  callbackUrl?: string;\n  onRedirect?: (callbackUrl?: string) => void;\n}\n\nconst redirectToCallbackUrl = ({\n  callbackUrl,\n  onRedirect\n}: RedirectToCallbackUrlParamsType) => {\n  if (typeof onRedirect === 'function') {\n    onRedirect(callbackUrl);\n  } else if (callbackUrl) {\n    safeRedirect({ url: callbackUrl });\n  }\n};\n\nconst broadcastLogoutAcrossTabs = (address: string) => {\n  const storedData = storage.local.getItem(localStorageKeys.logoutEvent);\n  const { data } = storedData ? JSON.parse(storedData) : { data: address };\n\n  if (address !== data) {\n    return;\n  }\n\n  storage.local.setItem({\n    key: localStorageKeys.logoutEvent,\n    data: address,\n    expires: 0\n  });\n\n  storage.local.removeItem(localStorageKeys.logoutEvent);\n};\n\nconst CLEAR_SESSION_TIMEOUT_MS = 500;\n\nexport async function logout(\n  callbackUrl?: string,\n  onRedirect?: (callbackUrl?: string) => void,\n  shouldAttemptReLogin = Boolean(getWebviewToken()),\n  options = {\n    shouldBroadcastLogoutAcrossTabs: true,\n    hasConsentPopup: false\n  }\n) {\n  let address = '';\n  const provider = getAccountProvider();\n  const providerType = getProviderType(provider);\n  const isWalletProvider = providerType === LoginMethodsEnum.wallet;\n  const isProviderInitialised = provider?.isInitialized?.() === true;\n\n  if (shouldAttemptReLogin && provider?.relogin != null) {\n    return provider.relogin();\n  }\n\n  if (options.shouldBroadcastLogoutAcrossTabs) {\n    try {\n      address = await getAddress();\n      broadcastLogoutAcrossTabs(address);\n    } catch (err) {\n      console.error('error fetching logout address', err);\n    }\n  }\n\n  const url = addOriginToLocationPath(callbackUrl);\n  const location = getWindowLocation();\n  const callbackPathname = new URL(decodeURIComponent(url)).pathname;\n\n  // Prevent page redirect if the logout callbackURL is equal to the current URL\n  // or if is wallet provider\n  if (\n    matchPath(location.pathname, callbackPathname) ||\n    (isWalletProvider && isProviderInitialised)\n  ) {\n    preventRedirects();\n  }\n\n  // We are already logged out, so we can redirect to the dapp\n  if (!address && !isProviderInitialised) {\n    return redirectToCallbackUrl({\n      callbackUrl: url,\n      onRedirect\n    });\n  }\n\n  try {\n    store.dispatch(logoutAction());\n\n    if (isWalletProvider) {\n      // Allow redux store cleanup before redirect to web wallet\n      return setTimeout(() => {\n        provider.logout({ callbackUrl: url });\n      }, CLEAR_SESSION_TIMEOUT_MS);\n    }\n\n    if (\n      options.hasConsentPopup &&\n      providerType === LoginMethodsEnum.crossWindow\n    ) {\n      (provider as unknown as CrossWindowProvider).setShouldShowConsentPopup(\n        true\n      );\n    }\n\n    await provider.logout({ callbackUrl: url });\n  } catch (err) {\n    console.error('Logging out error:', err);\n  } finally {\n    if (!isWalletProvider) {\n      redirectToCallbackUrl({\n        callbackUrl: url,\n        onRedirect\n      });\n    }\n  }\n}\n"],
  "mappings": "ooBAAA,IAEA,IACA,IACA,IAGA,IACA,IACA,IACA,IAOA,GAAM,GAAwB,CAAC,CAC7B,cACA,gBACqC,CACrC,AAAI,MAAO,IAAe,WACxB,EAAW,CAAW,EACb,GACT,EAAa,CAAE,IAAK,CAAY,CAAC,CAErC,EAEM,EAA4B,AAAC,GAAoB,CACrD,GAAM,GAAa,EAAQ,MAAM,QAAQ,EAAiB,WAAW,EAC/D,CAAE,QAAS,EAAa,KAAK,MAAM,CAAU,EAAI,CAAE,KAAM,CAAQ,EAEvE,AAAI,IAAY,GAIhB,GAAQ,MAAM,QAAQ,CACpB,IAAK,EAAiB,YACtB,KAAM,EACN,QAAS,CACX,CAAC,EAED,EAAQ,MAAM,WAAW,EAAiB,WAAW,EACvD,EAEM,EAA2B,IAEjC,WACE,GACA,GAMA,mCAPA,EACA,EACA,EAAuB,QAAQ,EAAgB,CAAC,EAChD,EAAU,CACR,gCAAiC,GACjC,gBAAiB,EACnB,EACA,CAvDF,MAwDE,GAAI,GAAU,GACR,EAAW,EAAmB,EAC9B,EAAe,EAAgB,CAAQ,EACvC,EAAmB,IAAiB,SACpC,EAAwB,qBAAU,gBAAV,yBAAgC,GAE9D,GAAI,GAAwB,kBAAU,UAAW,KAC/C,MAAO,GAAS,QAAQ,EAG1B,GAAI,EAAQ,gCACV,GAAI,CACF,EAAU,KAAM,GAAW,EAC3B,EAA0B,CAAO,CACnC,OAAS,EAAP,CACA,QAAQ,MAAM,gCAAiC,CAAG,CACpD,CAGF,GAAM,GAAM,EAAwB,CAAW,EACzC,EAAW,EAAkB,EAC7B,EAAmB,GAAI,KAAI,mBAAmB,CAAG,CAAC,EAAE,SAY1D,GAPE,GAAU,EAAS,SAAU,CAAgB,GAC5C,GAAoB,IAErB,EAAiB,EAIf,CAAC,GAAW,CAAC,EACf,MAAO,GAAsB,CAC3B,YAAa,EACb,YACF,CAAC,EAGH,GAAI,CAGF,GAFA,EAAM,SAAS,EAAa,CAAC,EAEzB,EAEF,MAAO,YAAW,IAAM,CACtB,EAAS,OAAO,CAAE,YAAa,CAAI,CAAC,CACtC,EAAG,CAAwB,EAG7B,AACE,EAAQ,iBACR,IAAiB,eAEhB,EAA4C,0BAC3C,EACF,EAGF,KAAM,GAAS,OAAO,CAAE,YAAa,CAAI,CAAC,CAC5C,OAAS,EAAP,CACA,QAAQ,MAAM,qBAAsB,CAAG,CACzC,QAAE,CACA,AAAK,GACH,EAAsB,CACpB,YAAa,EACb,YACF,CAAC,CAEL,CACF",
  "names": []
}
