{
  "version": 3,
  "sources": ["../../src/services/transactions/getTransactionsDetails.ts"],
  "sourcesContent": ["import { getTransactionByHashPromise } from 'apiCalls';\nimport { TransactionStatus } from 'models/TransactionStatus';\nimport { ServerTransactionType } from 'types';\nimport { delayWithPromise } from 'utils/delayWithPromise';\n\nexport const getTransactionsDetails = async (txHashes: string[]) => {\n  const delayMs = 3000;\n  let retries = 4;\n  let transactions: ServerTransactionType[] | undefined;\n\n  if (txHashes.length === 0) {\n    return { data: transactions, success: false };\n  }\n\n  while (transactions === undefined && retries > 0) {\n    try {\n      await delayWithPromise(delayMs);\n\n      const promiseResponse = await Promise.allSettled(\n        txHashes.map((hash) => getTransactionByHashPromise(hash))\n      );\n\n      const apiTransactions = promiseResponse\n        .map((response) =>\n          response.status === 'fulfilled' ? response.value.data : undefined\n        )\n        .filter((tx) => tx !== undefined) as ServerTransactionType[];\n\n      const success = apiTransactions.length > 0;\n\n      if (success) {\n        const foundAll = apiTransactions.length === txHashes.length;\n\n        const hasPendingTx = apiTransactions.some((tx) => {\n          const status = new TransactionStatus(tx.status);\n          return status.isPending();\n        });\n\n        if ((foundAll && !hasPendingTx) || retries === 1) {\n          transactions = apiTransactions;\n          retries = 0;\n        } else {\n          retries -= 1;\n        }\n      } else {\n        retries -= 1;\n      }\n    } catch (e) {\n      retries -= 1;\n    }\n  }\n\n  return { data: transactions, success: transactions !== undefined };\n};\n"],
  "mappings": "uKAAA,IAKO,GAAM,GAAyB,AAAO,GAAuB,0BAElE,GAAI,GAAU,EACV,EAEJ,GAAI,EAAS,SAAW,EACtB,MAAO,CAAE,KAAM,EAAc,QAAS,EAAM,EAG9C,KAAO,IAAiB,QAAa,EAAU,GAC7C,GAAI,CACF,KAAM,GAAiB,GAAO,EAM9B,GAAM,GAAkB,AAJA,MAAM,SAAQ,WACpC,EAAS,IAAI,AAAC,GAAS,EAA4B,CAAI,CAAC,CAC1D,GAGG,IAAI,AAAC,GACJ,EAAS,SAAW,YAAc,EAAS,MAAM,KAAO,MAC1D,EACC,OAAO,AAAC,GAAO,IAAO,MAAS,EAIlC,GAFgB,EAAgB,OAAS,EAE5B,CACX,GAAM,GAAW,EAAgB,SAAW,EAAS,OAE/C,EAAe,EAAgB,KAAK,AAAC,GAElC,AADQ,GAAI,GAAkB,EAAG,MAAM,EAChC,UAAU,CACzB,EAED,AAAK,GAAY,CAAC,GAAiB,IAAY,EAC7C,GAAe,EACf,EAAU,GAEV,GAAW,CAEf,KACE,IAAW,CAEf,OAAS,EAAP,CACA,GAAW,CACb,CAGF,MAAO,CAAE,KAAM,EAAc,QAAS,IAAiB,MAAU,CACnE",
  "names": []
}
