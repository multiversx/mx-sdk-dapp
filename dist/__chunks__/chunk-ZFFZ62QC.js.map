{
  "version": 3,
  "sources": ["../../src/UI/TransactionInfo/components/OperationsList/components/OperationText.tsx"],
  "sourcesContent": ["import React from 'react';\n\nimport {\n  TransactionDirectionEnum,\n  TransactionOperationActionTypeEnum\n} from 'types/serverTransactions.types';\nimport { getOperationDirection } from 'utils/transactions/transactionInfoHelpers/getOperationDirection';\n\nimport {\n  WithOperationType,\n  WithTransactionType\n} from '../../../../../UI/types';\nimport { OperationBlock } from './OperationBlock';\n\nexport const OperationText = ({\n  operation,\n  transaction\n}: WithTransactionType & WithOperationType) => {\n  const { direction } = getOperationDirection({\n    operation,\n    address: transaction.sender\n  });\n\n  switch (operation.action) {\n    case TransactionOperationActionTypeEnum.create:\n    case TransactionOperationActionTypeEnum.localMint:\n    case TransactionOperationActionTypeEnum.ESDTLocalMint:\n      return (\n        <OperationBlock\n          transaction={transaction}\n          address={operation.sender}\n          action='Mint by'\n          direction={TransactionDirectionEnum.INTERNAL}\n        />\n      );\n    case TransactionOperationActionTypeEnum.addQuantity:\n      return (\n        <OperationBlock\n          transaction={transaction}\n          address={operation.sender}\n          action='Add quantity by'\n          direction={TransactionDirectionEnum.INTERNAL}\n        />\n      );\n    case TransactionOperationActionTypeEnum.burn:\n    case TransactionOperationActionTypeEnum.localBurn:\n    case TransactionOperationActionTypeEnum.ESDTLocalBurn:\n      return (\n        <OperationBlock\n          transaction={transaction}\n          address={operation.sender}\n          action='Burn by'\n          direction={TransactionDirectionEnum.INTERNAL}\n        />\n      );\n    case TransactionOperationActionTypeEnum.wipe:\n      return (\n        <OperationBlock\n          transaction={transaction}\n          address={operation.receiver}\n          action='Wipe from'\n          direction={TransactionDirectionEnum.INTERNAL}\n        />\n      );\n    case TransactionOperationActionTypeEnum.multiTransfer:\n      return (\n        <>\n          <OperationBlock\n            transaction={transaction}\n            address={operation.sender}\n            action='Multi transfer from'\n            direction={direction}\n          />{' '}\n          <OperationBlock\n            transaction={transaction}\n            address={operation.receiver}\n            action='To'\n          />\n        </>\n      );\n    case TransactionOperationActionTypeEnum.transfer:\n      return (\n        <>\n          <OperationBlock\n            transaction={transaction}\n            address={operation.sender}\n            action='Transfer from'\n            direction={direction}\n          />{' '}\n          <OperationBlock\n            transaction={transaction}\n            address={operation.receiver}\n            action='To'\n          />\n        </>\n      );\n    case TransactionOperationActionTypeEnum.writeLog:\n      return (\n        <OperationBlock\n          transaction={transaction}\n          address={operation.sender}\n          action='Write log by'\n          direction={TransactionDirectionEnum.INTERNAL}\n          isFullSize\n        />\n      );\n    case TransactionOperationActionTypeEnum.signalError:\n      return (\n        <OperationBlock\n          transaction={transaction}\n          address={operation.sender}\n          action='Signal error by'\n          direction={TransactionDirectionEnum.INTERNAL}\n          isFullSize\n        />\n      );\n    default:\n      return (\n        <>\n          <OperationBlock\n            transaction={transaction}\n            address={operation.sender}\n            action='From'\n            direction={direction}\n          />{' '}\n          <OperationBlock\n            transaction={transaction}\n            address={operation.receiver}\n            action='To'\n          />\n        </>\n      );\n  }\n};\n"],
  "mappings": "uKAAA,IAEA,IAIA,IANA,qBAcO,GAAM,GAAgB,CAAC,CAC5B,YACA,iBAC6C,CAC7C,GAAM,CAAE,aAAc,EAAsB,CAC1C,YACA,QAAS,EAAY,MACvB,CAAC,EAED,OAAQ,EAAU,YACX,aACA,gBACA,gBACH,MACE,iBAAC,GACC,YAAa,EACb,QAAS,EAAU,OACnB,OAAO,UACP,UAAW,WACb,MAEC,cACH,MACE,iBAAC,GACC,YAAa,EACb,QAAS,EAAU,OACnB,OAAO,kBACP,UAAW,WACb,MAEC,WACA,gBACA,gBACH,MACE,iBAAC,GACC,YAAa,EACb,QAAS,EAAU,OACnB,OAAO,UACP,UAAW,WACb,MAEC,OACH,MACE,iBAAC,GACC,YAAa,EACb,QAAS,EAAU,SACnB,OAAO,YACP,UAAW,WACb,MAEC,gBACH,MACE,iCACE,gBAAC,GACC,YAAa,EACb,QAAS,EAAU,OACnB,OAAO,sBACP,UAAW,EACb,EAAG,IACH,gBAAC,GACC,YAAa,EACb,QAAS,EAAU,SACnB,OAAO,KACT,CACF,MAEC,WACH,MACE,iCACE,gBAAC,GACC,YAAa,EACb,QAAS,EAAU,OACnB,OAAO,gBACP,UAAW,EACb,EAAG,IACH,gBAAC,GACC,YAAa,EACb,QAAS,EAAU,SACnB,OAAO,KACT,CACF,MAEC,WACH,MACE,iBAAC,GACC,YAAa,EACb,QAAS,EAAU,OACnB,OAAO,eACP,UAAW,WACX,WAAU,GACZ,MAEC,cACH,MACE,iBAAC,GACC,YAAa,EACb,QAAS,EAAU,OACnB,OAAO,kBACP,UAAW,WACX,WAAU,GACZ,UAGF,MACE,iCACE,gBAAC,GACC,YAAa,EACb,QAAS,EAAU,OACnB,OAAO,OACP,UAAW,EACb,EAAG,IACH,gBAAC,GACC,YAAa,EACb,QAAS,EAAU,SACnB,OAAO,KACT,CACF,EAGR",
  "names": []
}
