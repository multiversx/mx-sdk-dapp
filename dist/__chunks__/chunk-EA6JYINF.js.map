{
  "version": 3,
  "sources": ["../../src/services/nativeAuth/methods/getNativeAuthConfig.ts"],
  "sourcesContent": ["import { NativeAuthConfigType } from 'types';\nimport { getWindowLocation } from 'utils/window/getWindowLocation';\n\nconst defaultNativeAuthConfig = {\n  origin: getWindowLocation().origin,\n  apiAddress: 'https://api.multiversx.com',\n  expirySeconds: 60 * 60 * 24, // one day\n  tokenExpirationToastWarningSeconds: 5 * 60 // five minutes\n};\n\nexport const getNativeAuthConfig = (config?: NativeAuthConfigType | true) => {\n  if (config === true) {\n    return defaultNativeAuthConfig;\n  }\n  const nativeAuthConfig = {\n    origin: config?.origin ?? defaultNativeAuthConfig.origin,\n    blockHashShard: config?.blockHashShard,\n    expirySeconds:\n      config?.expirySeconds ?? defaultNativeAuthConfig.expirySeconds,\n    apiAddress: config?.apiAddress ?? defaultNativeAuthConfig.apiAddress,\n    tokenExpirationToastWarningSeconds:\n      config?.tokenExpirationToastWarningSeconds ??\n      defaultNativeAuthConfig.tokenExpirationToastWarningSeconds,\n    extraInfo: config?.extraInfo ?? {},\n    gatewayUrl: config?.gatewayUrl,\n    extraRequestHeaders: config?.extraRequestHeaders ?? {}\n  };\n  return nativeAuthConfig;\n};\n"],
  "mappings": "uFAAA,IACA,IAEA,GAAM,GAA0B,CAC9B,OAAQ,EAAkB,EAAE,OAC5B,WAAY,6BACZ,cAAe,GAAK,GAAK,GACzB,mCAAoC,EAAI,EAC1C,EAEa,EAAsB,AAAC,GAAyC,CAV7E,gBAWE,MAAI,KAAW,GACN,EAEgB,CACvB,OAAQ,oBAAQ,SAAR,OAAkB,EAAwB,OAClD,eAAgB,iBAAQ,eACxB,cACE,oBAAQ,gBAAR,OAAyB,EAAwB,cACnD,WAAY,oBAAQ,aAAR,OAAsB,EAAwB,WAC1D,mCACE,oBAAQ,qCAAR,OACA,EAAwB,mCAC1B,UAAW,oBAAQ,YAAR,OAAqB,CAAC,EACjC,WAAY,iBAAQ,WACpB,oBAAqB,oBAAQ,sBAAR,OAA+B,CAAC,CACvD,CAEF",
  "names": []
}
