{
  "version": 3,
  "sources": ["../../src/UI/SignTransactionsModals/SignWithDeviceModal/components/ProgressHeader/ProgressHeader.tsx"],
  "sourcesContent": ["import React from 'react';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { ProgressHeaderPropsType } from './ProgressHeader.types';\n\nconst ProgressHeaderComponent = (\n  props: ProgressHeaderPropsType & WithStylesImportType\n) => {\n  const {\n    steps,\n    size = 'large',\n    type = 'simple',\n    collapsible = false,\n    styles\n  } = props;\n\n  const available = steps.filter((step) => !step.hidden);\n  const active = available.findIndex((step) => step.active);\n  const total = size === 'large' ? 650 : 450;\n  const third = (33 / 100) * total;\n\n  return (\n    <div className={styles?.progressSteps}>\n      {available.map((step, index) => (\n        <div\n          key={`progress-step-${index}`}\n          style={{ width: collapsible ? 'auto' : `${100 / available.length}%` }}\n          className={classNames(styles?.progressStep, {\n            [styles?.left]: type === 'detailed'\n          })}\n        >\n          <div\n            style={{ width: collapsible ? (step.active ? third : 20) : 'auto' }}\n            className={classNames(styles?.progressStepWrapper, {\n              [styles?.active]: step.active,\n              [styles?.detailed]: type === 'detailed',\n              [styles?.completed]: index < active || step.completed,\n              [styles?.collapsible]: collapsible\n            })}\n          >\n            <div\n              className={classNames(styles?.progressStepIndex, {\n                [styles?.active]: step.active\n              })}\n            >\n              {index + 1}\n\n              {type === 'detailed' && index < active && (\n                <FontAwesomeIcon\n                  icon={faCheck}\n                  className={styles?.progressStepCheck}\n                />\n              )}\n            </div>\n\n            {step.title && type === 'detailed' && (\n              <div\n                className={classNames(styles?.progressStepTitle, {\n                  [styles?.active]: step.active,\n                  [styles?.collapsible]: collapsible\n                })}\n              >\n                <div className={styles?.progressStepTitleText}>\n                  {step.title}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport const ProgressHeader = withStyles(ProgressHeaderComponent, {\n  ssrStyles: () =>\n    import(\n      'UI/SignTransactionsModals/SignWithDeviceModal/components/ProgressHeader/progressHeaderStyles.scss'\n    ),\n  clientStyles: () =>\n    require('UI/SignTransactionsModals/SignWithDeviceModal/components/ProgressHeader/progressHeaderStyles.scss')\n      .default\n});\n"],
  "mappings": "sIAAA,yBACA,4DACA,iEACA,0BAIA,GAAM,GAA0B,AAC9B,GACG,CACH,GAAM,CACJ,QACA,OAAO,QACP,OAAO,SACP,cAAc,GACd,UACE,EAEE,EAAY,EAAM,OAAO,AAAC,GAAS,CAAC,EAAK,MAAM,EAC/C,EAAS,EAAU,UAAU,AAAC,GAAS,EAAK,MAAM,EAClD,EAAQ,IAAS,QAAU,IAAM,IACjC,EAAS,GAAK,IAAO,EAE3B,MACE,iBAAC,OAAI,UAAW,iBAAQ,eACrB,EAAU,IAAI,CAAC,EAAM,IACpB,gBAAC,OACC,IAAK,iBAAiB,IACtB,MAAO,CAAE,MAAO,EAAc,OAAS,GAAG,IAAM,EAAU,SAAU,EACpE,UAAW,EAAW,iBAAQ,aAAc,CAC1C,CAAC,iBAAQ,MAAO,IAAS,UAC3B,CAAC,GAED,gBAAC,OACC,MAAO,CAAE,MAAO,EAAe,EAAK,OAAS,EAAQ,GAAM,MAAO,EAClE,UAAW,EAAW,iBAAQ,oBAAqB,CACjD,CAAC,iBAAQ,QAAS,EAAK,OACvB,CAAC,iBAAQ,UAAW,IAAS,WAC7B,CAAC,iBAAQ,WAAY,EAAQ,GAAU,EAAK,UAC5C,CAAC,iBAAQ,aAAc,CACzB,CAAC,GAED,gBAAC,OACC,UAAW,EAAW,iBAAQ,kBAAmB,CAC/C,CAAC,iBAAQ,QAAS,EAAK,MACzB,CAAC,GAEA,EAAQ,EAER,IAAS,YAAc,EAAQ,GAC9B,gBAAC,GACC,KAAM,EACN,UAAW,iBAAQ,kBACrB,CAEJ,EAEC,EAAK,OAAS,IAAS,YACtB,gBAAC,OACC,UAAW,EAAW,iBAAQ,kBAAmB,CAC/C,CAAC,iBAAQ,QAAS,EAAK,OACvB,CAAC,iBAAQ,aAAc,CACzB,CAAC,GAED,gBAAC,OAAI,UAAW,iBAAQ,uBACrB,EAAK,KACR,CACF,CAEJ,CACF,CACD,CACH,CAEJ,EAEa,EAAiB,EAAW,EAAyB,CAChE,UAAW,IACT,OACE,sGAEJ,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
