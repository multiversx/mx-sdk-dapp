{
  "version": 3,
  "sources": ["../../src/UI/ledger/LedgerLoginContainer/ConfirmAddress/ConfirmAddress.tsx"],
  "sourcesContent": ["import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { DataTestIdsEnum } from 'constants/index';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { useGetAccountInfo } from 'hooks';\nimport { useSelector } from 'reduxStore/DappProviderContext';\nimport { tokenLoginSelector } from 'reduxStore/selectors';\nimport { WithClassnameType } from '../../../types';\nimport { getAuthTokenText } from './helpers';\n\nexport interface ConfirmAddressPropsType extends WithClassnameType {\n  token?: string;\n  noBorder?: boolean;\n  customContentComponent?: ReactNode;\n  confirmAddressClassNames?: {\n    ledgerModalTitleClassName?: string;\n    ledgerModalConfirmDescriptionClassName?: string;\n    ledgerModalConfirmDataClassName?: string;\n    ledgerModalConfirmFooterClassName?: string;\n    ledgerModalConfirmContentClassName?: string;\n  };\n}\n\nconst ConfirmAddressComponent = ({\n  token,\n  className = 'dapp-ledger-confirm-address',\n  customContentComponent,\n  confirmAddressClassNames,\n  styles\n}: ConfirmAddressPropsType & WithStylesImportType) => {\n  const { ledgerAccount } = useGetAccountInfo();\n  const {\n    ledgerModalTitleClassName,\n    ledgerModalConfirmDescriptionClassName,\n    ledgerModalConfirmDataClassName,\n    ledgerModalConfirmFooterClassName,\n    ledgerModalConfirmContentClassName\n  } = confirmAddressClassNames || {};\n\n  const tokenLogin = useSelector(tokenLoginSelector);\n  const loginToken = tokenLogin?.loginToken ?? token;\n\n  const authTokenText = getAuthTokenText({\n    loginToken,\n    version: ledgerAccount?.version\n  });\n\n  return (\n    <div\n      className={classNames(\n        styles?.ledgerConfirmAddress,\n        ledgerModalConfirmContentClassName,\n        className\n      )}\n      data-testid={DataTestIdsEnum.ledgerConfirmAddress}\n    >\n      <h4\n        className={classNames(\n          styles?.ledgerConfirmAddressHeading,\n          ledgerModalTitleClassName\n        )}\n      >\n        Confirm Ledger Address\n      </h4>\n\n      {customContentComponent}\n\n      <div className={styles?.ledgerConfirmAddressSection}>\n        <div\n          className={classNames(\n            styles?.ledgerConfirmAddressDescription,\n            ledgerModalConfirmDescriptionClassName\n          )}\n        >\n          {authTokenText?.confirmAddressText}\n        </div>\n\n        <div\n          className={classNames(\n            styles?.ledgerConfirmAddressData,\n            ledgerModalConfirmDataClassName\n          )}\n        >\n          {ledgerAccount?.address ?? ''}\n        </div>\n      </div>\n\n      <div className={styles?.ledgerConfirmAddressSection}>\n        <div\n          className={classNames(\n            styles?.ledgerConfirmAddressDescription,\n            ledgerModalConfirmDescriptionClassName\n          )}\n        >\n          {authTokenText?.authText}\n        </div>\n\n        <div\n          className={classNames(\n            styles?.ledgerConfirmAddressData,\n            ledgerModalConfirmDataClassName\n          )}\n        >\n          {authTokenText?.data}\n        </div>\n\n        <div\n          className={classNames(\n            styles?.ledgerConfirmAddressDescription,\n            ledgerModalConfirmDescriptionClassName\n          )}\n        >\n          {authTokenText?.areShownText}\n        </div>\n      </div>\n\n      <div\n        className={classNames(\n          styles?.ledgerConfirmAddressFooter,\n          ledgerModalConfirmFooterClassName\n        )}\n      >\n        <div>Select Approve on your device to confirm.</div>\n\n        <div>\n          Or, if it does not match, close this page and{' '}\n          <a\n            href='https://help.multiversx.com/en/'\n            target='_blank'\n            rel='noreferrer'\n          >\n            contact support\n          </a>\n          .\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const ConfirmAddress = withStyles(ConfirmAddressComponent, {\n  ssrStyles: () =>\n    import(\n      'UI/ledger/LedgerLoginContainer/ConfirmAddress/confirmAddressStyles.scss'\n    ),\n  clientStyles: () =>\n    require('UI/ledger/LedgerLoginContainer/ConfirmAddress/confirmAddressStyles.scss')\n      .default\n});\n"],
  "mappings": "sXAAA,IAEA,IAFA,qBACA,0BAKA,IAiBA,GAAM,GAA0B,CAAC,CAC/B,QACA,YAAY,8BACZ,yBACA,2BACA,YACoD,CA7BtD,QA8BE,GAAM,CAAE,iBAAkB,EAAkB,EACtC,CACJ,4BACA,yCACA,kCACA,oCACA,sCACE,GAA4B,CAAC,EAE3B,EAAa,EAAY,CAAkB,EAC3C,EAAa,oBAAY,aAAZ,OAA0B,EAEvC,EAAgB,EAAiB,CACrC,aACA,QAAS,iBAAe,OAC1B,CAAC,EAED,MACE,iBAAC,OACC,UAAW,EACT,iBAAQ,qBACR,EACA,CACF,EACA,cAAa,wBAEb,gBAAC,MACC,UAAW,EACT,iBAAQ,4BACR,CACF,GACD,wBAED,EAEC,EAED,gBAAC,OAAI,UAAW,iBAAQ,6BACtB,gBAAC,OACC,UAAW,EACT,iBAAQ,gCACR,CACF,GAEC,iBAAe,kBAClB,EAEA,gBAAC,OACC,UAAW,EACT,iBAAQ,yBACR,CACF,GAEC,oBAAe,UAAf,OAA0B,EAC7B,CACF,EAEA,gBAAC,OAAI,UAAW,iBAAQ,6BACtB,gBAAC,OACC,UAAW,EACT,iBAAQ,gCACR,CACF,GAEC,iBAAe,QAClB,EAEA,gBAAC,OACC,UAAW,EACT,iBAAQ,yBACR,CACF,GAEC,iBAAe,IAClB,EAEA,gBAAC,OACC,UAAW,EACT,iBAAQ,gCACR,CACF,GAEC,iBAAe,YAClB,CACF,EAEA,gBAAC,OACC,UAAW,EACT,iBAAQ,2BACR,CACF,GAEA,gBAAC,WAAI,2CAAyC,EAE9C,gBAAC,WAAI,gDAC2C,IAC9C,gBAAC,KACC,KAAK,kCACL,OAAO,SACP,IAAI,cACL,iBAED,EAAI,GAEN,CACF,CACF,CAEJ,EAEa,EAAiB,EAAW,EAAyB,CAChE,UAAW,IACT,OACE,4EAEJ,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
