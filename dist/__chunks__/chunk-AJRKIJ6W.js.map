{
  "version": 3,
  "sources": ["../../src/UI/SignTransactionsModals/SignWithDeviceModal/components/SignStepBody.tsx"],
  "sourcesContent": ["import React from 'react';\nimport { Address } from '@multiversx/sdk-core/out';\nimport classNames from 'classnames';\n\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { ActiveLedgerTransactionType, MultiSignTransactionType } from 'types';\nimport { TransactionData } from 'UI/TransactionData';\n\nimport { useSignStepsClasses } from '../hooks';\nimport { ConfirmAmount, ConfirmFee, ConfirmReceiver } from './components';\n\nexport interface SignStepInnerClassesType {\n  buttonsWrapperClassName?: string;\n  inputGroupClassName?: string;\n  inputLabelClassName?: string;\n  inputValueClassName?: string;\n  errorClassName?: string;\n  scamAlertClassName?: string;\n  buttonClassName?: string;\n  progressClassName?: string;\n}\n\nexport interface SignStepBodyPropsType {\n  error: string | null;\n  callbackRoute?: string;\n  currentStep: number;\n  currentTransaction: ActiveLedgerTransactionType | null;\n  allTransactions: MultiSignTransactionType[];\n  signStepInnerClasses?: SignStepInnerClassesType;\n  isGuarded?: boolean;\n}\n\nconst SignStepBodyComponent = ({\n  currentTransaction,\n  error,\n  signStepInnerClasses,\n  globalStyles,\n  styles\n}: SignStepBodyPropsType & WithStylesImportType) => {\n  if (!currentTransaction) {\n    return null;\n  }\n\n  const {\n    inputGroupClassName,\n    inputLabelClassName,\n    inputValueClassName,\n    errorClassName\n  } = signStepInnerClasses || {};\n\n  const { tokenId, multiTxData, receiver, amount } =\n    currentTransaction.transactionTokenInfo;\n\n  const transactionReceiver = multiTxData\n    ? new Address(receiver).bech32()\n    : currentTransaction.transaction.getReceiver().toString();\n\n  const scamReport = currentTransaction.receiverScamInfo;\n  const classes = useSignStepsClasses(scamReport, globalStyles);\n  const data = currentTransaction.transaction.getData().toString();\n\n  return (\n    <div className={styles?.summary}>\n      <div className={styles?.fields}>\n        <ConfirmAmount currentTransaction={currentTransaction} />\n\n        <ConfirmReceiver\n          scamReport={scamReport}\n          receiver={transactionReceiver}\n          amount={amount}\n        />\n\n        <ConfirmFee transaction={currentTransaction.transaction} />\n\n        {data && (\n          <TransactionData\n            className={inputGroupClassName}\n            data={data}\n            highlight={multiTxData}\n            innerTransactionDataClasses={{\n              transactionDataInputLabelClassName: inputLabelClassName,\n              transactionDataInputValueClassName: inputValueClassName\n            }}\n            isScCall={!tokenId}\n            showDataDecode\n            transactionIndex={currentTransaction.transactionIndex}\n          />\n        )}\n\n        {error && (\n          <p className={classNames(classes.errorMessage, errorClassName)}>\n            {error}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const SignStepBody = withStyles(SignStepBodyComponent, {\n  ssrStyles: () =>\n    import(\n      'UI/SignTransactionsModals/SignWithDeviceModal/components/signStepBodyStyles.scss'\n    ),\n  clientStyles: () =>\n    require('UI/SignTransactionsModals/SignWithDeviceModal/components/signStepBodyStyles.scss')\n      .default\n});\n"],
  "mappings": "8UAAA,yBACA,mDACA,0BA8BA,GAAM,GAAwB,CAAC,CAC7B,qBACA,QACA,uBACA,eACA,YACkD,CAClD,GAAI,CAAC,EACH,MAAO,MAGT,GAAM,CACJ,sBACA,sBACA,sBACA,kBACE,GAAwB,CAAC,EAEvB,CAAE,UAAS,cAAa,WAAU,UACtC,EAAmB,qBAEf,EAAsB,EACxB,GAAI,GAAQ,CAAQ,EAAE,OAAO,EAC7B,EAAmB,YAAY,YAAY,EAAE,SAAS,EAEpD,EAAa,EAAmB,iBAChC,EAAU,EAAoB,EAAY,CAAY,EACtD,EAAO,EAAmB,YAAY,QAAQ,EAAE,SAAS,EAE/D,MACE,iBAAC,OAAI,UAAW,iBAAQ,SACtB,gBAAC,OAAI,UAAW,iBAAQ,QACtB,gBAAC,GAAc,mBAAoB,EAAoB,EAEvD,gBAAC,GACC,WAAY,EACZ,SAAU,EACV,OAAQ,EACV,EAEA,gBAAC,GAAW,YAAa,EAAmB,YAAa,EAExD,GACC,gBAAC,GACC,UAAW,EACX,KAAM,EACN,UAAW,EACX,4BAA6B,CAC3B,mCAAoC,EACpC,mCAAoC,CACtC,EACA,SAAU,CAAC,EACX,eAAc,GACd,iBAAkB,EAAmB,iBACvC,EAGD,GACC,gBAAC,KAAE,UAAW,EAAW,EAAQ,aAAc,CAAc,GAC1D,CACH,CAEJ,CACF,CAEJ,EAEa,EAAe,EAAW,EAAuB,CAC5D,UAAW,IACT,OACE,qFAEJ,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
