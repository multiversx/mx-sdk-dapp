{
  "version": 3,
  "sources": ["../../src/hooks/login/useAddressScreens.ts"],
  "sourcesContent": ["import { useState } from 'react';\nimport {\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType\n} from '../../types';\n\nconst defaultAddressesPerPage = 10;\n\nexport interface SelectedAddress {\n  address: string;\n  index: number;\n}\n\nexport interface LedgerLoginHookCustomStateType {\n  accounts: string[];\n  showAddressList: boolean;\n  startIndex: number;\n  selectedAddress: SelectedAddress | null;\n  onGoToPrevPage: () => void;\n  onGoToNextPage: () => void;\n  onSelectAddress: (address: SelectedAddress | null) => void;\n  onConfirmSelectedAddress: () => void;\n}\n\nexport type LedgerLoginHookReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType,\n  LedgerLoginHookCustomStateType\n];\n\nexport const useAddressScreens = () => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [startIndex, setStartIndex] = useState(0);\n  const [accounts, setAccounts] = useState<string[]>([]);\n  const [selectedAddress, setSelectedAddress] =\n    useState<SelectedAddress | null>(null);\n\n  const [showAddressList, setShowAddressList] = useState(false);\n\n  const onSelectAddress = (newSelectedAddress: SelectedAddress | null) => {\n    setSelectedAddress(newSelectedAddress);\n  };\n\n  const onGoToNextPage = () => {\n    setSelectedAddress(null);\n    setStartIndex((current) => current + 1);\n  };\n\n  const onGoToSpecificPage = (page: number) => {\n    setSelectedAddress(null);\n    setStartIndex(page);\n  };\n\n  const onGoToPrevPage = () => {\n    setSelectedAddress(null);\n    setStartIndex((current) => (current === 0 ? 0 : current - 1));\n  };\n\n  return {\n    accounts,\n    defaultAddressesPerPage,\n    error,\n    isLoading,\n    onGoToNextPage,\n    onGoToPrevPage,\n    onGoToSpecificPage,\n    onSelectAddress,\n    selectedAddress,\n    setAccounts,\n    setError,\n    setIsLoading,\n    setShowAddressList,\n    showAddressList,\n    startIndex\n  };\n};\n"],
  "mappings": "wCAAA,qCAMA,GAAM,GAA0B,GAwBnB,EAAoB,IAAM,CACrC,GAAM,CAAC,EAAO,GAAY,EAAS,EAAE,EAC/B,CAAC,EAAW,GAAgB,EAAS,EAAK,EAC1C,CAAC,EAAY,GAAiB,EAAS,CAAC,EACxC,CAAC,EAAU,GAAe,EAAmB,CAAC,CAAC,EAC/C,CAAC,EAAiB,GACtB,EAAiC,IAAI,EAEjC,CAAC,EAAiB,GAAsB,EAAS,EAAK,EAqB5D,MAAO,CACL,WACA,0BACA,QACA,YACA,eApBqB,IAAM,CAC3B,EAAmB,IAAI,EACvB,EAAc,AAAC,GAAY,EAAU,CAAC,CACxC,EAkBE,eAXqB,IAAM,CAC3B,EAAmB,IAAI,EACvB,EAAc,AAAC,GAAa,IAAY,EAAI,EAAI,EAAU,CAAE,CAC9D,EASE,mBAjByB,AAAC,GAAiB,CAC3C,EAAmB,IAAI,EACvB,EAAc,CAAI,CACpB,EAeE,gBA3BsB,AAAC,GAA+C,CACtE,EAAmB,CAAkB,CACvC,EA0BE,kBACA,cACA,WACA,eACA,qBACA,kBACA,YACF,CACF",
  "names": []
}
