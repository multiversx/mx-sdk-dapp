{
  "version": 3,
  "sources": ["../../src/UI/ledger/LedgerLoginContainer/AddressRow/AddressRow.tsx"],
  "sourcesContent": ["import React from 'react';\nimport classNames from 'classnames';\n\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { FormatAmount } from 'UI/FormatAmount/FormatAmount';\nimport { Trim } from 'UI/Trim';\nimport { getEgldLabel } from 'utils/network/getEgldLabel';\n\nimport { WithClassnameType } from '../../../types';\n\nexport interface AddressRowPropsType\n  extends WithClassnameType,\n    WithStylesImportType {\n  selectedAddress?: string;\n  index: number;\n  address: string;\n  balance: string;\n  onSelectAddress: (address: { address: string; index: number } | null) => void;\n  ledgerModalTableSelectedItemClassName?: string;\n  disabled: boolean;\n}\n\nconst AddressRowComponent = ({\n  address,\n  index,\n  balance,\n  selectedAddress,\n  onSelectAddress,\n  className = 'dapp-ledger-address-row',\n  ledgerModalTableSelectedItemClassName,\n  disabled = false,\n  styles\n}: AddressRowPropsType) => (\n  <div\n    onClick={() => onSelectAddress({ address, index })}\n    className={classNames(\n      styles?.ledgerAddressTableBodyItem,\n      {\n        [ledgerModalTableSelectedItemClassName ?? '']:\n          selectedAddress === address,\n        [styles?.ledgerAddressTableBodyItemSelected ?? '']:\n          selectedAddress === address\n      },\n      className\n    )}\n  >\n    <div\n      className={classNames(styles?.ledgerAddressTableBodyItemData, {\n        disabled\n      })}\n    >\n      <input\n        type='radio'\n        id={`check_${address}`}\n        disabled={disabled}\n        onChange={() => onSelectAddress({ address, index })}\n        data-testid={`check_${address}`}\n        role='button'\n        checked={selectedAddress === address}\n        className={styles?.ledgerAddressTableBodyItemDataInput}\n      />\n\n      <label\n        htmlFor={`check_${index}`}\n        role='button'\n        data-testid={`label_${index}`}\n        className={styles?.ledgerAddressTableBodyItemDataLabel}\n      >\n        <div className={styles?.ledgerAddressTableBodyItemDataValue}>\n          <Trim text={address} />\n        </div>\n      </label>\n    </div>\n\n    <div className={styles?.ledgerAddressTableBodyItemData}>\n      <FormatAmount value={balance} egldLabel={getEgldLabel()} />\n    </div>\n\n    <div className={styles?.ledgerAddressTableBodyItemData}>{index}</div>\n  </div>\n);\n\nexport const AddressRow = withStyles(AddressRowComponent, {\n  ssrStyles: () =>\n    import('UI/ledger/LedgerLoginContainer/AddressRow/addressRowStyles.scss'),\n  clientStyles: () =>\n    require('UI/ledger/LedgerLoginContainer/AddressRow/addressRowStyles.scss')\n      .default\n});\n"],
  "mappings": "8PAAA,yBACA,0BAqBA,GAAM,GAAsB,CAAC,CAC3B,UACA,QACA,UACA,kBACA,kBACA,YAAY,0BACZ,wCACA,WAAW,GACX,YACsB,CAhCxB,MAiCE,uBAAC,OACC,QAAS,IAAM,EAAgB,CAAE,UAAS,OAAM,CAAC,EACjD,UAAW,EACT,iBAAQ,2BACR,CACE,CAAC,UAAyC,IACxC,IAAoB,EACtB,CAAC,oBAAQ,qCAAR,OAA8C,IAC7C,IAAoB,CACxB,EACA,CACF,GAEA,gBAAC,OACC,UAAW,EAAW,iBAAQ,+BAAgC,CAC5D,UACF,CAAC,GAED,gBAAC,SACC,KAAK,QACL,GAAI,SAAS,IACb,SAAU,EACV,SAAU,IAAM,EAAgB,CAAE,UAAS,OAAM,CAAC,EAClD,cAAa,SAAS,IACtB,KAAK,SACL,QAAS,IAAoB,EAC7B,UAAW,iBAAQ,oCACrB,EAEA,gBAAC,SACC,QAAS,SAAS,IAClB,KAAK,SACL,cAAa,SAAS,IACtB,UAAW,iBAAQ,qCAEnB,gBAAC,OAAI,UAAW,iBAAQ,qCACtB,gBAAC,GAAK,KAAM,EAAS,CACvB,CACF,CACF,EAEA,gBAAC,OAAI,UAAW,iBAAQ,gCACtB,gBAAC,GAAa,MAAO,EAAS,UAAW,EAAa,EAAG,CAC3D,EAEA,gBAAC,OAAI,UAAW,iBAAQ,gCAAiC,CAAM,CACjE,GAGW,EAAa,EAAW,EAAqB,CACxD,UAAW,IACT,OAAO,oEACT,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
