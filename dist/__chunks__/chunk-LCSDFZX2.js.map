{
  "version": 3,
  "sources": ["../../src/UI/UsdValue/UsdValue.tsx"],
  "sourcesContent": ["import React from 'react';\nimport classNames from 'classnames';\nimport { ZERO } from 'constants/index';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { getUsdValue } from 'utils/operations/getUsdValue';\nimport { WithClassnameType } from '../types';\n\n// TODO: Rename to \"UsdValuePropsType\" when sdk-dapp@3.0.0\nexport interface UsdValueType extends WithClassnameType {\n  amount: string;\n  usd: number;\n  decimals?: number;\n  addEqualSign?: boolean;\n  'data-testid'?: string;\n}\n\nconst UsdValueComponent = ({\n  amount,\n  usd,\n  decimals,\n  addEqualSign,\n  className,\n  globalStyles,\n  ...dataTestId\n}: UsdValueType & WithStylesImportType) => {\n  const value = getUsdValue({\n    amount,\n    usd,\n    decimals,\n    addEqualSign: addEqualSign ?? true\n  });\n\n  const isAmountZero = `${amount}` === ZERO;\n  const displayedValue = isAmountZero ? `= $${ZERO}` : value;\n\n  return (\n    <small\n      className={classNames(\n        globalStyles?.formText,\n        globalStyles?.textSecondary,\n        globalStyles?.mt0,\n        className ?? 'dapp-usd-value'\n      )}\n      {...dataTestId}\n    >\n      {displayedValue}\n    </small>\n  );\n};\n\nexport const UsdValue = withStyles(UsdValueComponent, {});\n"],
  "mappings": "uLAAA,IAEA,IAFA,qBACA,0BAGA,IAYA,GAAM,GAAoB,AAAC,GAQgB,CARhB,QACzB,UACA,MACA,WACA,eACA,YACA,gBANyB,EAOtB,IAPsB,EAOtB,CANH,SACA,MACA,WACA,eACA,YACA,iBAGA,GAAM,GAAQ,EAAY,CACxB,SACA,MACA,WACA,aAAc,UAAgB,EAChC,CAAC,EAGK,EAAiB,AADF,GAAG,MAAa,EACC,MAAM,IAAS,EAErD,MACE,iBAAC,WACC,UAAW,EACT,iBAAc,SACd,iBAAc,cACd,iBAAc,IACd,UAAa,gBACf,GACI,GAEH,CACH,CAEJ,EAEa,EAAW,EAAW,EAAmB,CAAC,CAAC",
  "names": []
}
