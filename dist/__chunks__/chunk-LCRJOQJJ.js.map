{
  "version": 3,
  "sources": ["../../src/UI/SignTransactionsModals/SignWithDeviceModal/SignStep.tsx"],
  "sourcesContent": ["import React, { MouseEvent, useEffect, useState } from 'react';\nimport { faArrowLeft, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { DataTestIdsEnum } from 'constants/index';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { SignStepBody, SignStepBodyPropsType } from './components';\nimport { ProgressHeader } from './components/ProgressHeader';\nimport { ProgressHeaderPropsType } from './components/ProgressHeader/ProgressHeader.types';\nimport {\n  SignStepPropsType as SignStepType,\n  SignStepInnerClassesType\n} from './signWithDeviceModal.types';\nexport { SignStepType, SignStepInnerClassesType };\n\nconst SignStepComponent = (props: SignStepType & WithStylesImportType) => {\n  const {\n    allTransactions,\n    className,\n    currentStep,\n    currentTransaction,\n    GuardianScreen,\n    error,\n    globalStyles,\n    handleClose,\n    handleSubmit,\n    isLastTransaction,\n    onPrev,\n    onSignTransaction,\n    signStepInnerClasses,\n    styles,\n    title,\n    waitingForDevice\n  } = props;\n\n  const [showGuardianScreen, setShowGuardianScreen] = useState(false);\n\n  // a unique mapping between nonce + data and step to prevent signing same transaction twice\n  const [nonceDataStepMap, setNonceDataStepMap] = useState<\n    Record<number, number | undefined>\n  >({});\n\n  if (!currentTransaction) {\n    return null;\n  }\n\n  const currentNonce = currentTransaction.transaction.getNonce().valueOf();\n  const currentNonceData = `${currentNonce.toString()}_${\n    currentTransaction.transactionTokenInfo.multiTxData\n  }_${currentTransaction.transactionIndex}`;\n\n  useEffect(() => {\n    const isCurrentNonceRegistered =\n      Object.keys(nonceDataStepMap).includes(currentNonceData);\n    const isCurrentStepRegistered =\n      Object.values(nonceDataStepMap).includes(currentStep);\n\n    if (isCurrentNonceRegistered || isCurrentStepRegistered) {\n      return;\n    }\n\n    setNonceDataStepMap((existing) => {\n      return {\n        ...existing,\n        [currentNonceData]: currentStep\n      };\n    });\n  }, [currentNonceData, currentStep]);\n\n  const transactionData = currentTransaction.transaction.getData().toString();\n\n  const { buttonsWrapperClassName, buttonClassName } =\n    signStepInnerClasses || {};\n\n  const { type, multiTxData } = currentTransaction.transactionTokenInfo;\n\n  const isFirst = currentStep === 0;\n\n  const onCloseClick = (event: MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n\n    if (isFirst) {\n      handleClose();\n    } else {\n      onPrev();\n    }\n  };\n\n  const signLastTransaction = isLastTransaction && !waitingForDevice;\n\n  const onSubmit = async () => {\n    await onSignTransaction();\n\n    if (signLastTransaction && GuardianScreen) {\n      return setShowGuardianScreen(true);\n    }\n\n    if (signLastTransaction && handleSubmit) {\n      handleSubmit();\n    }\n  };\n\n  const continueWithoutSigning =\n    type && multiTxData && !transactionData.endsWith(multiTxData);\n\n  let signBtnLabel = 'Sign & Continue';\n  signBtnLabel = waitingForDevice ? 'Check your Ledger' : signBtnLabel;\n  signBtnLabel = signLastTransaction ? 'Sign & Submit' : signBtnLabel;\n  signBtnLabel = continueWithoutSigning ? 'Continue' : signBtnLabel;\n\n  const signStepBodyProps: SignStepBodyPropsType = {\n    currentTransaction,\n    error,\n    allTransactions,\n    currentStep,\n    isGuarded: Boolean(GuardianScreen),\n    signStepInnerClasses\n  };\n\n  const onGuardianScreenPrev = () => {\n    setShowGuardianScreen(false);\n  };\n\n  const signTransactionNavigationTitle =\n    allTransactions.length > 1 ? 'Sign Transactions' : 'Sign Transaction';\n\n  const confirmTransactionNavigationTitle =\n    allTransactions.length > 1 ? 'Confirm Transactions' : 'Confirm Transaction';\n\n  const defaultSignTitle =\n    allTransactions.length > 1\n      ? `Signing Transaction ${currentStep + 1} of ${allTransactions.length}`\n      : title || 'Sign Transaction';\n\n  const isGuardianScreenVisible = GuardianScreen && showGuardianScreen;\n  const signFlowTitle = isGuardianScreenVisible\n    ? 'Verify Guardian'\n    : defaultSignTitle;\n\n  const steps: ProgressHeaderPropsType['steps'] = [\n    {\n      title: signTransactionNavigationTitle,\n      active: !showGuardianScreen\n    },\n    {\n      title: confirmTransactionNavigationTitle,\n      active: showGuardianScreen,\n      hidden: !signStepBodyProps.isGuarded\n    }\n  ];\n\n  const isSigningReady = nonceDataStepMap[currentNonceData] === currentStep;\n\n  return (\n    <div\n      className={classNames(\n        styles?.modalLayoutContent,\n        styles?.spaced,\n        className,\n        { [styles?.guarded ?? '']: signStepBodyProps.isGuarded }\n      )}\n    >\n      {isGuardianScreenVisible && (\n        <div\n          onClick={onGuardianScreenPrev}\n          className={classNames(styles?.modalLayoutHeadingIcon, styles?.back)}\n        >\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </div>\n      )}\n\n      <div\n        onClick={onCloseClick}\n        className={classNames(styles?.modalLayoutHeadingIcon, styles?.close)}\n      >\n        <FontAwesomeIcon icon={faTimes} />\n      </div>\n\n      {signStepBodyProps.isGuarded && (\n        <ProgressHeader steps={steps} type='detailed' size='small' />\n      )}\n\n      <div\n        className={styles?.title}\n        data-testid={DataTestIdsEnum.signStepTitle}\n      >\n        {signFlowTitle || 'Confirm on Ledger'}\n      </div>\n\n      {isGuardianScreenVisible ? (\n        <GuardianScreen\n          {...props}\n          onPrev={onGuardianScreenPrev}\n          guardianFormDescription='Enter the code from your Authenticator app to verify this transaction.'\n        />\n      ) : (\n        <>\n          <SignStepBody {...signStepBodyProps} />\n\n          <div\n            className={classNames(styles?.signButtons, buttonsWrapperClassName)}\n          >\n            <button\n              id='closeButton'\n              data-testid={DataTestIdsEnum.closeButton}\n              onClick={onCloseClick}\n              className={classNames(styles?.signButtonCancel, buttonClassName)}\n            >\n              {currentStep === 0 ? 'Cancel' : 'Back'}\n            </button>\n\n            <button\n              type='button'\n              className={classNames(\n                globalStyles?.btnPrimary,\n                styles?.signButtonSubmit,\n                buttonClassName\n              )}\n              id='signBtn'\n              data-testid={DataTestIdsEnum.signBtn}\n              onClick={onSubmit}\n              disabled={waitingForDevice || !isSigningReady}\n            >\n              {isSigningReady ? signBtnLabel : 'Loading...'}\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport const SignStep = withStyles(SignStepComponent, {\n  ssrStyles: () =>\n    import(\n      'UI/SignTransactionsModals/SignWithDeviceModal/signWithDeviceModalStyles.scss'\n    ),\n  clientStyles: () =>\n    require('UI/SignTransactionsModals/SignWithDeviceModal/signWithDeviceModalStyles.scss')\n      .default\n});\n"],
  "mappings": "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",
  "names": []
}
