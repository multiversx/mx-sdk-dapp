{
  "version": 3,
  "sources": ["../../src/UI/TransactionInfo/components/transactionInfoFields/TransactionInfoFee/TransactionInfoFee.tsx"],
  "sourcesContent": ["import React from 'react';\nimport classNames from 'classnames';\nimport { DataTestIdsEnum, N_A } from 'constants/index';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { WithClassnameType, WithTransactionType } from 'UI/types';\nimport { getEgldLabel } from 'utils/network/getEgldLabel';\nimport { formatAmount } from 'utils/operations/formatAmount';\nimport { getUsdValue } from 'utils/operations/getUsdValue';\nimport { getTransactionFee } from 'utils/transactions/transactionInfoHelpers/getTransactionFee';\nimport { stringIsInteger } from 'utils/validation/stringIsInteger';\nimport { DetailItem } from '../../DetailItem';\n\nconst TransactionInfoFeeComponent = ({\n  className,\n  transaction,\n  styles\n}: WithTransactionType & WithClassnameType & WithStylesImportType) => {\n  const egldLabel = getEgldLabel();\n  const txFee = getTransactionFee(transaction);\n\n  const transactionFee =\n    txFee && stringIsInteger(txFee)\n      ? formatAmount({\n          input: txFee,\n          showLastNonZeroDecimal: true\n        })\n      : N_A;\n\n  const price =\n    transaction.price != null\n      ? getUsdValue({\n          amount: transactionFee,\n          usd: transaction.price,\n          decimals: 4,\n          addEqualSign: true\n        })\n      : N_A;\n\n  const fee =\n    transaction.gasUsed != null ? (\n      <>\n        {transactionFee} {egldLabel}{' '}\n        <span className={styles?.price}>({price})</span>\n      </>\n    ) : (\n      <span className={styles?.price}>{N_A}</span>\n    );\n\n  return (\n    <DetailItem\n      title='Transaction Fee'\n      className={classNames(styles?.fee, className)}\n    >\n      <span data-testid={DataTestIdsEnum.transactionInfoFee}>{fee}</span>\n    </DetailItem>\n  );\n};\n\nexport const TransactionInfoFee = withStyles(TransactionInfoFeeComponent, {\n  ssrStyles: () =>\n    import(\n      'UI/TransactionInfo/components/transactionInfoFields/TransactionInfoFee/styles.scss'\n    ),\n  clientStyles: () =>\n    require('UI/TransactionInfo/components/transactionInfoFields/TransactionInfoFee/styles.scss')\n      .default\n});\n"],
  "mappings": "icAAA,IAEA,IAFA,qBACA,0BAKA,IACA,IACA,IACA,IAGA,GAAM,GAA8B,CAAC,CACnC,YACA,cACA,YACoE,CACpE,GAAM,GAAY,EAAa,EACzB,EAAQ,EAAkB,CAAW,EAErC,EACJ,GAAS,EAAgB,CAAK,EAC1B,EAAa,CACX,MAAO,EACP,uBAAwB,EAC1B,CAAC,EACD,EAEA,EACJ,EAAY,OAAS,KACjB,EAAY,CACV,OAAQ,EACR,IAAK,EAAY,MACjB,SAAU,EACV,aAAc,EAChB,CAAC,EACD,EAEA,EACJ,EAAY,SAAW,KACrB,gCACG,EAAe,IAAE,EAAW,IAC7B,gBAAC,QAAK,UAAW,iBAAQ,OAAO,IAAE,EAAM,GAAC,CAC3C,EAEA,gBAAC,QAAK,UAAW,iBAAQ,OAAQ,CAAI,EAGzC,MACE,iBAAC,GACC,MAAM,kBACN,UAAW,EAAW,iBAAQ,IAAK,CAAS,GAE5C,gBAAC,QAAK,cAAa,sBAAqC,CAAI,CAC9D,CAEJ,EAEa,EAAqB,EAAW,EAA6B,CACxE,UAAW,IACT,OACE,uFAEJ,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
