{
  "version": 3,
  "sources": ["../../src/components/ProviderInitializer/helpers/getModifiedLoginToken.ts"],
  "sourcesContent": ["import { decodeLoginToken } from 'services/nativeAuth/helpers/decodeLoginToken';\nimport { LatestBlockHashType } from 'services/nativeAuth/helpers/getLatestBlockHash';\nimport { nativeAuth } from 'services/nativeAuth/nativeAuth';\n\nexport interface GetMultiSigLoginTokenType {\n  loginToken?: string;\n  extraInfoData: {\n    multisig?: string;\n    impersonate?: string;\n  };\n}\n\nexport const getModifiedLoginToken = async ({\n  loginToken,\n  extraInfoData\n}: GetMultiSigLoginTokenType) => {\n  if (loginToken == null || Object.keys(extraInfoData).length === 0) {\n    return null;\n  }\n\n  const data = decodeLoginToken(String(loginToken));\n  const { timestamp, ...rest } = data?.extraInfo || {};\n\n  const isValidData = data && timestamp != null;\n\n  if (!isValidData) {\n    return null;\n  }\n  const latestBlockInfo: LatestBlockHashType = {\n    hash: String(data?.blockHash),\n    timestamp: Number(timestamp)\n  };\n\n  const tokenLogin = await nativeAuth({\n    extraInfo: { ...rest, ...extraInfoData },\n    expirySeconds: data?.ttl,\n    origin: data?.origin\n  }).initialize({\n    latestBlockInfo\n  });\n\n  return tokenLogin;\n};\n"],
  "mappings": "6IAAA,IAYO,GAAM,GAAwB,AAAO,GAGX,UAHW,GAGX,UAHW,CAC1C,aACA,iBAC+B,CAC/B,GAAI,GAAc,MAAQ,OAAO,KAAK,CAAa,EAAE,SAAW,EAC9D,MAAO,MAGT,GAAM,GAAO,EAAiB,OAAO,CAAU,CAAC,EACjB,oBAAM,YAAa,CAAC,EAA3C,cAAuB,EAAT,IAAS,EAAT,CAAd,cAIR,GAAI,CAFgB,IAAQ,GAAa,MAGvC,MAAO,MAET,GAAM,GAAuC,CAC3C,KAAM,OAAO,iBAAM,SAAS,EAC5B,UAAW,OAAO,CAAS,CAC7B,EAUA,MARmB,MAAM,GAAW,CAClC,UAAW,OAAK,GAAS,GACzB,cAAe,iBAAM,IACrB,OAAQ,iBAAM,MAChB,CAAC,EAAE,WAAW,CACZ,iBACF,CAAC,CAGH",
  "names": []
}
