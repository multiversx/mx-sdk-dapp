{
  "version": 3,
  "sources": ["../../src/UI/TransactionInfo/components/DataField/DataField.tsx"],
  "sourcesContent": ["import React, { MouseEvent, useState } from 'react';\nimport classNames from 'classnames';\nimport { N_A } from 'constants/index';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { ScamInfoType } from 'types/account.types';\nimport { DataDecode } from 'UI/TransactionInfo/components/DataDecode/DataDecode';\nimport { truncate } from 'utils/operations/truncate';\nimport { getScamFlag } from 'utils/transactions/transactionInfoHelpers/getScamFlag';\nimport { useDataDecodeMethod } from 'utils/transactions/transactionInfoHelpers/useDataDecodeMethod';\nimport { Linkified, ModalLink } from './components';\n\nconst DISPLAYED_DATA_LENGTH = 1000000;\n\nexport interface DataFieldPropsType {\n  data?: string;\n  scamInfo?: ScamInfoType;\n}\n\nconst DataFieldComponent = ({\n  data,\n  scamInfo,\n  globalStyles,\n  styles\n}: DataFieldPropsType & WithStylesImportType) => {\n  const { initialDecodeMethod, setDecodeMethod } = useDataDecodeMethod();\n  const [showData, setShowData] = useState(false);\n\n  const show = (event: MouseEvent) => {\n    event.preventDefault();\n    setShowData((existing) => !existing);\n  };\n\n  const dataString = data ? Buffer.from(data, 'base64').toString() : N_A;\n  const { textWithLinks, message, isSuspicious } = getScamFlag({\n    message: dataString,\n    scamInfo\n  });\n\n  return (\n    <>\n      {showData ? (\n        <div\n          className={classNames(\n            globalStyles?.formControl,\n            globalStyles?.col,\n            globalStyles?.mt1\n          )}\n        >\n          <Linkified\n            linkComponent={ModalLink}\n            target='_blank'\n            rel='noreferrer noopener'\n          >\n            {textWithLinks}\n          </Linkified>\n        </div>\n      ) : (\n        <DataDecode\n          value={truncate(message, DISPLAYED_DATA_LENGTH)}\n          initialDecodeMethod={initialDecodeMethod}\n          setDecodeMethod={setDecodeMethod}\n        />\n      )}\n\n      {isSuspicious && (\n        <a\n          href='/#'\n          onClick={show}\n          className={classNames(globalStyles?.textMuted, styles?.smallFont)}\n        >\n          {!showData ? 'Show' : 'Hide'} original message\n        </a>\n      )}\n    </>\n  );\n};\n\nexport const DataField = withStyles(DataFieldComponent, {\n  ssrStyles: () =>\n    import('UI/TransactionInfo/components/DataField/dataField.module.scss'),\n  clientStyles: () =>\n    require('UI/TransactionInfo/components/DataField/dataField.module.scss')\n      .default\n});\n"],
  "mappings": "ubAAA,IAEA,IAFA,oCACA,0BAKA,IACA,IACA,IAGA,GAAM,GAAwB,IAOxB,EAAqB,CAAC,CAC1B,OACA,WACA,eACA,YAC+C,CAC/C,GAAM,CAAE,sBAAqB,mBAAoB,EAAoB,EAC/D,CAAC,EAAU,GAAe,EAAS,EAAK,EAExC,EAAO,AAAC,GAAsB,CAClC,EAAM,eAAe,EACrB,EAAY,AAAC,GAAa,CAAC,CAAQ,CACrC,EAEM,EAAa,EAAO,SAAO,KAAK,EAAM,QAAQ,EAAE,SAAS,EAAI,EAC7D,CAAE,gBAAe,UAAS,gBAAiB,EAAY,CAC3D,QAAS,EACT,UACF,CAAC,EAED,MACE,iCACG,EACC,gBAAC,OACC,UAAW,EACT,iBAAc,YACd,iBAAc,IACd,iBAAc,GAChB,GAEA,gBAAC,GACC,cAAe,EACf,OAAO,SACP,IAAI,uBAEH,CACH,CACF,EAEA,gBAAC,GACC,MAAO,EAAS,EAAS,CAAqB,EAC9C,oBAAqB,EACrB,gBAAiB,EACnB,EAGD,GACC,gBAAC,KACC,KAAK,KACL,QAAS,EACT,UAAW,EAAW,iBAAc,UAAW,iBAAQ,SAAS,GAE/D,AAAC,EAAoB,OAAT,OAAgB,mBAC/B,CAEJ,CAEJ,EAEa,EAAY,EAAW,EAAoB,CACtD,UAAW,IACT,OAAO,kEACT,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
