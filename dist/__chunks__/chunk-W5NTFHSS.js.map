{
  "version": 3,
  "sources": ["../../src/hooks/login/useExtensionLogin.ts"],
  "sourcesContent": ["import { useState } from 'react';\nimport { ExtensionProvider } from '@multiversx/sdk-extension-provider';\n\nimport { SECOND_LOGIN_ATTEMPT_ERROR } from 'constants/errorsMessages';\nimport { setAccountProvider } from 'providers/accountProvider';\nimport { loginAction } from 'reduxStore/commonActions';\nimport { useDispatch } from 'reduxStore/DappProviderContext';\nimport {\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType,\n  OnProviderLoginType\n} from 'types';\nimport { LoginMethodsEnum } from 'types/enums.types';\nimport { getIsLoggedIn } from 'utils/getIsLoggedIn';\nimport { optionalRedirect } from 'utils/internal';\nimport { addOriginToLocationPath } from 'utils/window';\nimport { getDefaultCallbackUrl } from 'utils/window';\nimport { clearInitiatedLogins } from './helpers';\nimport { useLoginService } from './useLoginService';\n\nexport type UseExtensionLoginReturnType = [\n  InitiateLoginFunctionType,\n  LoginHookGenericStateType\n];\n\nexport const useExtensionLogin = ({\n  callbackRoute,\n  token: tokenToSign,\n  nativeAuth,\n  onLoginRedirect\n}: OnProviderLoginType): UseExtensionLoginReturnType => {\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const hasNativeAuth = nativeAuth != null;\n  const loginService = useLoginService(nativeAuth);\n  let token = tokenToSign;\n\n  const dispatch = useDispatch();\n  const isLoggedIn = getIsLoggedIn();\n\n  async function initiateLogin() {\n    if (isLoggedIn) {\n      throw new Error(SECOND_LOGIN_ATTEMPT_ERROR);\n    }\n\n    clearInitiatedLogins();\n\n    setIsLoading(true);\n    const provider: ExtensionProvider = ExtensionProvider.getInstance();\n\n    try {\n      const isSuccessfullyInitialized: boolean = await provider.init();\n\n      if (!isSuccessfullyInitialized) {\n        console.warn(\n          'Something went wrong trying to redirect to wallet login..'\n        );\n        return;\n      }\n\n      const defaultCallbackUrl = getDefaultCallbackUrl();\n      const callbackUrl: string = encodeURIComponent(\n        addOriginToLocationPath(callbackRoute ?? defaultCallbackUrl)\n      );\n\n      if (hasNativeAuth && !token) {\n        token = await loginService.getNativeAuthLoginToken();\n\n        // Fetching block failed\n        if (!token) {\n          console.warn('Fetching block failed. Login cancelled.');\n          return;\n        }\n      }\n\n      if (token) {\n        loginService.setLoginToken(token);\n      }\n\n      const providerLoginData = {\n        callbackUrl,\n        ...(token && { token })\n      };\n\n      const { signature, address } = await provider.login(providerLoginData);\n\n      setAccountProvider(provider);\n\n      if (!address) {\n        setIsLoading(false);\n        console.warn('Login cancelled.');\n        setError('Login cancelled');\n        return;\n      }\n\n      if (signature && token) {\n        loginService.setTokenLoginInfo({\n          signature,\n          address\n        });\n      }\n\n      dispatch(\n        loginAction({ address, loginMethod: LoginMethodsEnum.extension })\n      );\n\n      optionalRedirect({\n        callbackRoute,\n        onLoginRedirect,\n        options: { signature, address }\n      });\n    } catch (error) {\n      console.error('error logging in', error);\n      // TODO: can be any or typed error\n      setError('error logging in' + (error as any).message);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  const loginFailed = Boolean(error);\n\n  return [\n    initiateLogin,\n    {\n      loginFailed,\n      error,\n      isLoading: isLoading && !loginFailed,\n      isLoggedIn: isLoggedIn && !loginFailed\n    }\n  ];\n};\n"],
  "mappings": "2iBAAA,IAGA,IAHA,iCACA,uEAIA,IAOA,IAEA,IACA,IACA,IASO,GAAM,IAAoB,CAAC,CAChC,gBACA,MAAO,EACP,aACA,qBACsD,CACtD,GAAM,CAAC,EAAO,GAAY,EAAS,EAAE,EAC/B,CAAC,EAAW,GAAgB,EAAS,EAAK,EAC1C,EAAgB,GAAc,KAC9B,EAAe,EAAgB,CAAU,EAC3C,EAAQ,EAEN,EAAW,EAAY,EACvB,EAAa,EAAc,EAEjC,YAA+B,gCAC7B,GAAI,EACF,KAAM,IAAI,OAAM,CAA0B,EAG5C,EAAqB,EAErB,EAAa,EAAI,EACjB,GAAM,GAA8B,EAAkB,YAAY,EAElE,GAAI,CAGF,GAAI,CAFuC,MAAM,GAAS,KAAK,GAE/B,CAC9B,QAAQ,KACN,2DACF,EACA,MACF,CAEA,GAAM,GAAqB,EAAsB,EAC3C,EAAsB,mBAC1B,EAAwB,UAAiB,CAAkB,CAC7D,EAEA,GAAI,GAAiB,CAAC,GACpB,GAAQ,KAAM,GAAa,wBAAwB,EAG/C,CAAC,GAAO,CACV,QAAQ,KAAK,yCAAyC,EACtD,MACF,CAGF,AAAI,GACF,EAAa,cAAc,CAAK,EAGlC,GAAM,GAAoB,GACxB,eACI,GAAS,CAAE,OAAM,GAGjB,CAAE,YAAW,WAAY,KAAM,GAAS,MAAM,CAAiB,EAIrE,GAFA,EAAmB,CAAQ,EAEvB,CAAC,EAAS,CACZ,EAAa,EAAK,EAClB,QAAQ,KAAK,kBAAkB,EAC/B,EAAS,iBAAiB,EAC1B,MACF,CAEA,AAAI,GAAa,GACf,EAAa,kBAAkB,CAC7B,YACA,SACF,CAAC,EAGH,EACE,EAAY,CAAE,UAAS,YAAa,WAA2B,CAAC,CAClE,EAEA,EAAiB,CACf,gBACA,kBACA,QAAS,CAAE,YAAW,SAAQ,CAChC,CAAC,CACH,OAAS,EAAP,CACA,QAAQ,MAAM,mBAAoB,CAAK,EAEvC,EAAS,mBAAsB,EAAc,OAAO,CACtD,QAAE,CACA,EAAa,EAAK,CACpB,CACF,GAEA,GAAM,GAAc,QAAQ,CAAK,EAEjC,MAAO,CACL,EACA,CACE,cACA,QACA,UAAW,GAAa,CAAC,EACzB,WAAY,GAAc,CAAC,CAC7B,CACF,CACF",
  "names": []
}
