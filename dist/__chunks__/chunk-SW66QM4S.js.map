{
  "version": 3,
  "sources": ["../../src/UI/SignTransactionsModals/SignWithDeviceModal/SignWithDeviceModal.tsx"],
  "sourcesContent": ["import React from 'react';\nimport classNames from 'classnames';\nimport { withStyles, WithStylesImportType } from 'hocs/withStyles';\nimport { useGetAccount, useSignTransactionsWithDevice } from 'hooks';\nimport { SignModalPropsType } from 'types';\nimport { ModalContainer } from 'UI/ModalContainer/ModalContainer';\nimport { Loader } from '../../Loader';\nimport { SignStep } from './SignStep';\n\nconst SignWithDeviceModalComponent = ({\n  handleClose,\n  handleSubmit,\n  error,\n  className = 'dapp-device-modal',\n  verifyReceiverScam = true,\n  GuardianScreen,\n  title = 'Confirm transaction',\n  signStepInnerClasses,\n  globalStyles,\n  styles\n}: SignModalPropsType & WithStylesImportType) => {\n  const { address } = useGetAccount();\n\n  const {\n    onSignTransaction,\n    onPrev,\n    allTransactions,\n    waitingForDevice,\n    onAbort,\n    isLastTransaction,\n    signedTransactions,\n    setSignedTransactions,\n    currentStep,\n    callbackRoute,\n    currentTransaction\n  } = useSignTransactionsWithDevice({\n    onCancel: handleClose,\n    verifyReceiverScam,\n    hasGuardianScreen: Boolean(GuardianScreen)\n  });\n\n  const isLoading = currentTransaction == null;\n\n  const classes = {\n    wrapper: classNames(\n      styles?.modalContainer,\n      styles?.walletConnect,\n      className\n    ),\n    container: classNames(globalStyles?.card, globalStyles?.container),\n    cardBody: globalStyles?.cardBody\n  };\n\n  return (\n    <ModalContainer\n      onClose={handleClose}\n      modalConfig={{\n        modalDialogClassName: classes.wrapper\n      }}\n      visible\n    >\n      <div className={classes.cardBody}>\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <SignStep\n            address={address}\n            allTransactions={allTransactions}\n            callbackRoute={callbackRoute}\n            currentStep={currentStep}\n            currentTransaction={currentTransaction}\n            error={error}\n            GuardianScreen={GuardianScreen}\n            handleClose={onAbort}\n            handleSubmit={handleSubmit}\n            isLastTransaction={isLastTransaction}\n            onPrev={onPrev}\n            onSignTransaction={onSignTransaction}\n            setSignedTransactions={setSignedTransactions}\n            signStepInnerClasses={signStepInnerClasses}\n            signedTransactions={signedTransactions}\n            title={title}\n            waitingForDevice={waitingForDevice}\n          />\n        )}\n      </div>\n    </ModalContainer>\n  );\n};\n\nexport const SignWithDeviceModal = withStyles(SignWithDeviceModalComponent, {\n  ssrStyles: () =>\n    import(\n      'UI/SignTransactionsModals/SignWithDeviceModal/signWithDeviceModalStyles.scss'\n    ),\n  clientStyles: () =>\n    require('UI/SignTransactionsModals/SignWithDeviceModal/signWithDeviceModalStyles.scss')\n      .default\n});\n"],
  "mappings": "8UAAA,yBACA,0BAQA,GAAM,GAA+B,CAAC,CACpC,cACA,eACA,QACA,YAAY,oBACZ,qBAAqB,GACrB,iBACA,QAAQ,sBACR,uBACA,eACA,YAC+C,CAC/C,GAAM,CAAE,WAAY,EAAc,EAE5B,CACJ,oBACA,SACA,kBACA,mBACA,UACA,oBACA,qBACA,wBACA,cACA,gBACA,sBACE,EAA8B,CAChC,SAAU,EACV,qBACA,kBAAmB,QAAQ,CAAc,CAC3C,CAAC,EAEK,EAAY,GAAsB,KAElC,EAAU,CACd,QAAS,EACP,iBAAQ,eACR,iBAAQ,cACR,CACF,EACA,UAAW,EAAW,iBAAc,KAAM,iBAAc,SAAS,EACjE,SAAU,iBAAc,QAC1B,EAEA,MACE,iBAAC,GACC,QAAS,EACT,YAAa,CACX,qBAAsB,EAAQ,OAChC,EACA,QAAO,IAEP,gBAAC,OAAI,UAAW,EAAQ,UACrB,EACC,gBAAC,MAAO,EAER,gBAAC,GACC,QAAS,EACT,gBAAiB,EACjB,cAAe,EACf,YAAa,EACb,mBAAoB,EACpB,MAAO,EACP,eAAgB,EAChB,YAAa,EACb,aAAc,EACd,kBAAmB,EACnB,OAAQ,EACR,kBAAmB,EACnB,sBAAuB,EACvB,qBAAsB,EACtB,mBAAoB,EACpB,MAAO,EACP,iBAAkB,EACpB,CAEJ,CACF,CAEJ,EAEa,EAAsB,EAAW,EAA8B,CAC1E,UAAW,IACT,OACE,iFAEJ,aAAc,IACZ,WACG,OACP,CAAC",
  "names": []
}
