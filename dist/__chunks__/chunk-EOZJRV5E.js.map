{
  "version": 3,
  "sources": ["../../src/types/enums.types.ts"],
  "sourcesContent": ["import {\n  WindowProviderRequestEnums,\n  WindowProviderResponseEnums\n} from 'lib/sdkWebWalletCrossWindowProvider';\n\nexport enum TransactionServerStatusesEnum {\n  pending = 'pending',\n  fail = 'fail',\n  invalid = 'invalid',\n  success = 'success',\n  executed = 'executed',\n  notExecuted = 'not executed',\n  rewardReverted = 'reward-reverted'\n}\n\nexport enum SignedMessageStatusesEnum {\n  pending = 'pending',\n  failed = 'failed',\n  signed = 'signed',\n  cancelled = 'cancelled'\n}\n\nexport enum TransactionBatchStatusesEnum {\n  signed = 'signed',\n  cancelled = 'cancelled',\n  success = 'success',\n  sent = 'sent',\n  fail = 'fail',\n  timedOut = 'timedOut',\n  invalid = 'invalid'\n}\n\nexport enum LoginMethodsEnum {\n  ledger = 'ledger',\n  walletconnect = 'walletconnect',\n  walletconnectv2 = 'walletconnectv2',\n  wallet = 'wallet',\n  crossWindow = 'crossWindow',\n  iframe = 'iframe',\n  extension = 'extension',\n  passkey = 'passkey',\n  metamask = 'metamask',\n  opera = 'opera',\n  extra = 'extra',\n  none = ''\n}\n\nexport enum NotificationTypesEnum {\n  warning = 'warning',\n  error = 'error',\n  success = 'success'\n}\n\nexport enum TypesOfSmartContractCallsEnum {\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTNFTTransfer = 'ESDTNFTTransfer'\n}\n\nexport enum EnvironmentsEnum {\n  testnet = 'testnet',\n  devnet = 'devnet',\n  mainnet = 'mainnet'\n}\n\nexport enum ToastsEnum {\n  custom = 'custom',\n  transaction = 'transaction'\n}\n\nexport enum TransactionTypesEnum {\n  MultiESDTNFTTransfer = 'MultiESDTNFTTransfer',\n  ESDTTransfer = 'ESDTTransfer',\n  ESDTNFTBurn = 'ESDTNFTBurn',\n  ESDTNFTTransfer = 'ESDTNFTTransfer',\n  esdtTransaction = 'esdtTransaction',\n  nftTransaction = 'nftTransaction',\n  scCall = 'scCall'\n}\n\nexport enum TransactionsDefaultTitles {\n  success = 'Transaction successful',\n  received = 'Transaction received',\n  failed = 'Transaction failed',\n  pending = 'Processing transaction',\n  timedOut = 'Transaction timed out',\n  // Appears in batch transactions when the batch status is invalid (set the batch status to invalid for each transaction)\n  invalid = 'Transaction invalid'\n}\n\nexport enum PlatformsEnum {\n  ios = 'ios',\n  reactNative = 'reactNative',\n  web = 'web',\n  webWallet = 'webWallet'\n}\n\nexport enum WebViewProviderRequestBaseEnums {\n  signTransactionsWithGuardianResponse = 'SIGN_TRANSACTIONS_WITH_GUARDIAN_RESPONSE',\n  reloginRequest = 'RELOGIN_REQUEST'\n}\n\nexport const WebViewProviderRequestEnums = {\n  ...WindowProviderRequestEnums,\n  ...WebViewProviderRequestBaseEnums\n};\n\nexport enum WebViewProviderResponseBaseEnums {\n  reloginResponse = 'RELOGIN_RESPONSE'\n}\n\nexport const WebViewProviderResponseEnums = {\n  ...WindowProviderResponseEnums,\n  ...WebViewProviderResponseBaseEnums\n};\n"],
  "mappings": "4GAAA,GAKY,GAUA,EAOA,EAUA,EAeA,EAMA,EAKA,EAMA,EAKA,EAUA,EAUA,EAOA,EAKC,EAKD,EAIC,EA9Gb,iBAKO,AAAK,EAAL,CAAK,GACV,WAAU,UACV,OAAO,OACP,UAAU,UACV,UAAU,UACV,WAAW,WACX,cAAc,eACd,iBAAiB,kBAPP,WAUA,EAAL,CAAK,GACV,WAAU,UACV,SAAS,SACT,SAAS,SACT,YAAY,YAJF,WAOA,EAAL,CAAK,GACV,UAAS,SACT,YAAY,YACZ,UAAU,UACV,OAAO,OACP,OAAO,OACP,WAAW,WACX,UAAU,UAPA,WAUA,EAAL,CAAK,GACV,UAAS,SACT,gBAAgB,gBAChB,kBAAkB,kBAClB,SAAS,SACT,cAAc,cACd,SAAS,SACT,YAAY,YACZ,UAAU,UACV,WAAW,WACX,QAAQ,QACR,QAAQ,QACR,OAAO,GAZG,WAeA,EAAL,CAAK,GACV,WAAU,UACV,QAAQ,QACR,UAAU,UAHA,WAMA,EAAL,CAAK,GACV,wBAAuB,uBACvB,kBAAkB,kBAFR,WAKA,EAAL,CAAK,GACV,WAAU,UACV,SAAS,SACT,UAAU,UAHA,WAMA,EAAL,CAAK,GACV,UAAS,SACT,cAAc,cAFJ,WAKA,EAAL,CAAK,GACV,wBAAuB,uBACvB,eAAe,eACf,cAAc,cACd,kBAAkB,kBAClB,kBAAkB,kBAClB,iBAAiB,iBACjB,SAAS,SAPC,WAUA,EAAL,CAAK,GACV,WAAU,yBACV,WAAW,uBACX,SAAS,qBACT,UAAU,yBACV,WAAW,wBAEX,UAAU,sBAPA,WAUA,EAAL,CAAK,GACV,OAAM,MACN,cAAc,cACd,MAAM,MACN,YAAY,YAJF,WAOA,EAAL,CAAK,GACV,wCAAuC,2CACvC,iBAAiB,kBAFP,WAKC,EAA8B,OACtC,GACA,GAGO,EAAL,CAAK,GACV,mBAAkB,mBADR,WAIC,EAA+B,OACvC,GACA",
  "names": []
}
