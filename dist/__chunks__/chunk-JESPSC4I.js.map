{
  "version": 3,
  "sources": ["../../src/components/ProviderInitializer/helpers/processModifiedAccount.ts"],
  "sourcesContent": ["import { getAccount } from 'utils/account/getAccount';\nimport {\n  getModifiedLoginToken,\n  GetMultiSigLoginTokenType\n} from './getModifiedLoginToken';\n\ninterface SetMultisigLoginToken<T> extends GetMultiSigLoginTokenType {\n  signature?: string;\n  address: string;\n  loginService: T;\n}\n\nexport const processModifiedAccount = async <\n  T extends {\n    setLoginToken: (loginToken: string) => void;\n    setTokenLoginInfo: ({\n      address,\n      signature\n    }: {\n      address: string;\n      signature: string;\n    }) => string | undefined;\n  }\n>({\n  loginToken: token,\n  extraInfoData,\n  address,\n  signature,\n  loginService\n}: SetMultisigLoginToken<T>) => {\n  const loginToken = await getModifiedLoginToken({\n    loginToken: token,\n    extraInfoData\n  });\n\n  const tokenAddress =\n    extraInfoData.multisig || extraInfoData.impersonate || address;\n\n  const accountAddress = loginToken != null ? tokenAddress : address;\n\n  if (loginToken != null) {\n    loginService.setLoginToken(loginToken);\n  }\n\n  if (signature) {\n    loginService.setTokenLoginInfo({ signature, address });\n  }\n\n  const account = await getAccount(accountAddress);\n\n  return account;\n};\n"],
  "mappings": "sIAAA,QAYO,GAAM,GAAyB,AAWpC,GAM8B,UAN9B,GAM8B,UAN9B,CACA,WAAY,EACZ,gBACA,UACA,YACA,gBAC8B,CAC9B,GAAM,GAAa,KAAM,GAAsB,CAC7C,WAAY,EACZ,eACF,CAAC,EAEK,EACJ,EAAc,UAAY,EAAc,aAAe,EAEnD,EAAiB,GAAc,KAAO,EAAe,EAE3D,MAAI,IAAc,MAChB,EAAa,cAAc,CAAU,EAGnC,GACF,EAAa,kBAAkB,CAAE,YAAW,SAAQ,CAAC,EAGvC,KAAM,GAAW,CAAc,CAGjD",
  "names": []
}
