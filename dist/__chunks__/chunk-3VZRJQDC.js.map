{
  "version": 3,
  "sources": ["../../src/reduxStore/slices/signedMessageInfoSlice.ts"],
  "sourcesContent": ["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { SignedMessageStatusesEnum } from 'types';\nimport { logoutAction } from '../commonActions';\n\nexport interface SignedSessionPayloadType {\n  sessionId: string;\n  errorMessage?: string;\n  signedSession: SignedSessionType;\n}\n\nexport interface SignedMessageInfoStatePayloadType {\n  errorMessage?: string;\n  isSigning: boolean;\n}\n\nexport interface SignedSessionStatusPayloadType {\n  sessionId: string;\n  status: SignedMessageStatusesEnum;\n}\n\nexport interface SignedMessageInfoType {\n  message?: string;\n  signature?: string;\n}\n\nexport interface SignedSessionType extends SignedMessageInfoType {\n  callbackUrl?: string;\n  status: SignedMessageStatusesEnum;\n}\n\nexport interface SignedMessageInfoStateType\n  extends SignedMessageInfoStatePayloadType {\n  signedSessions: {\n    [sessionId: string]: SignedSessionType;\n  };\n}\n\nconst initialState: SignedMessageInfoStateType = {\n  isSigning: false,\n  signedSessions: {}\n};\n\nexport const signedMessageInfoSlice = createSlice({\n  name: 'signedMessageInfoSliceState',\n  initialState,\n  reducers: {\n    setSignSession: (\n      state: SignedMessageInfoStateType,\n      action: PayloadAction<SignedSessionPayloadType>\n    ) => {\n      const { sessionId, signedSession, errorMessage } = action.payload;\n\n      if (errorMessage) {\n        state.errorMessage = errorMessage;\n      }\n\n      state.isSigning =\n        signedSession.status === SignedMessageStatusesEnum.pending;\n\n      state.signedSessions[sessionId] = {\n        ...state.signedSessions[sessionId],\n        ...signedSession\n      };\n    },\n    setSignSessionState: (\n      state: SignedMessageInfoStateType,\n      action: PayloadAction<SignedMessageInfoStatePayloadType>\n    ) => {\n      return {\n        ...state,\n        ...action.payload\n      };\n    },\n    clearSignedMessageInfo: () => {\n      return initialState;\n    }\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(logoutAction, () => {\n      return initialState;\n    });\n  }\n});\n\nexport const { setSignSession, clearSignedMessageInfo, setSignSessionState } =\n  signedMessageInfoSlice.actions;\n\nexport const signedMessageInfoReducer = signedMessageInfoSlice.reducer;\n"],
  "mappings": "wIAAA,kDAqCM,GAKO,EA2CE,EAAgB,EAAwB,EAG1C,EAxFb,aACA,IACA,IAmCA,AAAM,EAA2C,CAC/C,UAAW,GACX,eAAgB,CAAC,CACnB,EAEa,EAAyB,EAAY,CAChD,KAAM,8BACN,eACA,SAAU,CACR,eAAgB,CACd,EACA,IACG,CACH,GAAM,CAAE,YAAW,gBAAe,gBAAiB,EAAO,QAE1D,AAAI,GACF,GAAM,aAAe,GAGvB,EAAM,UACJ,EAAc,SAAW,UAE3B,EAAM,eAAe,GAAa,OAC7B,EAAM,eAAe,IACrB,EAEP,EACA,oBAAqB,CACnB,EACA,IAEO,OACF,GACA,EAAO,SAGd,uBAAwB,IACf,CAEX,EAEA,cAAe,AAAC,GAAY,CAC1B,EAAQ,QAAQ,EAAc,IACrB,CACR,CACH,CACF,CAAC,EAEY,CArFb,AAqFe,iBArFf,AAqF+B,yBArF/B,AAqFuD,uBACrD,EAAuB,QAEZ,EAA2B,EAAuB",
  "names": []
}
